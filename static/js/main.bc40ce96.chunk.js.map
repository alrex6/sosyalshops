{"version":3,"sources":["Context/AppReducer.js","Context/InitialState.js","common/Context/GlobalProvider2.js","Context/GlobalProvider.js","common/Context/GlobalProvider.js","common/HtmlComponents/Rating.js","common/Components/UserImg.js","common/HtmlComponents/UserLink.js","common/HtmlComponents/MoreInfo.js","common/HtmlComponents/UserInfoDiv.js","common/Components/ProfileDiv.js","common/HtmlComponents/InsidePageWrapper.js","common/List/ReviewList.js","common/Components/Reviews.js","common/HtmlComponents/Tab.js","common/Components/PageNav.js","common/HtmlComponents/SiteSpan.js","common/Components/DetailsDiv.js","common/List/PostList.js","common/Components/PostsDiv.js","common/Views/ProfilePage.js","common/List/MsgHeaderList.js","common/Components/MessageHeaders.js","common/List/MsgList.js","common/Components/Messages.js","common/Views/MessagesPage.js","List/ItemList.js","Views/ListPage.js","common/List/DataList.js","common/Views/DataPage.js","HtmlComponents/Marker.js","common/List/HintList.js","common/HtmlComponents/SearchHints.js","common/HtmlComponents/Search.js","Components/MapSearchComponent.js","Components/SetLocation.js","common/HtmlComponents/Note.js","Components/SetGroserMode.js","Views/MapPage.js","common/HtmlComponents/UploadPhoto.js","common/Components/UploadProfilePhoto.js","common/HtmlComponents/ErrorLog.js","common/Components/ChangePassword.js","common/Components/EditProfile.js","common/Views/EditUserPage.js","common/List/JoinRequestList.js","common/Components/JoinRequests.js","common/List/MemberList.js","common/Components/Members.js","common/Views/CompanyPage.js","common/Components/Deposit.js","common/Components/Withdraw.js","common/Components/SendMoney.js","common/List/TransactionList.js","common/Components/Transactions.js","common/Views/WalletPage.js","List/ShapperList.js","Components/ShappersDiv.js","List/CustomerList.js","Components/CustomersDiv.js","Views/ShappersPage.js","common/Views/HomePage.js","common/List/UserList.js","common/List/SerchItemList.js","common/Components/SearchDiv.js","common/Views/SearchPage.js","common/Components/SerchItemsDiv.js","common/Views/SerchPage.js","common/Components/VerifyAccount.js","common/Components/EditVerifyAccount.js","common/Views/VerifyAccountPage.js","common/List/SearchTagList.js","common/Views/SearchTagsPage.js","common/Components/SideNav.js","MainViews/InsidePages.js","common/Views/LoginPage.js","common/Views/VerificationPage.js","common/Components/ForgotPass.js","common/Components/ConfirmForgotPass.js","common/Views/ForgotPassPage.js","common/Views/RegisterPage.js","common/MainViews/OutsidePages.js","common/HtmlComponents/CustomToast.js","common/HtmlComponents/AppModal.js","common/HtmlComponents/InsertComponent.js","common/Modals/NewMsgModal.js","common/Modals/StartPointModal.js","common/Modals/YesNoModal.js","common/Modals/MoreOptionsModal.js","common/Modals/HintsModal.js","common/MainViews/Pages.js","Components/OtherUserItems.js","common/HtmlComponents/OtherPage.js","common/Views/OtherProfilePage.js","Views/OtherUserList.js","common/Views/OtherPostPage.js","Modals/NewItemModal.js","common/Modals/ReviewModal.js","common/Modals/VerifiedInfoModal.js","common/Modals/BuyDataModal.js","common/Modals/ImageModal.js","Modals/UploadItemPhotoModal.js","common/Modals/SearchOptionsModal.js","common/Modals/NewPostModal.js","common/Modals/PostOptionsModal.js","common/Modals/UploadVerifiedPhotoModal.js","common/Modals/NewTagModal.js","common/Modals/NewSerchItemModal.js","common/Modals/InfoModal.js","common/Modals/BidModal.js","common/Modals/DetailsModal.js","Modals/GroserModal.js","MainViews/Pages.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","console","log","payload","initialState","appData","name","sosyalName","siteID","sosyalID","version","versionSosyal","userData","token","userID","username","description","tags","windowSize","loggedIn","groserMode","imgURL","country","dataBal","totalAddtlData","balance","bidBal","bidAmt","companyID","companyUsername","rating","numOfRaters","ratingVerified","numOfRatersVerified","isSosyal","followedUsers","joinReqs","company","verifiedUser","position","lat","lng","routerID","confirmLogin","reqID","code","currentPage","front","back","gotUserData","showingToast","showingOtherUser","showingOtherUserList","showingOtherPost","showingChatPage","showingOtherPage","showingPageNav","openingMsgModal","openingStartPtModal","openingSingleModal","openingGroserModal","openingYesNoModal","openingMoreOptionsModal","openingHintsModal","pageNum","otherPageNum","photoPassword","production","verification","email","isShappers","sosyalData","socketToken","verifiedDataSet","verifiedData","globals","numOfItems","numOfPosts","varNames","beginPath","beginPathProduction","beginPathProductionBlags","shappersPort","shapsPort","blagsPort","shapsName","shappersName","shappersSiteID","shapsSiteID","devApi","apiPath","blagsApiPath","blagsServerPath","imgPath","itemsImgPath","blagsImgPath","imgPathBlags","verifiedPhotoPath","limits","errorCodes","consumption","minPayments","countries","otherUserData","otherUserListData","otherPostData","toastData","message","duration","style","isError","msgModalData","startPtModalData","value","callbackFunc","singleModalData","data","moreOptionsModalData","options","onClickOptionFunc","otherPageData","groserModalData","isMinimized","yesNoModalData","question","hintsModalData","isUserSearch","hint","pageNavData","startPt","key","GlobalProvider","apiCall","url","forceUpdate","a","axios","method","headers","response","globalError","status","checkErrors","showToast","errorExist","forEach","errorCode","openSingleModal","div","logout","getUserData","initiateUserData","localStorage","setItem","JSON","stringify","responseSosyal","initiateSosyalData","updateUserData","checkPassInput","password","minChar","min","numUpper","match","length","numLower","numInt","checkRepeatPassInput","repeatPass","checkUsernameInput","label","maxChar","max","specialCharUsername","convertStrToNum","str","num","convertNumToStr","getDelayer","timeOutID","funcToRun","clearTimeout","setTimeout","funcDelayer","timeOfDelay","changeOutsidePage","page","toggleNav","openingNav","getOrder","isAsc","order","getApiPath","getImgPath","getSiteID","dateToStr","timestampDate","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","year","getFullYear","getMonth","getDate","datePickerStr","time","dateToConvert","month","day","monthFinal","dayFinal","sosyalSocketToken","initiateGlobals2","initiateGlobals","codes","setVariables","setLimits","changePage","changeApp","pageNumm","randomStr","result","characters","charactersLength","i","charAt","Math","floor","random","convertTagsToStr","tagsStr","tagsArr","parse","tag","ndx","convertTagsStrToArrayStr","tagsArray","split","cancelShapper","createUserInfo","openModal","appModalData","title","index","addtlData","showingModal","openYesNoModal","openMsgModal","msg","msgID","headerID","openStartPtModal","openMoreOptionsModal","openGroserModal","getLinks","text","linkType","words","wordArray","wordsObjArr","word","push","obj","convertTextToObj","wordsObjArrLinks","wordObjLinks","splice","convertEmptyStr","strRegex","replace","strFinal","showOtherUser2","showOtherUser","showOtherPage","showOtherUserList","showOtherPost","post","createProfileData","removeItem","InitialState","GlobalContext","createContext","children","useReducer","AppReducer","dispatch","GlobalProviderCom","startPoint","messageData","msgs","viewingMsgs","headerIDViewed","expenses","isUserTags","path","Provider","login","getMsgs","getSearchTags","checkPassword","repeatPasswordChange","openHintsModal","info","isCompany","prefix","showPageNav","closePageNav","tagsNote","minBidNote","consumptionNote","Ratings","size","isVerified","raterSize","color","yellow","green","StyledRating","withStyles","iconFilled","fontSize","iconEmpty","Rating","className","precision","readOnly","left","top","UserImg","imgPathBegin","useContext","imgURI","Avatar","width","height","onClick","alt","src","UserLink","verified","checkIcon","Link","fontWeight","href","e","preventDefault","MoreInfo","UserInfoDiv","userInfo","ProfileDiv","profileData","isUser","followed","companyJoinLabel","userToFollow","joinCompany","cancelRequest","leaveCompany","coID","ndxToSplice","joinReq","profileImgUrl","bidName","verifiedLink","red","btns","justifyContent","Button","variant","itemName","id","followedUser","companyDiv","flex","overflow","rate","rateVerified","InsidePageWrapper","tabs","onChangeTab","moreTabs","useState","tabVal","setTabVal","openMoreTab","moreTab","Paper","square","Tabs","indicatorColor","textColor","onChange","newValue","aria-label","map","tab","Tab","ReviewList","review","elevation","imgurl","verifieduser","comment","Reviews","reviews","reviewsData","setReviewsData","getReviews","userViewedID","useEffect","reviewBtn","isOpeningMoreTabs","moreLabel","noIndent","header","styles","link","onClickLink","onClickMoreLink","PageNav","isForward","onChangeStartPt","setTimeOutID","setStartPt","changeStartPt","valFin","getMin","addStartPt","sign","flexDirection","SiteSpan","DetailsDiv","companyInfo","companyusername","PostList","sequence","sortType","pageInitiated","setPageInitiated","showingReplies","setShowingReplies","replies","setReplies","counter","setCounter","setShowingOtherPost","replyOptions","setReplyOptions","fromUser","setOptionsReply","creator","postPar","target","details","deletePost","blogID","getReplies","sortBy","replyID","bgNum","moreBtns","postDiv","idSpans","lastupdate","siteusername","borderLeftWidth","borderLeftStyle","button","siteid","bidamt","bidbal","borderTop","repliesDiv","otherPostDiv","reply","IconButton","searchOptions","setSearchOptions","isRepliesOption","PostsDiv","isProfilePage","isPostResult","postResult","posts","setPosts","isReplies","isTagsTab","allSite","postOptions","setPostOptions","getSiteIDFinal","siteIDFinal","setOptions","getBlogs","getProfileBlogs","getHomeBlogs","getTab","getIsReplies","isReply","ProfilePage","setTab","profile","MsgHeaderList","msgHeader","onPressHeader","headerName","sendername","senderimg","sender","receivername","receiverimg","lastMsg","alignSelf","lastreplied","MessageHeaders","msgHeaders","setMsgHeaders","setAllSite","getMsgHeaders","allSiteLabel","MsgList","senderName","receiver","msgIsFromUser","deleteMsg","buttons","datecreated","msgheader","Messages","onPressBack","msgsData","setMsgsData","unshift","MessagesPage","setViewingMsgs","chatData","setChatData","ItemList","item","isSearch","fromModal","deleteItem","itemID","moreInfoDiv","span","moreInfoDivSearch","itemDescription","itemImgURL","itemname","itemdescription","itemimgurl","price","quantity","ListPage","getTimeOut","items","itemsData","setItemsData","getItems","idx","DataList","amount","created","DataPage","datasArr","setDatasArr","getDatas","dataArr","Marker","Badge","badgeContent","HintList","onPressHint","whiteSpace","SearchHints","hintVal","hints","setHints","getHints","alignItems","Search","searchInputVal","setSearchInputVal","onClickSearch","onHintsModalDone","searchValue","zIndex","component","InputBase","placeholder","inputProps","MapSearchComponent","mapData","useRef","timeoutID","setTimeoutID","usernameSearch","searchType","east","west","north","south","searchInputs","setSearchInputs","userSearchOnly","userSearch","companySearchEnabled","isVerifiedRatings","companySearch","otherLabel","siteUsername","getSearchedUsers","bounds","multiplier","searchValueCo","searchTypeCo","numOfRatersCo","isVerifiedRatingsCo","grosersFinal","getGrosers","grosers","grosersInit","userid","itemsNdx","convertToPos","pos","defaultProps","center","zoom","optionsModal","companyEnabled","bootstrapURLKeys","defaultCenter","defaultZoom","multiplierFound","isPositive","ne","sw","groser","coordinate","latitude","longitude","SetLocation","mapInputs","setMapInputs","Note","note","SetGroserMode","mode","setMode","modeFinal","setGroserMode","paddingTop","Switch","checked","MapPage","setMapData","tabPage","UploadPhoto","setImage","image","uploadPhoto","inputRef","URL","createObjectURL","accept","files","ref","current","click","UploadProfilePhoto","photoURI","formData","FormData","append","Axios","ErrorLog","error","ChangePassword","newPass","currentPass","passInputs","setPassInputs","errors","setErrors","oldPass","TextField","EditProfile","profileInputs","setProfileInputs","arrayStr","FormControl","InputLabel","Select","labelId","MenuItem","EditUserPage","JoinRequestList","joinRequest","acceptUser","denyUser","JoinRequests","setJoinReqs","getRequests","MemberList","member","removeUser","Members","members","setMembers","getMembers","CompanyPage","SendMoney","address","depositInputs","setDepositInputs","depositFee","Withdraw","withdrawInputs","setWithdrawInputs","sendInputs","setSendInputs","sendMoney","autoComplete","TransactionList","transaction","typeName","userComponent","userText","labelComponent","Transactions","transactions","setTransactions","getTransactions","WalletPage","sosyalBalLabel","ShapperList","shapper","cancelHire","ShappersDiv","shappers","shappersData","setShappersData","getShappers","CustomerList","customer","CustomersDiv","customers","customersData","setCustomersData","getCustomers","ShappersPage","setPage","isOpen","setOtherUser","goToUserPage","HomePage","UserList","user","moreInfo","SerchItemList","bidDiv","siteDiv","mainDiv","moreInfoLink","SearchDiv","searchResults","setSearchResults","search","SearchPage","SerchItemsDiv","setItems","SerchPage","VerifyAccount","birthdate","isMale","setIsEditing","isEditing","currentDate","getTime","gender","convertIsMaleToGender","verifyInputs","setVerifyInputs","getGender","male","date","dateStr","noValidate","InputLabelProps","shrink","option","EditVerifyAccount","VerifyAccountPage","SearchTagList","SearchTagsPage","setTag","setTags","getTags","SideNav","closeDrawer","siteLabel","menus","addtlMenus","addtlMenu","menuFin","List","menu","ListItem","menuSpans","InsidePages","toggleMenu","setToggleMenu","toggleDrawer","AppBar","Toolbar","edge","Drawer","anchor","open","onClose","Login","userInputs","setUserInputs","marginTop","VerificationPage","setCode","emailCode","ForgotPass","setForgotPassInputs","reqCode","confirmingForgotPass","ConfirmForgotPass","ForgotPassPage","forgotPassInputs","resendBtn","Register","confirmingRegister","toastObj","buttonText","OutsidePages","CustomToast","closeToast","severity","backgroundColor","right","bottom","Alert","AppModal","closeModal","onButtonsPressed","consumptionShow","isBtn","InsertComponent","setPost","insertType","setInsertType","insertValue","setInsertValue","insertInput","insertBtn","toUpperCase","substring","NewMsgModal","setUsername","setMsg","usernameInit","msgHeaderID","usernameInput","btn","StartPointModal","point","setPoint","parseInt","isNaN","YesNoModal","onPressedNo","MoreOptionsModal","onPressClosed","onPressOption","HintsModal","searchHints","Pages","otherPage","singleModalInit","groserModal","finalPage","toast","msgModal","startPtModal","hintsModal","singleModal","yesNoModal","moreOptionsModal","pageNav","app","OtherUserList","route","shapID","hirerID","OtherPage","OtherProfilePage","closeOtherPage","setProfileData","ratingverified","numofratersverified","numofraters","companyrating","companynumofraters","companyratingverified","companynumofratersverified","companyname","companyimgurl","userDataInit","getUserProfile","OtherPostPage","NewItemModal","bidAmtInput","tagsInput","minNote","ReviewModal","postedOn","reviewInputs","setReviewInputs","setRate","submitReview","VerifiedInfoModal","setVerifiedData","ismale","getData","BuyDataModal","dataInputs","setDataInputs","then","ImageModal","UploadItemPhotoModal","SearchOptionsModal","ratingsTypeLabel","ratingsTypeLabelCo","pickerCo","userSearchBtn","siteUsernameInput","FormControlLabel","control","Checkbox","NewPostModal","postInputs","setPostInputs","newPost","btnLabel","orderLabel","isRepliesLabel","tagLabel","siteBtn","otherBtns","UploadVerifiedPhotoModal","NewTagModal","NewSerchItemModal","itemLink","InfoModal","BidModal","amtPaid","bidInputs","setBidInputs","DetailsModal","GroserModal","setIsMinimized","hireUser","hireeID","display","itemsDiv","itemNum","getUserToken","getItem","userDataStorage","initiateVariables","siteName","port","portBlags","siteNameBlags","portFinal","portFinalBlags","beginPathBlags","pathBlags","getWindowSize","window","addEventListener","updateDimensions","getGlobals","innerWidth","closeSingleModal","SIZE","pageLoad","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc40ce96.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE':\r\n            console.log('payload: ', action.payload);\r\n            // state.userData.username = action.payload;\r\n            return {\r\n                ...state,\r\n                // userData: {\r\n                //     ...state.userData,\r\n                //     username: action.payload  \r\n                // }\r\n            }\r\n\r\n        case 'UPDATE_USER_DATA':\r\n            console.log('UPDATE USER DATA: ');\r\n            // console.log('state: ', state);\r\n            // console.log('user data; ', state.userData);\r\n            // state.userData.username = action.payload;\r\n            return {\r\n                ...state,\r\n                // userData: {\r\n                //     ...state.userData,\r\n                //     username: action.payload  \r\n                // }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\nvar initialState ={\r\n    appData: {\r\n        name: 'Shappers',\r\n        sosyalName: 'Sosyal',\r\n        siteID: 0,\r\n        sosyalID: 9,\r\n        version: 1.1,\r\n        versionSosyal: 1.1\r\n    },\r\n    userData: {\r\n        token: '',\r\n        \r\n        \r\n        userID: 0,\r\n        username: '',\r\n        name: '',\r\n        description: '',\r\n        tags: '',\r\n        windowSize: 'lg',\r\n        loggedIn: true,\r\n        groserMode: false,\r\n        imgURL: '',\r\n        country: 0,\r\n        dataBal: 0,\r\n        totalAddtlData: 0,\r\n        balance: 0,\r\n        bidBal: 0,\r\n        bidAmt: 0,\r\n        companyID: 0,\r\n        companyUsername: '',\r\n        rating: 0,\r\n        numOfRaters: 0,\r\n        ratingVerified: 0,\r\n        numOfRatersVerified: 0,\r\n        isSosyal: true,\r\n        followedUsers: [],\r\n        joinReqs: [],\r\n        company: null,\r\n        verifiedUser: false,\r\n        position: {\r\n            lat: 0,\r\n            lng: 0\r\n        },\r\n        \r\n        routerID: 0,\r\n        \r\n        \r\n        confirmLogin: {\r\n            reqID: 0,\r\n            code: ''\r\n        },\r\n        currentPage: {\r\n            front: 'Login',\r\n            back: 'Profile'\r\n        },\r\n        \r\n        gotUserData: false,\r\n        showingToast: false,\r\n        showingOtherUser: false,\r\n        showingOtherUserList: false,\r\n        showingOtherPost: false,\r\n        showingChatPage: false,\r\n        showingOtherPage: false,\r\n        showingPageNav: false,\r\n        openingMsgModal: false,\r\n        openingStartPtModal: false,\r\n        openingSingleModal: false,\r\n        openingGroserModal: false,\r\n        openingYesNoModal: false,\r\n        openingMoreOptionsModal: false,\r\n        openingHintsModal: false,\r\n        pageNum: 0,\r\n        otherPageNum: 0,\r\n        photoPassword: '',\r\n        production: true,\r\n        \r\n        verification: {\r\n            userID: 0,\r\n            email: ''\r\n        },\r\n        isShappers: false,\r\n        \r\n        sosyalData: {\r\n            balance: 0,\r\n            socketToken: '',\r\n            name: '',\r\n            description: '',\r\n            tags: '',\r\n            country: 0,\r\n            imgURL: '',\r\n            photoPassword: '',\r\n            dataBal: 0,\r\n            totalAddtlData: 0,\r\n            bidBal: 0,\r\n            bidAmt: 0,\r\n            rating: 0,\r\n            numOfRaters: 0,\r\n            ratingVerified: 0,\r\n            numOfRatersVerified: 0,\r\n            joinReqs: [],\r\n            companyID: 0,\r\n            company: null,\r\n            verifiedUser: true,\r\n            \r\n        },\r\n        verifiedDataSet: false,\r\n        verifiedData: null\r\n    },\r\n\r\n    globals: {\r\n        numOfItems: 0,\r\n        numOfPosts: 0,\r\n        varNames: {\r\n            beginPath: 'http://192.168.1.8',\r\n            beginPathProduction: 'http://167.99.69.143',\r\n            beginPathProductionBlags: 'sosyal.pw',\r\n            shappersPort: 5020,\r\n            shapsPort: 7700,\r\n            blagsPort: 1600,\r\n            shapsName: 'Shops',\r\n            shappersName: 'Shoppers',\r\n            shappersSiteID: 4,\r\n            shapsSiteID: 5,\r\n            // devApi: 'http://localhost:5020/api/',\r\n            devApi: 'http://192.168.1.4:5020/api/',\r\n            apiPath: 'https://shappers.sosyal.ph/api/',\r\n            // apiPath: 'http://192.168.1.7:5020/api/',\r\n            // chatApiPath: 'http://localhost:5005/api/',\r\n            blagsApiPath: 'http://192.168.1.4:9000/api/',\r\n            blagsServerPath: 'http://192.168.1.4:9000',\r\n            // blagsApiPath: 'http://localhost:9000/api/',\r\n            // adsApiPath: 'http://localhost:5000/api/',\r\n            imgPath: 'http://localhost:9000/',\r\n            itemsImgPath: 'http://localhost:9000/',\r\n            blagsImgPath: 'http://localhost:9000/',\r\n            imgPathBlags: 'http://localhost:9000/',\r\n            verifiedPhotoPath: 'http://localhost:9000/',\r\n            // imgPath2: 'http://localhost:5020/',\r\n            \r\n        },\r\n        limits: null,\r\n        errorCodes: [],\r\n        consumption: 0,\r\n        minPayments: null\r\n    },\r\n    countries: [],\r\n    otherUserData: {\r\n        username: ''\r\n    },\r\n    otherUserListData: {\r\n        userID: 0\r\n    },\r\n    otherPostData: null,\r\n    toastData: {\r\n        message: 'hey',\r\n        duration: 70000,\r\n        style: null,\r\n        isError: false\r\n    },\r\n    msgModalData: {\r\n        username: ''\r\n    },\r\n    startPtModalData: {\r\n        value: 0,\r\n        callbackFunc: null\r\n    },\r\n    singleModalData: {\r\n        data: null,\r\n        name: ''\r\n        \r\n    },\r\n    moreOptionsModalData: {\r\n        options: [],\r\n        onClickOptionFunc: null,\r\n        \r\n    },\r\n    otherPageData: {\r\n        data: null,\r\n        // onClickOptionFunc: null,\r\n        name: ''\r\n    },\r\n    groserModalData: {\r\n        data: null,\r\n        \r\n        // name: '',\r\n        isMinimized: false\r\n    },\r\n    yesNoModalData: {\r\n        callbackFunc: null,\r\n        question: ''\r\n        \r\n    },\r\n    hintsModalData: {\r\n        callbackFunc: null,\r\n        isUserSearch: false,\r\n        hint: ''\r\n        \r\n    },\r\n    pageNavData: {\r\n        callbackFunc: null,\r\n        startPt: 0,\r\n        key: 0\r\n    }\r\n    \r\n    \r\n} \r\n\r\nexport default initialState;","// import React, {createContext, useReducer, useState} from 'react';\r\n// // import AsyncStorage from '@react-native-async-storage/async-storage';\r\n// import AppReducer from './AppReducer';\r\n// import InitialState from './InitialState';\r\nimport axios from 'axios';\r\n// import io from 'socket.io-client';\r\n\r\n// import { Linking } from 'react-native';\r\n// import { Text, CardItem, View } from 'native-base';\r\n\r\n// const initialState = InitialState;\r\n\r\n\r\n// checkPassInput\r\nconst GlobalProvider = {};\r\n\r\nGlobalProvider.apiCall = async (url, data, state, forceUpdate) => {\r\n    let response = await axios({\r\n        method: 'post',\r\n        url: url,\r\n        data: data,\r\n        headers: {\r\n            'x-access-token': state.userData.token,\r\n            'version': state.appData.version,\r\n            'sosyal-version': state.appData.versionSosyal,\r\n        }    \r\n    })\r\n\r\n    response.data.globalError = false;\r\n\r\n    if(response.data.status == 0){\r\n        if(!GlobalProvider.checkErrors(response.data.code, state, forceUpdate)){\r\n            GlobalProvider.showToast(response.data.message, 3, true, state, forceUpdate);\r\n        }\r\n    }\r\n\r\n    // GlobalProvider.showToast(response.data.message, 3, true, state, forceUpdate);\r\n    // console.log('response: ', response);\r\n    return response.data;\r\n\r\n    \r\n};\r\n\r\nGlobalProvider.checkErrors = (code, state, forceUpdate) => {\r\n    let errorExist = false;\r\n    // let codeFinal\r\n    console.log('state. globals: ', state.globals);\r\n    console.log('code: ', code);\r\n    state.globals.errorCodes.forEach((errorCode) => {\r\n        if(code == errorCode){\r\n            errorExist = true;\r\n            if(errorCode == 500){\r\n                GlobalProvider.openSingleModal('Info', {div: 'Data'}, state, forceUpdate);  \r\n                // showToast('wsjf alsjfafsf ljsfajfjsf ;ajsfjjf ;asfjajs  f lakjjdflajfjajf ;adfjsjff asfa; asdfsldkf a;sdfasf jalsfjfa afjaf;af kajsjfal', 5000);\r\n            }else if(errorCode == 501){\r\n                GlobalProvider.openSingleModal('Info', {div: 'Balance'}, state, forceUpdate);\r\n                // showToast('wsjf alsjfafsf ljsfajfjsf ;ajsfjjf ;asfjajs  f lakjjdflajfjajf ;adfjsjff asfa; asdfsldkf a;sdfasf jalsfjfa afjaf;af kajsjfal', 5000);\r\n            }else if(errorCode == 56){\r\n                GlobalProvider.showToast('Request limit exceeded. Try again after a few seconds.', 3, true, state, forceUpdate);\r\n                \r\n                \r\n            }else if(errorCode == 5){\r\n                GlobalProvider.showToast('Invalid token.', 3, true, state, forceUpdate);\r\n                GlobalProvider.logout(state, forceUpdate);\r\n                \r\n            }\r\n        }\r\n    })  \r\n    \r\n    return errorExist;\r\n};\r\n\r\n// GlobalProvider.openSingleModal = (name, data, state, forceUpdate) => {\r\n//     console.log('open modal start');\r\n//     state.userData.openingSingleModal = true;\r\n//     state.singleModalData.name = name;\r\n//     state.singleModalData.data = data;\r\n//     forceUpdate();\r\n// };\r\n\r\nGlobalProvider.showToast = (message, duration, isError, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    state.userData.showingToast = true;\r\n    state.toastData.message = message;\r\n    state.toastData.duration = duration;\r\n    state.toastData.isError = isError;\r\n    forceUpdate();\r\n};\r\n\r\nGlobalProvider.getUserData = async (token, state, initiateUserData, forceUpdate) => {\r\n    console.log('get user data');\r\n    console.log('api path: ', state.globals.varNames.apiPath);\r\n    // console.log('token: ', state.userData.token);\r\n    state.userData.token = token;\r\n    localStorage.setItem('userData', JSON.stringify({token: state.userData.token}));\r\n    var response = await GlobalProvider.apiCall(state.globals.varNames.apiPath + 'user/getUserData', {}, state, forceUpdate);  \r\n    \r\n    console.log('response: ', response);\r\n    if(response.status == 1){\r\n        initiateUserData(response.payload.userData);\r\n        // GlobalProvider.setVariables(response.payload, state);\r\n        // GlobalProvider.initiateGlobals(response.payload.globals, state);\r\n        var responseSosyal = await GlobalProvider.apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {}, state, forceUpdate);\r\n        console.log('response sosyal: ', responseSosyal);\r\n        if(responseSosyal.status == 1){\r\n            GlobalProvider.initiateSosyalData(responseSosyal.payload, state);\r\n            // GlobalProvider.setLimits(responseSosyal.payload, state);\r\n            state.userData.currentPage.back = 'Home';\r\n            state.userData.loggedIn = true;\r\n        }else{\r\n            state.userData.loggedIn = false;\r\n        }\r\n        \r\n        \r\n        \r\n        // connectToSocket();\r\n        \r\n        // dispatch({\r\n        //     type: 'UPDATE_USER_DATA',\r\n        //     payload: 'username'\r\n        // });\r\n    }else{\r\n        // state.userData.gotUserData = true;\r\n        state.userData.loggedIn = false;    \r\n    }\r\n\r\n    state.userData.gotUserData = true;\r\n    forceUpdate();\r\n};\r\n\r\nGlobalProvider.updateUserData = async (state, initiateUserData, forceUpdate) => {\r\n    console.log('get user data');\r\n    console.log('api path: ', state.globals.varNames.apiPath);\r\n    // console.log('token: ', state.userData.token);\r\n    \r\n    var response = await GlobalProvider.apiCall(state.globals.varNames.apiPath + 'user/getUserDataOnly', {}, state, forceUpdate);  \r\n    \r\n    console.log('response: ', response);\r\n    if(response.status == 1){\r\n        initiateUserData(response.payload);\r\n        \r\n        var responseSosyal = await GlobalProvider.apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {}, state, forceUpdate);\r\n        console.log('response sosyal: ', responseSosyal);\r\n        if(responseSosyal.status == 1){\r\n            GlobalProvider.initiateSosyalData(responseSosyal.payload, state);\r\n            // GlobalProvider.setLimits(responseSosyal.payload, state);\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n};\r\n\r\nGlobalProvider.checkPassInput = (password, state) => {\r\n    let minChar = state.globals.limits.min.password;\r\n    let maxPassLength = 20;\r\n    if(!state.userData.production){\r\n        minChar = 0;\r\n    }\r\n    let numUpper = (password.match(/[A-Z]/g) || []).length;\r\n    let numLower = (password.match(/[a-z]/g) || []).length;\r\n    let numInt = (password.match(/[0-9]/g) || []).length;\r\n    let status = false;\r\n    let message = '';\r\n    // var specialCharPass = (password.match(/[^a-z0-9]/ig) || []).length;\r\n    if(numUpper >= minChar && numLower >= minChar && numInt >= minChar){\r\n        message = '';\r\n        // status = true;\r\n        \r\n    }else{\r\n        if(numUpper < minChar){\r\n            \r\n            message = 'Password must contain at least ' + minChar + ' capital letters.';\r\n        }else if(numLower < minChar){\r\n            message = 'Password must contain at least ' + minChar + ' small letters.';     \r\n        }else{\r\n            message = 'Password must contain at least ' + minChar + ' numbers.';\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    return message;\r\n}\r\n\r\nGlobalProvider.checkRepeatPassInput = (password, repeatPass) => {\r\n    if(password != repeatPass){\r\n        return 'Password and repeat password are not equal.';\r\n    }else{\r\n        return '';\r\n    }\r\n}\r\n\r\nGlobalProvider.checkUsernameInput = (username, state) => {\r\n    let minChar = state.globals.limits.min.username;\r\n    let label = 'Username';\r\n    let msg = '';\r\n    // if(!isUsername){\r\n    //     minChar = 5;\r\n    //     label = 'Address';\r\n    // }\r\n    let maxChar = state.globals.limits.max.username;\r\n    if(state.userData.production){\r\n        minChar = 0;\r\n    }\r\n\r\n    let specialCharUsername = (username.match(/[^a-z0-9_]/ig) || []).length;\r\n    if(specialCharUsername == 0 && username.length >= minChar && username.length <= maxChar){\r\n        msg = '';\r\n        \r\n    }else{\r\n        if(specialCharUsername > 0){\r\n            msg = label +' can only contain numbers, letters and _.';\r\n            // setError(label +' can only contain numbers, letters and _.');\r\n        }else if(username.length < minChar){\r\n            msg = label +' must be at least ' + minChar + ' characters.';\r\n            // setError(label +' must be at least ' + minChar + ' characters.');\r\n        }else{\r\n            msg = label +' cannot exceed ' + maxChar + ' characters.';\r\n            // setError(label +' cannot exceed ' + maxChar + ' characters.');    \r\n        }\r\n    }\r\n\r\n    return msg;\r\n}\r\n\r\nGlobalProvider.convertStrToNum = (str) => {\r\n    let num = '0';\r\n    if(str != ''){\r\n        num = str;\r\n    } \r\n    \r\n    return num;\r\n}\r\n\r\nGlobalProvider.convertNumToStr = (num) => {\r\n    let str = '';\r\n    if(num != 0){\r\n        str = num + '';\r\n    } \r\n    \r\n    return str;\r\n}\r\n\r\nGlobalProvider.getDelayer = (timeOutID, funcToRun) => {\r\n    console.log('time out id: ', timeOutID);\r\n    clearTimeout(timeOutID);\r\n    timeOutID = setTimeout(()=>{\r\n        funcToRun();\r\n    }, 1000); \r\n    return timeOutID;    \r\n}\r\n\r\nGlobalProvider.funcDelayer = (timeOutID, funcToRun, timeOfDelay) => {\r\n    console.log('time out id: ', timeOutID);\r\n    let newTimeOutID = 0;\r\n    clearTimeout(timeOutID);\r\n    newTimeOutID = setTimeout(()=>{\r\n        funcToRun();\r\n    }, timeOfDelay * 1000); \r\n    return newTimeOutID;    \r\n}\r\n\r\nGlobalProvider.changeOutsidePage = (page, state, forceUpdate) => {\r\n    state.userData.currentPage.front = page;\r\n    forceUpdate();\r\n}\r\n\r\nGlobalProvider.toggleNav = (state, forceUpdate) => {\r\n    state.userData.openingNav = !state.userData.openingNav;  \r\n    forceUpdate();\r\n}\r\n\r\nGlobalProvider.getOrder = (isAsc) => {\r\n    let order = 0;\r\n    if(isAsc){\r\n        order = 1;\r\n    }\r\n    \r\n    \r\n    return order;\r\n}\r\n\r\nGlobalProvider.getApiPath = (state) => {\r\n    console.log('initiate sosyal data');\r\n    let apiPath = state.globals.varNames.apiPath;\r\n    if(state.userData.isSosyal){\r\n        apiPath = state.globals.varNames.blagsApiPath;\r\n    }\r\n    return apiPath;\r\n    \r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.getImgPath = (state) => {\r\n    console.log('initiate sosyal data');\r\n    let apiPath = state.globals.varNames.imgPath;\r\n    if(state.userData.isSosyal){\r\n        apiPath = state.globals.varNames.imgPathBlags;\r\n    }\r\n    return apiPath;\r\n    \r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.getSiteID = (state) => {\r\n    console.log('initiate sosyal data');\r\n    let siteID = state.appData.siteID;\r\n    if(state.userData.isSosyal){\r\n        siteID = state.appData.sosyalID;\r\n    }\r\n    return siteID;\r\n    \r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.dateToStr = (payload) => { \r\n    let timestampDate = new Date(payload * 1000);\r\n    let hours = timestampDate.getHours();\r\n    let minutes = timestampDate.getMinutes();\r\n    let seconds = timestampDate.getSeconds();\r\n    let year = timestampDate.getFullYear();\r\n    let month = timestampDate.getMonth() + 1;\r\n    let date = timestampDate.getDate();  \r\n    \r\n    return month + \"/\" + date + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;     \r\n}\r\n\r\nGlobalProvider.datePickerStr = (time) => { \r\n    let dateToConvert = new Date(time);\r\n    let month = dateToConvert.getMonth() + 1;\r\n    let day = dateToConvert.getDate();\r\n    let monthFinal = month;\r\n    let dayFinal = day;\r\n\r\n    if(month < 10){\r\n        monthFinal = '0' + month;\r\n    } \r\n\r\n    if(day < 10){\r\n        dayFinal = '0' + day;\r\n    }\r\n\r\n    \r\n    let dateStr = dateToConvert.getFullYear() + '-' + monthFinal + '-' + dayFinal;  \r\n    return dateStr;   \r\n}\r\n\r\n\r\nGlobalProvider.initiateSosyalData = (data, state) => {\r\n    console.log('initiate sosyal data');\r\n    state.userData.sosyalData.balance = data.balance;\r\n    state.userData.sosyalData.dataBal = data.dataBal;\r\n    state.userData.sosyalData.totalAddtlData = data.totalAddtlData;\r\n    state.userData.sosyalData.socketToken = data.sosyalSocketToken;\r\n    state.userData.sosyalData.country = data.country;\r\n    state.userData.sosyalData.name = data.name;\r\n    state.userData.sosyalData.description = data.description;\r\n    state.userData.sosyalData.tags = data.tags;\r\n    state.userData.sosyalData.imgURL = data.imgURL;\r\n    state.userData.sosyalData.bidBal = data.bidBal;\r\n    state.userData.sosyalData.bidAmt = data.bidAmt;\r\n    state.userData.sosyalData.rating = data.rating;\r\n    state.userData.sosyalData.numOfRaters = data.numOfRaters;\r\n    state.userData.sosyalData.ratingVerified = data.ratingVerified;\r\n    state.userData.sosyalData.numOfRatersVerified = data.numOfRatersVerified;\r\n    state.userData.sosyalData.photoPassword = data.photoPassword;\r\n    state.userData.verifiedDataSet = data.verifiedDataSet;\r\n    \r\n    state.userData.verifiedData = data.verifiedData;\r\n    // state.userData.verifiedData.address = data.verifiedData.address;\r\n    state.userData.followedUsers = data.followedUsers;\r\n    state.userData.sosyalData.joinReqs = data.joinReqs;\r\n    state.userData.sosyalData.companyID = data.companyID;\r\n    state.userData.sosyalData.verifiedUser = data.verifiedUser;\r\n    state.userData.sosyalData.company = data.company;\r\n}\r\n\r\nGlobalProvider.initiateGlobals2 = (globals, state) => {\r\n    state.globals.numOfItems = globals.numOfItems;\r\n    state.globals.numOfPosts = globals.numOfItems;\r\n    \r\n}\r\n\r\nGlobalProvider.initiateGlobals = (globals, state) => {\r\n    state.globals.numOfItems = globals.globals.numOfItems;\r\n    state.globals.numOfPosts = globals.globals.numOfItems;\r\n    state.globals.limits = globals.limits;\r\n    state.countries = globals.countries;\r\n    state.globals.errorCodes = globals.codes;\r\n    state.globals.consumption = globals.consumption;\r\n    state.globals.minPayments = globals.minPayments;\r\n}\r\n\r\nGlobalProvider.setVariables = (payload, state) => {\r\n    state.countries = payload.countries;\r\n    state.globals.errorCodes = payload.codes;\r\n     \r\n}\r\n\r\nGlobalProvider.setLimits = (payload, state) => {\r\n    state.globals.limits = payload.limits;\r\n    \r\n     \r\n}\r\n\r\n// GlobalProvider.getSearchTags = async (tag, startPt, isUserTags) => {\r\n\r\n//     let tags = [];\r\n\r\n//     let data = {\r\n//         tag: tag,\r\n//         startPoint: startPt,\r\n           \r\n//     }\r\n\r\n//     let path = 'user/getSearchTags';\r\n//     if(isUserTags){\r\n//         path = 'user/getUserHints';\r\n//     }\r\n\r\n//     let response = await GlobalProvider.apiCall(GlobalProvider.getApiPath(state) + path, data, state, forceUpdate);\r\n//     console.log('response: ', response);\r\n//     if(response.status == 1){\r\n//         // setTags(response.payload);\r\n//         tags = response.payload\r\n//     } \r\n    \r\n//     return tags;\r\n// }\r\n\r\nGlobalProvider.changePage = (page, state, forceUpdate) => {\r\n    console.log('initiate user data');\r\n    state.userData.currentPage.back = page;\r\n    forceUpdate();\r\n    // dispatch({\r\n    //     type: 'UPDATE_USER_DATA',\r\n    //     payload: 'username'\r\n    // });\r\n    \r\n}\r\n\r\nGlobalProvider.changeApp = (state, forceUpdate) => {\r\n    console.log('initiate user data');\r\n    state.userData.pageNumm ++;\r\n    forceUpdate();\r\n    // dispatch({\r\n    //     type: 'UPDATE_USER_DATA',\r\n    //     payload: 'username'\r\n    // });\r\n    \r\n}\r\n\r\nGlobalProvider.randomStr = (length) => {\r\n    let result           = '';\r\n    let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    \r\n    let charactersLength = characters.length;\r\n    for ( let i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\n\r\nGlobalProvider.convertTagsToStr = (tags) => {\r\n    \r\n    let tagsStr = '';\r\n    let tagsArr = JSON.parse(tags);\r\n    console.log('tags Arr: ', tagsArr);\r\n    tagsArr.forEach((tag, ndx) => {\r\n        tagsStr = tagsStr + tag + ' ';\r\n    })\r\n    // if(tagsArr === Array){\r\n        \r\n    // }\r\n    console.log('tags str: ', tagsStr);\r\n    return tagsStr;\r\n}\r\n\r\nGlobalProvider.convertTagsStrToArrayStr = (tagsStr) => {\r\n    let tagsArray = tagsStr.split(\" \");\r\n    let arrayStr = JSON.stringify(tagsArray);\r\n    return arrayStr;\r\n}\r\n\r\nGlobalProvider.cancelShapper = async (userID, type, state, forceUpdate) => {\r\n    let data = {\r\n        type: type,\r\n        userID: userID   \r\n    }\r\n    let response = await GlobalProvider.apiCall(state.globals.varNames.apiPath + 'map/cancelHire', data, state, forceUpdate); \r\n    console.log('response: ', response);\r\n    if(response.status == 1){\r\n        GlobalProvider.showToast(response.message, 3, false);\r\n    } \r\n}\r\n\r\nGlobalProvider.createUserInfo = (username, rating, ratingVerified, numOfRaters, numOfRatersVerified, imgURL) => {\r\n    \r\n    let userInfo = {\r\n        username: username,\r\n        rating: rating,\r\n        ratingVerified: ratingVerified,\r\n        numOfRaters: numOfRaters,\r\n        numOfRatersVerified: numOfRatersVerified,\r\n        imgURL: imgURL\r\n    }\r\n\r\n    return userInfo;\r\n}\r\n\r\nGlobalProvider.openModal = (payload, state) => {\r\n    console.log('open modal start');\r\n    state.appModalData.title = payload.title;\r\n    state.appModalData.index = payload.index;\r\n    state.appModalData.page = payload.page;\r\n    \r\n    state.appModalData.addtlData = payload.addtlData;\r\n   \r\n\r\n    state.userData.showingModal = true;\r\n    \r\n}\r\n\r\nGlobalProvider.openSingleModal = (name, data, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    state.userData.openingSingleModal = true;\r\n    state.singleModalData.name = name;\r\n    state.singleModalData.data = data;\r\n    forceUpdate();\r\n    \r\n}\r\n\r\nGlobalProvider.openYesNoModal = (question, callbackFunc, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    state.userData.openingYesNoModal = true;\r\n    state.yesNoModalData.callbackFunc = callbackFunc;\r\n    state.yesNoModalData.question = question;\r\n    forceUpdate();\r\n    \r\n}\r\n\r\nGlobalProvider.openMsgModal = (username, msg, msgID, headerID, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    state.userData.openingMsgModal = true;\r\n    state.msgModalData.username = username;\r\n    state.msgModalData.msg = msg;\r\n    state.msgModalData.msgID = msgID;\r\n    state.msgModalData.headerID = headerID;\r\n    // state.msgModalData.replying = replying;\r\n    forceUpdate();\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.openStartPtModal = (value, callbackFunc, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    console.log('value: ', value);\r\n    console.log('callback func: ', callbackFunc);\r\n    state.userData.openingStartPtModal = true;\r\n    state.startPtModalData.value = value;\r\n    state.startPtModalData.callbackFunc = callbackFunc;\r\n    \r\n    forceUpdate();\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.openMoreOptionsModal = (options, onClickOptionFunc, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    // console.log('value: ', value);\r\n    // console.log('callback func: ', onClickOptionFunc);\r\n    state.userData.openingMoreOptionsModal = true;\r\n    state.moreOptionsModalData.options = options;\r\n    state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n    \r\n    forceUpdate();\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.openGroserModal = (data, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    // console.log('value: ', value);\r\n    // console.log('callback func: ', onClickOptionFunc);\r\n    state.userData.openingGroserModal = true;\r\n    state.groserModalData.data = data;\r\n    // state.groserModalData.name = name;\r\n    // state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n    \r\n    forceUpdate();\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.getLinks = (text, linkType) => {\r\n    let words = text;\r\n    let wordArray = [];\r\n    if(linkType == 'userLink'){\r\n        wordArray = words.split(/@([a-z0-9]+)/i);\r\n    }else if(linkType == 'link'){\r\n        wordArray = words.split(/\\[link\\]([a-z0-9.\\/:]+)\\[\\/link\\]/i);\r\n    }\r\n    \r\n    let wordsObjArr = [];\r\n    if(wordArray.length > 1){\r\n        wordArray.forEach((word, ndx) => {\r\n            if((ndx + 1) % 2 == 0){\r\n                wordsObjArr.push({\r\n                    text: word,\r\n                    obj: linkType\r\n                })\r\n            }else{\r\n                wordsObjArr.push({\r\n                    text: word,\r\n                    obj: 'text'\r\n                })   \r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n    return wordsObjArr;\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.convertTextToObj = (text) => {\r\n        \r\n    let wordsObjArr = GlobalProvider.getLinks(text, 'userLink');\r\n    // console.log('words obj arr: ', wordsObjArr);\r\n    if(wordsObjArr.length == 0){\r\n        wordsObjArr.push({\r\n            text: text,\r\n            obj: 'text'   \r\n        })\r\n    }\r\n    \r\n    let wordsObjArrLinks = [];\r\n    for(let i = 0; i < wordsObjArr.length; i++){\r\n        if(wordsObjArr[i].obj == 'text'){\r\n            wordsObjArrLinks = GlobalProvider.getLinks(wordsObjArr[i].text, 'link'); \r\n            // console.log('words obj links: ', wordsObjArrLinks);\r\n            if(wordsObjArrLinks.length > 0){\r\n                \r\n                wordsObjArrLinks.forEach((wordObjLinks, ndx) => {\r\n                    wordsObjArr.splice(i + ndx + 1, 0, wordObjLinks);\r\n                    // wordsObjArr.push(wordObjLinks);\r\n                })\r\n                wordsObjArr.splice(i, 1);\r\n            }    \r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n\r\n    return wordsObjArr;\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.convertEmptyStr = (str) => {\r\n    var strRegex = str.replace(/ /ig, \"\");\r\n    var strFinal = '';\r\n    console.log('str regex: ', strRegex);\r\n    if(strRegex != ''){\r\n        strFinal = str;\r\n    }\r\n\r\n    return strFinal;\r\n}\r\n\r\nGlobalProvider.showOtherUser2 = (username, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    if(username == state.userData.username){\r\n        GlobalProvider.changePage('Profile', state, forceUpdate);\r\n    }else{\r\n        state.userData.showingOtherUser = true;\r\n        state.otherUserData.username = username;\r\n        \r\n        forceUpdate();\r\n    }\r\n    \r\n\r\n    \r\n    \r\n}\r\n\r\n\r\nGlobalProvider.showOtherUser = (username , state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    if(username == state.userData.username){\r\n        GlobalProvider.changePage('Profile', state, forceUpdate);\r\n    }else{\r\n        GlobalProvider.showOtherPage('Other User', username, state, forceUpdate);\r\n    }\r\n    \r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.showOtherPage = (name, data, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    \r\n    \r\n\r\n    state.userData.showingOtherPage = true;\r\n    state.otherPageData.name = name;\r\n    state.otherPageData.data = data;\r\n    state.userData.otherPageNum ++;\r\n    forceUpdate();\r\n    \r\n}\r\n\r\nGlobalProvider.showOtherUserList = (userID, state, forceUpdate) => {\r\n    // console.log('open modal start');\r\n    // state.userData.showingOtherUserList = true;\r\n    // state.otherUserListData.userID = userID;\r\n    \r\n    // forceUpdate();\r\n\r\n    GlobalProvider.showOtherPage('Other List', userID, state, forceUpdate);\r\n    \r\n}\r\n\r\nGlobalProvider.showOtherPost = (post) => {\r\n    console.log('show other post');\r\n    // state.userData.showingOtherPost = true;\r\n    // state.otherPostData = post;\r\n    \r\n    // forceUpdate();\r\n    GlobalProvider.showOtherPage('Other Post', post);\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.showToast = (message, duration, isError, state, forceUpdate) => {\r\n    console.log('open modal start');\r\n    state.userData.showingToast = true;\r\n    state.toastData.message = message;\r\n    state.toastData.duration = duration;\r\n    state.toastData.isError = isError;\r\n    forceUpdate();\r\n\r\n    \r\n    \r\n}\r\n\r\nGlobalProvider.createProfileData = (userID, imgURL, imgPath, username, name, description, country, rating, numOfRaters, isSosyal, photoPassword, ratingVerified, numOfRatersVerified) => {\r\n\r\n    let profile = {\r\n        userID: userID,\r\n        imgURL: imgURL,\r\n        imgPath: imgPath,\r\n        // profileImgUrl: globals.varNames.imgPathBlags + userData.sosyalData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword,\r\n        username: username,\r\n        name: name,\r\n        description: description,\r\n        country: country,\r\n        rating: rating,\r\n        numOfRaters: numOfRaters,\r\n        ratingVerified: ratingVerified,\r\n        numOfRatersVerified: numOfRatersVerified,\r\n        isSosyal: isSosyal,\r\n        photoPassword: photoPassword\r\n    } \r\n    \r\n    return profile;\r\n    \r\n    \r\n}\r\n\r\n// GlobalProvider.getImgPathBegin = (state, imgType) => {\r\n\r\n//     let imgPath = '';\r\n//     // state.globals.varNames.imgPath\r\n//     if(imgType == 'profile'){\r\n\r\n//     }\r\n//     if(state.userData.isSosyal){\r\n\r\n//     }\r\n    \r\n//     return profile;\r\n    \r\n    \r\n// }\r\n\r\nGlobalProvider.logout = (state, forceUpdate) => {\r\n    state.userData.loggedIn = false;\r\n    localStorage.removeItem('userData'); \r\n    state.userData.currentPage.front = 'login';    \r\n    forceUpdate();  \r\n}\r\n\r\n// export const GlobalContext = createContext(initialState);\r\n// onChangePassword\r\n// export const GlobalProvider2 = ({children}) => {\r\n//     console.log('GLOBAL PROVIDER');\r\n//     const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    \r\n    \r\n//     function login(username){\r\n//         console.log('login');\r\n//         dispatch({\r\n//             type: 'DELETE',\r\n//             payload: username\r\n//         });\r\n//     }\r\n\r\n//     // async function getUserData(token){\r\n//     //     console.log('get user data');\r\n//     //     console.log('api path: ', state.globals.varNames.apiPath);\r\n//     //     // console.log('token: ', state.userData.token);\r\n//     //     state.userData.token = token;\r\n//     //     localStorage.setItem('userData', JSON.stringify({token: state.userData.token}));\r\n//     //     var response = await apiCall(state.globals.varNames.apiPath + 'user/getUserData', {});  \r\n       \r\n//     //     console.log('response: ', response);\r\n//     //     if(response.status == 1){\r\n//     //         initiateUserData(response.payload.userData);\r\n//     //         setVariables(response.payload);\r\n//     //         initiateGlobals(response.payload.globals);\r\n//     //         var responseSosyal = await apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {});\r\n//     //         console.log('response sosyal: ', responseSosyal);\r\n//     //         if(responseSosyal.status == 1){\r\n//     //             initiateSosyalData(responseSosyal.payload);\r\n//     //             state.userData.currentPage.back = 'Home';\r\n//     //             state.userData.loggedIn = true;\r\n//     //         }else{\r\n//     //             state.userData.loggedIn = false;\r\n//     //         }\r\n            \r\n            \r\n            \r\n//     //         // connectToSocket();\r\n            \r\n//     //         // dispatch({\r\n//     //         //     type: 'UPDATE_USER_DATA',\r\n//     //         //     payload: 'username'\r\n//     //         // });\r\n//     //     }else{\r\n//     //         // state.userData.gotUserData = true;\r\n//     //         state.userData.loggedIn = false;    \r\n//     //     }\r\n//     //     state.userData.gotUserData = true;\r\n//     //     forceUpdate();\r\n//     //     // return response;\r\n//     // }\r\n\r\n//     // async function updateUserData(){\r\n//     //     console.log('get user data');\r\n//     //     console.log('api path: ', state.globals.varNames.apiPath);\r\n//     //     // console.log('token: ', state.userData.token);\r\n        \r\n//     //     var response = await apiCall(state.globals.varNames.apiPath + 'user/getUserDataOnly', {});  \r\n       \r\n//     //     console.log('response: ', response);\r\n//     //     if(response.status == 1){\r\n//     //         initiateUserData(response.payload);\r\n            \r\n//     //         var responseSosyal = await apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {});\r\n//     //         console.log('response sosyal: ', responseSosyal);\r\n//     //         if(responseSosyal.status == 1){\r\n//     //             initiateSosyalData(responseSosyal.payload);\r\n                \r\n//     //         }\r\n            \r\n            \r\n            \r\n            \r\n//     //     }\r\n        \r\n//     //     // return response;\r\n//     // }\r\n\r\n//     // function checkPassword(password){\r\n//     //     let minChar = 2;\r\n//     //     let maxPassLength = 20;\r\n//     //     if(state.userData.production){\r\n//     //         minChar = 2;\r\n//     //     }\r\n//     //     let numUpper = (password.match(/[A-Z]/g) || []).length;\r\n//     //     let numLower = (password.match(/[a-z]/g) || []).length;\r\n//     //     let numInt = (password.match(/[0-9]/g) || []).length;\r\n//     //     let status = false;\r\n//     //     let message = '';\r\n//     //     // var specialCharPass = (password.match(/[^a-z0-9]/ig) || []).length;\r\n//     //     if(password != ''){\r\n//     //         if(numUpper >= minChar && numLower >= minChar && numInt >= minChar){\r\n            \r\n//     //             status = true;\r\n                \r\n//     //         }else{\r\n//     //             if(numUpper < minChar){\r\n                    \r\n//     //                 message = 'Password must contain at least ' + minChar + ' capital letters.';\r\n//     //             }else if(numLower < minChar){\r\n//     //                 message = 'Password must contain at least ' + minChar + ' small letters.';     \r\n//     //             }else{\r\n//     //                 message = 'Password must contain at least ' + minChar + ' numbers.';\r\n                    \r\n//     //             }\r\n                \r\n//     //         }\r\n//     //     }else{\r\n//     //         status = true;\r\n//     //     }\r\n        \r\n\r\n//     //     return {\r\n//     //         status,\r\n//     //         message\r\n//     //     }\r\n//     // }\r\n\r\n//     // function checkPassInput(password){\r\n//     //     let minChar = 0;\r\n//     //     let maxPassLength = 20;\r\n//     //     if(!state.userData.production){\r\n//     //         minChar = 2;\r\n//     //     }\r\n//     //     let numUpper = (password.match(/[A-Z]/g) || []).length;\r\n//     //     let numLower = (password.match(/[a-z]/g) || []).length;\r\n//     //     let numInt = (password.match(/[0-9]/g) || []).length;\r\n//     //     let status = false;\r\n//     //     let message = '';\r\n//     //     // var specialCharPass = (password.match(/[^a-z0-9]/ig) || []).length;\r\n//     //     if(numUpper >= minChar && numLower >= minChar && numInt >= minChar){\r\n//     //         message = '';\r\n//     //         // status = true;\r\n            \r\n//     //     }else{\r\n//     //         if(numUpper < minChar){\r\n                \r\n//     //             message = 'Password must contain at least ' + minChar + ' capital letters.';\r\n//     //         }else if(numLower < minChar){\r\n//     //             message = 'Password must contain at least ' + minChar + ' small letters.';     \r\n//     //         }else{\r\n//     //             message = 'Password must contain at least ' + minChar + ' numbers.';\r\n                \r\n//     //         }\r\n            \r\n//     //     }\r\n\r\n//     //     return message;\r\n//     // }\r\n\r\n//     function repeatPasswordChange(password, repeatPass){\r\n//         if(password != repeatPass && repeatPass != ''){\r\n//             return 'Password and repeat password are not equal.';\r\n//         }else{\r\n//             return '';\r\n//         }\r\n//     }\r\n\r\n//     // function checkRepeatPassInput(password, repeatPass){\r\n//     //     if(password != repeatPass){\r\n//     //         return 'Password and repeat password are not equal.';\r\n//     //     }else{\r\n//     //         return '';\r\n//     //     }\r\n//     // }\r\n\r\n//     // function checkUsernameInput(username){\r\n//     //     let minChar = 3;\r\n//     //     let label = 'Username';\r\n//     //     let msg = '';\r\n//     //     // if(!isUsername){\r\n//     //     //     minChar = 5;\r\n//     //     //     label = 'Address';\r\n//     //     // }\r\n//     //     let maxChar = 16;\r\n//     //     if(state.userData.production){\r\n//     //         minChar = 0;\r\n//     //     }\r\n\r\n//     //     let specialCharUsername = (username.match(/[^a-z0-9_]/ig) || []).length;\r\n//     //     if(specialCharUsername == 0 && username.length >= minChar && username.length <= maxChar){\r\n//     //         msg = '';\r\n            \r\n//     //     }else{\r\n//     //         if(specialCharUsername > 0){\r\n//     //             msg = label +' can only contain numbers, letters and _.';\r\n//     //             // setError(label +' can only contain numbers, letters and _.');\r\n//     //         }else if(username.length < minChar){\r\n//     //             msg = label +' must be at least ' + minChar + ' characters.';\r\n//     //             // setError(label +' must be at least ' + minChar + ' characters.');\r\n//     //         }else{\r\n//     //             msg = label +' cannot exceed ' + maxChar + ' characters.';\r\n//     //             // setError(label +' cannot exceed ' + maxChar + ' characters.');    \r\n//     //         }\r\n//     //     }\r\n\r\n//     //     return msg;\r\n//     // }\r\n\r\n//     // function convertStrToNum(str){\r\n//     //     let num = '0';\r\n//     //     if(str != ''){\r\n//     //         num = str;\r\n//     //     } \r\n        \r\n//     //     return num;\r\n//     // }\r\n\r\n//     // function convertNumToStr(num){\r\n//     //     let str = '';\r\n//     //     if(num != 0){\r\n//     //         str = num + '';\r\n//     //     } \r\n        \r\n//     //     return str;\r\n//     // }\r\n\r\n//     // function getDelayer(timeOutID, funcToRun){\r\n//     //     console.log('time out id: ', timeOutID);\r\n//     //     clearTimeout(timeOutID);\r\n//     //     timeOutID = setTimeout(()=>{\r\n//     //         funcToRun();\r\n//     //     }, 1000); \r\n//     //     return timeOutID;    \r\n//     // }\r\n\r\n//     // function funcDelayer(timeOutID, funcToRun, timeOfDelay){\r\n//     //     console.log('time out id: ', timeOutID);\r\n//     //     let newTimeOutID = 0;\r\n//     //     clearTimeout(timeOutID);\r\n//     //     newTimeOutID = setTimeout(()=>{\r\n//     //         funcToRun();\r\n//     //     }, timeOfDelay * 1000); \r\n//     //     return newTimeOutID;    \r\n//     // }\r\n\r\n//     // async function getMsgs(headerID, startPoint){\r\n//     //     console.log('get user data');\r\n//     //     console.log('api path: ', state.globals.varNames.apiPath);\r\n//     //     // console.log('token: ', state.userData.token);\r\n//     //     let data = {\r\n//     //         headerID: headerID,\r\n//     //         startPoint: startPoint\r\n//     //     }\r\n\r\n//     //     var response = await apiCall(state.globals.varNames.blagsApiPath + 'message/showMessages', data);  \r\n//     //     state.messageData.msgs = response.payload;\r\n//     //     state.userData.viewingMsgs = true;\r\n//     //     state.messageData.headerIDViewed = headerID;\r\n//     //     forceUpdate();\r\n//     //     // return response.payload;\r\n//     //     // return response;\r\n//     // }\r\n\r\n//     // function changeOutsidePage(page){\r\n//     //     state.userData.currentPage.front = page;\r\n//     //     forceUpdate();\r\n//     // }\r\n\r\n//     // function connectToSocket(){\r\n//     //     const socket = io(state.globals.varNames.blagsServerPath + '?token=' + state.userData.sosyalData.socketToken);\r\n\r\n//     //     // const socket = io('http://192.168.1.4:9000?token=hey');\r\n// \t// // const socket2 = io('http://192.168.1.4:9000?token=hey2');\r\n//     //     socket.on('connect', function(){\r\n//     //         console.log('connected')\r\n//     //     });\r\n        \r\n//     //     socket.on('disconnect', function(){\r\n//     //         console.log('disconnected')\r\n//     //     });\r\n\r\n//     //     socket.on('New message', function(){\r\n//     //         console.log('new message')\r\n//     //     });\r\n//     //     // console.log('socket id: ', socket.sessionid);\r\n//     // }\r\n\r\n//     function forceUpdate(){\r\n//         dispatch({\r\n//             type: 'UPDATE_USER_DATA',\r\n//             payload: 'username'\r\n//         });   \r\n//     }\r\n\r\n//     // function toggleNav(){\r\n//     //     state.userData.openingNav = !state.userData.openingNav;  \r\n//     //     forceUpdate();\r\n//     // }\r\n\r\n//     // function getOrder(isAsc){\r\n//     //     let order = 0;\r\n//     //     if(isAsc){\r\n//     //         order = 1;\r\n//     //     }\r\n        \r\n        \r\n//     //     return order;\r\n//     // }\r\n\r\n//     // function getApiPath(){\r\n//     //     console.log('initiate sosyal data');\r\n//     //     let apiPath = state.globals.varNames.apiPath;\r\n//     //     if(state.userData.isSosyal){\r\n//     //         apiPath = state.globals.varNames.blagsApiPath;\r\n//     //     }\r\n//     //     return apiPath;\r\n        \r\n        \r\n        \r\n//     // }\r\n\r\n//     // function getImgPath(){\r\n//     //     console.log('initiate sosyal data');\r\n//     //     let apiPath = state.globals.varNames.imgPath;\r\n//     //     if(state.userData.isSosyal){\r\n//     //         apiPath = state.globals.varNames.imgPathBlags;\r\n//     //     }\r\n//     //     return apiPath;\r\n        \r\n        \r\n        \r\n//     // }\r\n\r\n//     // function getSiteID(){\r\n//     //     console.log('initiate sosyal data');\r\n//     //     let siteID = state.appData.siteID;\r\n//     //     if(state.userData.isSosyal){\r\n//     //         siteID = state.appData.sosyalID;\r\n//     //     }\r\n//     //     return siteID;\r\n        \r\n        \r\n        \r\n//     // }\r\n\r\n//     // function dateToStr(payload) { \r\n//     //     let timestampDate = new Date(payload * 1000);\r\n//     //     let hours = timestampDate.getHours();\r\n//     //     let minutes = timestampDate.getMinutes();\r\n//     //     let seconds = timestampDate.getSeconds();\r\n//     //     let year = timestampDate.getFullYear();\r\n//     //     let month = timestampDate.getMonth() + 1;\r\n//     //     let date = timestampDate.getDate();  \r\n        \r\n//     //     return month + \"/\" + date + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;     \r\n//     // }\r\n\r\n//     // function datePickerStr(time) { \r\n//     //     let dateToConvert = new Date(time);\r\n//     //     let month = dateToConvert.getMonth() + 1;\r\n//     //     let day = dateToConvert.getDate();\r\n//     //     let monthFinal = month;\r\n//     //     let dayFinal = day;\r\n\r\n//     //     if(month < 10){\r\n//     //         monthFinal = '0' + month;\r\n//     //     } \r\n\r\n//     //     if(day < 10){\r\n//     //         dayFinal = '0' + day;\r\n//     //     }\r\n\r\n        \r\n//     //     let dateStr = dateToConvert.getFullYear() + '-' + monthFinal + '-' + dayFinal;  \r\n//     //     return dateStr;   \r\n//     // }\r\n\r\n\r\n//     // function initiateSosyalData(data){\r\n//     //     console.log('initiate sosyal data');\r\n//     //     state.userData.sosyalData.balance = data.balance;\r\n//     //     state.userData.sosyalData.dataBal = data.dataBal;\r\n//     //     state.userData.sosyalData.totalAddtlData = data.totalAddtlData;\r\n//     //     state.userData.sosyalData.socketToken = data.sosyalSocketToken;\r\n//     //     state.userData.sosyalData.country = data.country;\r\n//     //     state.userData.sosyalData.name = data.name;\r\n//     //     state.userData.sosyalData.description = data.description;\r\n//     //     state.userData.sosyalData.tags = data.tags;\r\n//     //     state.userData.sosyalData.imgURL = data.imgURL;\r\n//     //     state.userData.sosyalData.bidBal = data.bidBal;\r\n//     //     state.userData.sosyalData.bidAmt = data.bidAmt;\r\n//     //     state.userData.sosyalData.rating = data.rating;\r\n//     //     state.userData.sosyalData.numOfRaters = data.numOfRaters;\r\n//     //     state.userData.sosyalData.ratingVerified = data.ratingVerified;\r\n//     //     state.userData.sosyalData.numOfRatersVerified = data.numOfRatersVerified;\r\n//     //     state.userData.sosyalData.photoPassword = data.photoPassword;\r\n//     //     state.userData.verifiedDataSet = data.verifiedDataSet;\r\n//     //     state.userData.verifiedDataSet = false;\r\n//     //     state.userData.verifiedData = data.verifiedData;\r\n//     //     // state.userData.verifiedData.address = data.verifiedData.address;\r\n//     //     state.userData.followedUsers = data.followedUsers;\r\n//     //     state.userData.sosyalData.joinReqs = data.joinReqs;\r\n//     //     state.userData.sosyalData.companyID = data.companyID;\r\n//     //     state.userData.sosyalData.company = data.company;\r\n//     // }\r\n\r\n//     function initiateUserData(userData){\r\n//         console.log('initiate user data');\r\n//         state.userData.username = userData.username;\r\n//         state.userData.userID = userData.userID;\r\n//         state.userData.name = userData.name;\r\n//         state.userData.imgURL = userData.imgURL;\r\n//         state.userData.description = userData.description;\r\n//         state.userData.companyID = userData.companyID;\r\n//         state.userData.tags = userData.tags;\r\n//         state.userData.position.lat = userData.lat / 1000000000000;\r\n//         state.userData.position.lng = userData.lng / 1000000000000;\r\n//         let groserMode = true;\r\n//         if(userData.groserMode == 0){\r\n//             groserMode = false;\r\n//         }\r\n//         state.userData.groserMode = groserMode;\r\n//         state.userData.country = userData.country;\r\n//         state.userData.imgPath = userData.imgPath;\r\n//         // state.userData.postsID = userData.postsID;\r\n//         // state.userData.reviewsID = userData.reviewsID;\r\n//         state.userData.dataBal = userData.dataBal;\r\n//         state.userData.totalAddtlData = userData.totalAddtlData;\r\n//         state.userData.balance = userData.balance;\r\n//         state.userData.bidBal = userData.bidBal;\r\n//         state.userData.bidAmt = userData.bidAmt;\r\n//         state.userData.expenses = userData.expenses;\r\n//         state.userData.rating = userData.rating;\r\n//         state.userData.numOfRaters = userData.numOfRaters;\r\n//         state.userData.ratingVerified = userData.ratingVerified;\r\n//         state.userData.numOfRatersVerified = userData.numOfRatersVerified;\r\n//         state.userData.photoPassword = userData.photoPassword;\r\n//         state.userData.joinReqs = userData.joinReqs;\r\n//         state.userData.company = userData.company;\r\n        \r\n//         // state.userData.blagssPassSet = userData.blagssPassSet;\r\n//         // state.userData.passwordSet = userData.passwordSet;\r\n        \r\n        \r\n//     }\r\n\r\n    \r\n//     // function initiateGlobals(globals){\r\n//     //     state.globals.numOfItems = globals.numOfItems;\r\n//     //     state.globals.numOfPosts = globals.numOfItems;\r\n        \r\n//     // }\r\n\r\n//     // function setVariables(payload){\r\n//     //     state.countries = payload.countries;\r\n//     //     state.globals.errorCodes = payload.codes;\r\n//     //     // state.globals.varNames.chatApiPath = payload.paths.chat; \r\n//     //     // state.globals.varNames.imgPath = payload.paths.profileImg;  \r\n//     //     // state.globals.varNames.itemsImgPath = payload.paths.itemsImg;  \r\n//     //     // // state.globals.varNames.apiPath = payload.paths.own; \r\n//     //     // state.globals.varNames.blagsApiPath = payload.paths.blags;  \r\n//     //     // state.globals.varNames.blagsImgPath = payload.paths.sosyalImg;  \r\n//     //     // console.log('path img: ', context.state.globals.varNames.itemsImgPath);\r\n//     //     // context.state.globals.varNames.serchApiPath = payload.paths.serch;  \r\n//     //     // context.state.globals.varNames.ad = payload.paths.chat;   \r\n//     // }\r\n\r\n//     // async function getSearchTags(tag, startPt, isUserTags){\r\n\r\n//     //     let tags = [];\r\n\r\n//     //     let data = {\r\n//     //         tag: tag,\r\n//     //         startPoint: startPt,\r\n               \r\n//     //     }\r\n\r\n//     //     let path = 'user/getSearchTags';\r\n//     //     if(isUserTags){\r\n//     //         path = 'user/getUserHints';\r\n//     //     }\r\n\r\n//     //     let response = await apiCall(getApiPath() + path, data);\r\n//     //     console.log('response: ', response);\r\n//     //     if(response.status == 1){\r\n//     //         // setTags(response.payload);\r\n//     //         tags = response.payload\r\n//     //     } \r\n        \r\n//     //     return tags;\r\n//     // }\r\n\r\n//     function changePage(page){\r\n//         console.log('initiate user data');\r\n//         state.userData.currentPage.back = page;\r\n//         forceUpdate();\r\n//         // dispatch({\r\n//         //     type: 'UPDATE_USER_DATA',\r\n//         //     payload: 'username'\r\n//         // });\r\n        \r\n//     }\r\n\r\n//     function changeApp(page){\r\n//         console.log('initiate user data');\r\n//         state.userData.pageNumm ++;\r\n//         forceUpdate();\r\n//         // dispatch({\r\n//         //     type: 'UPDATE_USER_DATA',\r\n//         //     payload: 'username'\r\n//         // });\r\n        \r\n//     }\r\n\r\n//     function randomStr(length) {\r\n//         let result           = '';\r\n//         let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        \r\n//         let charactersLength = characters.length;\r\n//         for ( let i = 0; i < length; i++ ) {\r\n//            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n//         }\r\n//         return result;\r\n//     }\r\n\r\n//     function convertTagsToStr(tags) {\r\n        \r\n//         let tagsStr = '';\r\n//         let tagsArr = JSON.parse(tags);\r\n//         console.log('tags Arr: ', tagsArr);\r\n//         tagsArr.forEach((tag, ndx) => {\r\n//             tagsStr = tagsStr + tag + ' ';\r\n//         })\r\n//         // if(tagsArr === Array){\r\n            \r\n//         // }\r\n//         console.log('tags str: ', tagsStr);\r\n//         return tagsStr;\r\n//     }\r\n\r\n//     function convertTagsStrToArrayStr(tagsStr) {\r\n//         let tagsArray = tagsStr.split(\" \");\r\n//         let arrayStr = JSON.stringify(tagsArray);\r\n//         return arrayStr;\r\n//     }\r\n\r\n//     async function cancelShapper(userID, type) {\r\n//         let data = {\r\n//             type: type,\r\n//             userID: userID   \r\n//         }\r\n//         let response = await apiCall(state.globals.varNames.apiPath + 'map/cancelHire', data); \r\n//         console.log('response: ', response);\r\n//         if(response.status == 1){\r\n//             showToast(response.message, 3, false);\r\n//         } \r\n//     }\r\n\r\n//     function createUserInfo(username, rating, ratingVerified, numOfRaters, numOfRatersVerified, imgURL) {\r\n        \r\n//         let userInfo = {\r\n//             username: username,\r\n//             rating: rating,\r\n//             ratingVerified: ratingVerified,\r\n//             numOfRaters: numOfRaters,\r\n//             numOfRatersVerified: numOfRatersVerified,\r\n//             imgURL: imgURL\r\n//         }\r\n\r\n//         return userInfo;\r\n//     }\r\n\r\n//     function openModal(payload) {\r\n//         console.log('open modal start');\r\n//         state.appModalData.title = payload.title;\r\n//         state.appModalData.index = payload.index;\r\n//         state.appModalData.page = payload.page;\r\n        \r\n//         state.appModalData.addtlData = payload.addtlData;\r\n       \r\n    \r\n//         state.userData.showingModal = true;\r\n        \r\n//     }\r\n\r\n//     function openSingleModal(name, data) {\r\n//         console.log('open modal start');\r\n//         state.userData.openingSingleModal = true;\r\n//         state.singleModalData.name = name;\r\n//         state.singleModalData.data = data;\r\n//         forceUpdate();\r\n        \r\n//     }\r\n\r\n//     function openYesNoModal(question, callbackFunc) {\r\n//         console.log('open modal start');\r\n//         state.userData.openingYesNoModal = true;\r\n//         state.yesNoModalData.callbackFunc = callbackFunc;\r\n//         state.yesNoModalData.question = question;\r\n//         forceUpdate();\r\n        \r\n//     }\r\n\r\n//     function openMsgModal(username, msg, msgID, headerID) {\r\n//         console.log('open modal start');\r\n//         state.userData.openingMsgModal = true;\r\n//         state.msgModalData.username = username;\r\n//         state.msgModalData.msg = msg;\r\n//         state.msgModalData.msgID = msgID;\r\n//         state.msgModalData.headerID = headerID;\r\n//         // state.msgModalData.replying = replying;\r\n//         forceUpdate();\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function openStartPtModal(value, callbackFunc) {\r\n//         console.log('open modal start');\r\n//         console.log('value: ', value);\r\n//         console.log('callback func: ', callbackFunc);\r\n//         state.userData.openingStartPtModal = true;\r\n//         state.startPtModalData.value = value;\r\n//         state.startPtModalData.callbackFunc = callbackFunc;\r\n        \r\n//         forceUpdate();\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function openMoreOptionsModal(options, onClickOptionFunc) {\r\n//         console.log('open modal start');\r\n//         // console.log('value: ', value);\r\n//         // console.log('callback func: ', onClickOptionFunc);\r\n//         state.userData.openingMoreOptionsModal = true;\r\n//         state.moreOptionsModalData.options = options;\r\n//         state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n        \r\n//         forceUpdate();\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function openGroserModal(data) {\r\n//         console.log('open modal start');\r\n//         // console.log('value: ', value);\r\n//         // console.log('callback func: ', onClickOptionFunc);\r\n//         state.userData.openingGroserModal = true;\r\n//         state.groserModalData.data = data;\r\n//         // state.groserModalData.name = name;\r\n//         // state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n        \r\n//         forceUpdate();\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function getLinks(text, linkType) {\r\n//         let words = text;\r\n//         let wordArray = [];\r\n//         if(linkType == 'userLink'){\r\n//             wordArray = words.split(/@([a-z0-9]+)/i);\r\n//         }else if(linkType == 'link'){\r\n//             wordArray = words.split(/\\[link\\]([a-z0-9.\\/:]+)\\[\\/link\\]/i);\r\n//         }\r\n        \r\n//         let wordsObjArr = [];\r\n//         if(wordArray.length > 1){\r\n//             wordArray.forEach((word, ndx) => {\r\n//                 if((ndx + 1) % 2 == 0){\r\n//                     wordsObjArr.push({\r\n//                         text: word,\r\n//                         obj: linkType\r\n//                     })\r\n//                 }else{\r\n//                     wordsObjArr.push({\r\n//                         text: word,\r\n//                         obj: 'text'\r\n//                     })   \r\n//                 }\r\n//             })\r\n//         }\r\n        \r\n\r\n//         return wordsObjArr;\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function convertTextToObj(text) {\r\n        \r\n//         let wordsObjArr = getLinks(text, 'userLink');\r\n//         // console.log('words obj arr: ', wordsObjArr);\r\n//         if(wordsObjArr.length == 0){\r\n//             wordsObjArr.push({\r\n//                 text: text,\r\n//                 obj: 'text'   \r\n//             })\r\n//         }\r\n        \r\n//         let wordsObjArrLinks = [];\r\n//         for(let i = 0; i < wordsObjArr.length; i++){\r\n//             if(wordsObjArr[i].obj == 'text'){\r\n//                 wordsObjArrLinks = getLinks(wordsObjArr[i].text, 'link'); \r\n//                 // console.log('words obj links: ', wordsObjArrLinks);\r\n//                 if(wordsObjArrLinks.length > 0){\r\n                    \r\n//                     wordsObjArrLinks.forEach((wordObjLinks, ndx) => {\r\n//                         wordsObjArr.splice(i + ndx + 1, 0, wordObjLinks);\r\n//                         // wordsObjArr.push(wordObjLinks);\r\n//                     })\r\n//                     wordsObjArr.splice(i, 1);\r\n//                 }    \r\n//             }\r\n//         }\r\n\r\n//         // console.log('words obj: ', wordsObjArr);\r\n//         // let component = <View style={{flexDirection: 'row', marginVertical: 10}}>\r\n//         //     {wordsObjArr.map((word, ndx) => {\r\n//         //         if(word.obj == 'text'){\r\n//         //             return <Text>{word.text}</Text>;   \r\n//         //         }else{\r\n//         //             if(word.obj == 'userLink'){\r\n//         //                 return <Text key={ndx} onPress={()=>{showOtherUser(word.text)}}>{'@' + word.text}</Text>      \r\n//         //             }else{\r\n//         //                 return <Text key={ndx} onPress={()=>{Linking.openURL('https://google.com')}}>{'#' + word.text}</Text>      \r\n//         //             }\r\n                    \r\n//         //         }\r\n                \r\n                \r\n                \r\n//         //     })}            \r\n//         // </View>\r\n        \r\n        \r\n\r\n//         return wordsObjArr;\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function convertEmptyStr(str){\r\n//         var strRegex = str.replace(/ /ig, \"\");\r\n//         var strFinal = '';\r\n//         console.log('str regex: ', strRegex);\r\n//         if(strRegex != ''){\r\n//             strFinal = str;\r\n//         }\r\n    \r\n//         return strFinal;\r\n//     }\r\n\r\n//     function showOtherUser2(username) {\r\n//         console.log('open modal start');\r\n//         if(username == state.userData.username){\r\n//             changePage('Profile');\r\n//         }else{\r\n//             state.userData.showingOtherUser = true;\r\n//             state.otherUserData.username = username;\r\n            \r\n//             forceUpdate();\r\n//         }\r\n        \r\n    \r\n        \r\n        \r\n//     }\r\n\r\n\r\n//     function showOtherUser(username) {\r\n//         console.log('open modal start');\r\n//         if(username == state.userData.username){\r\n//             changePage('Profile');\r\n//         }else{\r\n//             showOtherPage('Other User', username);\r\n//         }\r\n        \r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function showOtherPage(name, data) {\r\n//         console.log('open modal start');\r\n        \r\n        \r\n    \r\n//         state.userData.showingOtherPage = true;\r\n//         state.otherPageData.name = name;\r\n//         state.otherPageData.data = data;\r\n//         state.userData.otherPageNum ++;\r\n//         forceUpdate();\r\n        \r\n//     }\r\n\r\n//     function showOtherUserList(userID) {\r\n//         // console.log('open modal start');\r\n//         // state.userData.showingOtherUserList = true;\r\n//         // state.otherUserListData.userID = userID;\r\n        \r\n//         // forceUpdate();\r\n    \r\n//         showOtherPage('Other List', userID);\r\n        \r\n//     }\r\n\r\n//     function showOtherPost(post) {\r\n//         console.log('show other post');\r\n//         // state.userData.showingOtherPost = true;\r\n//         // state.otherPostData = post;\r\n        \r\n//         // forceUpdate();\r\n//         showOtherPage('Other Post', post);\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function showToast(message, duration, isError) {\r\n//         console.log('open modal start');\r\n//         state.userData.showingToast = true;\r\n//         state.toastData.message = message;\r\n//         state.toastData.duration = duration;\r\n//         state.toastData.isError = isError;\r\n//         forceUpdate();\r\n    \r\n        \r\n        \r\n//     }\r\n\r\n//     function createProfileData(userID, imgURL, imgPath, username, name, description, country, rating, numOfRaters, isSosyal, photoPassword, ratingVerified, numOfRatersVerified) {\r\n\r\n//         let profile = {\r\n//             userID: userID,\r\n//             imgURL: imgURL,\r\n//             imgPath: imgPath,\r\n//             // profileImgUrl: globals.varNames.imgPathBlags + userData.sosyalData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword,\r\n//             username: username,\r\n//             name: name,\r\n//             description: description,\r\n//             country: country,\r\n//             rating: rating,\r\n//             numOfRaters: numOfRaters,\r\n//             ratingVerified: ratingVerified,\r\n//             numOfRatersVerified: numOfRatersVerified,\r\n//             isSosyal: isSosyal,\r\n//             photoPassword: photoPassword\r\n//         } \r\n        \r\n//         return profile;\r\n        \r\n        \r\n//     }\r\n\r\n//     function logout(){\r\n//         state.userData.loggedIn = false;\r\n//         localStorage.removeItem('userData'); \r\n//         state.userData.currentPage.front = 'login';    \r\n//         forceUpdate();  \r\n//     }\r\n\r\n//     return (<GlobalContext.Provider value = {{\r\n//         appData: state.appData,\r\n//         userData: state.userData,\r\n//         globals: state.globals,\r\n//         countries: state.countries,\r\n//         // appModalData: state.appModalData,\r\n//         // mapData: state.mapData,\r\n//         otherUserData: state.otherUserData,\r\n//         otherUserListData: state.otherUserListData,\r\n//         otherPostData: state.otherPostData,\r\n//         toastData: state.toastData,\r\n//         msgModalData: state.msgModalData,\r\n//         startPtModalData: state.startPtModalData,\r\n//         singleModalData: state.singleModalData,\r\n//         yesNoModalData: state.yesNoModalData,\r\n//         moreOptionsModalData: state.moreOptionsModalData,\r\n//         otherPageData: state.otherPageData,\r\n//         groserModalData: state.groserModalData,\r\n//         login,\r\n//         apiCall,\r\n//         getUserData,\r\n//         updateUserData,\r\n//         changePage,\r\n//         changeApp,\r\n//         forceUpdate,\r\n//         toggleNav,\r\n//         dateToStr,\r\n//         datePickerStr,\r\n//         getMsgs,\r\n//         changeOutsidePage,\r\n//         openModal,\r\n//         getDelayer,\r\n//         getSearchTags,\r\n//         randomStr,\r\n//         funcDelayer,\r\n//         checkPassword,\r\n//         repeatPasswordChange,\r\n//         checkUsernameInput,\r\n//         checkRepeatPassInput,\r\n//         checkPassInput,\r\n//         showOtherUser,\r\n//         showOtherUserList,\r\n//         showOtherPost,\r\n//         showOtherPage,\r\n//         showToast,\r\n//         openMsgModal,\r\n//         openStartPtModal,\r\n//         openSingleModal,\r\n//         openYesNoModal,\r\n//         openMoreOptionsModal,\r\n//         openGroserModal,\r\n//         cancelShapper,\r\n//         convertTextToObj,\r\n//         convertEmptyStr,\r\n//         getApiPath,\r\n//         getImgPath,\r\n//         getSiteID,\r\n//         getOrder,\r\n//         convertNumToStr,\r\n//         convertStrToNum,\r\n//         createUserInfo,\r\n//         convertTagsToStr,\r\n//         convertTagsStrToArrayStr,\r\n//         createProfileData,\r\n//         logout\r\n        \r\n//     }}>\r\n//         {children}\r\n//     </GlobalContext.Provider>)\r\n// }\r\n\r\nexport default GlobalProvider;","import React, {createContext, useReducer, useState, forwardRef, useRef, useEffect} from 'react';\r\n// import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport AppReducer from './AppReducer';\r\nimport InitialState from './InitialState';\r\nimport axios from 'axios';\r\n// import Pages from '../../MainViews/Pages';\r\nimport GlobalProviderCom from '../common/Context/GlobalProvider2';\r\n// import io from 'socket.io-client';\r\n\r\n// import { Linking } from 'react-native';\r\n// import { Text, CardItem, View } from 'native-base';\r\n\r\nconst initialState = InitialState;\r\n\r\n\r\n// const PagesFinal = forwardRef(Pages);\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n// getSearchTags\r\nexport const GlobalProvider = ({children}) => {\r\n    console.log('GLOBAL PROVIDER');\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    // const pagesRef = useRef(null);\r\n    \r\n    function login(username){\r\n        console.log('login');\r\n        dispatch({\r\n            type: 'DELETE',\r\n            payload: username\r\n        });\r\n    }\r\n\r\n    function checkErrors(code){\r\n        return GlobalProviderCom.checkErrors(code, state, forceUpdate);\r\n    }\r\n\r\n    // function checkErrors(code){\r\n    //     let errorExist = false;\r\n    //     // let codeFinal\r\n    //     console.log('state. globals: ', state.globals);\r\n    //     console.log('code: ', code);\r\n    //     state.globals.errorCodes.forEach((errorCode) => {\r\n    //         if(code == errorCode){\r\n    //             errorExist = true;\r\n    //             if(errorCode == 500){\r\n    //                 openSingleModal('Info', {div: 'Data'});  \r\n    //                 // showToast('wsjf alsjfafsf ljsfajfjsf ;ajsfjjf ;asfjajs  f lakjjdflajfjajf ;adfjsjff asfa; asdfsldkf a;sdfasf jalsfjfa afjaf;af kajsjfal', 5000);\r\n    //             }else if(errorCode == 501){\r\n    //                 openSingleModal('Info', {div: 'Balance'});\r\n    //                 // showToast('wsjf alsjfafsf ljsfajfjsf ;ajsfjjf ;asfjajs  f lakjjdflajfjajf ;adfjsjff asfa; asdfsldkf a;sdfasf jalsfjfa afjaf;af kajsjfal', 5000);\r\n    //             }else if(errorCode == 56){\r\n    //                 showToast('Request limit exceeded. Try again after a few seconds.', 5, true);\r\n                    \r\n                    \r\n    //             }else if(errorCode == 5){\r\n    //                 showToast('Invalid token.', 5, true);\r\n    //                 logout();\r\n                    \r\n    //             }\r\n    //         }\r\n    //     })  \r\n        \r\n    //     return errorExist;\r\n    // }\r\n\r\n    \r\n\r\n    async function apiCall2(url, data){\r\n        let response = await axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: data,\r\n            headers: {\r\n                'x-access-token': state.userData.token,\r\n                'version': state.appData.version,\r\n                'sosyal-version': state.appData.versionSosyal,\r\n            }    \r\n        })\r\n    \r\n        response.data.globalError = false;\r\n    \r\n        if(response.data.status == 0){\r\n            if(!checkErrors(response.data.code)){\r\n                showToast(response.data.message, 3, true);\r\n            }\r\n        }\r\n    \r\n        \r\n        return response.data;\r\n    \r\n        \r\n    };\r\n\r\n    function apiCall(url, data){\r\n        return GlobalProviderCom.apiCall(url, data, state, forceUpdate);\r\n    }\r\n\r\n    async function getUserData2(token){\r\n        console.log('get user data');\r\n        console.log('api path: ', state.globals.varNames.apiPath);\r\n        // console.log('token: ', state.userData.token);\r\n        state.userData.token = token;\r\n        localStorage.setItem('userData', JSON.stringify({token: state.userData.token}));\r\n        var response = await apiCall(state.globals.varNames.apiPath + 'user/getUserData', {});  \r\n       \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            initiateUserData(response.payload.userData);\r\n            setVariables(response.payload);\r\n            initiateGlobals(response.payload.globals);\r\n            var responseSosyal = await apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {});\r\n            console.log('response sosyal: ', responseSosyal);\r\n            if(responseSosyal.status == 1){\r\n                initiateSosyalData(responseSosyal.payload);\r\n                state.userData.currentPage.back = 'Home';\r\n                state.userData.loggedIn = true;\r\n            }else{\r\n                state.userData.loggedIn = false;\r\n            }\r\n            \r\n            \r\n            \r\n            // connectToSocket();\r\n            \r\n            // dispatch({\r\n            //     type: 'UPDATE_USER_DATA',\r\n            //     payload: 'username'\r\n            // });\r\n        }else{\r\n            // state.userData.gotUserData = true;\r\n            state.userData.loggedIn = false;    \r\n        }\r\n        state.userData.gotUserData = true;\r\n        forceUpdate();\r\n        // return response;\r\n    }\r\n\r\n    function getUserData(token){\r\n        GlobalProviderCom.getUserData(token, state, initiateUserData, forceUpdate);\r\n    }\r\n\r\n    // async function getUserToken(){\r\n    //     console.log('get user token');\r\n    //     // console.log('asyn storage: ', AsyncStorage);\r\n    //     let value = localStorage.getItem('userData');\r\n    //     console.log('value: ', value);\r\n    //     let userDataStorage = JSON.parse(value); \r\n        \r\n    //     if(userDataStorage != null){\r\n    //         console.log('userdata storage: ', userDataStorage);\r\n    //         // userData.token = userDataStorage.token;\r\n    //         getUserData(userDataStorage.token);\r\n            \r\n            \r\n            \r\n    //     }else{\r\n    //         state.userData.gotUserData = true;\r\n    //         state.userData.loggedIn = false;\r\n    //         forceUpdate();\r\n    //     }   \r\n        \r\n    // }\r\n\r\n    async function updateUserData2(){\r\n        console.log('get user data');\r\n        console.log('api path: ', state.globals.varNames.apiPath);\r\n        // console.log('token: ', state.userData.token);\r\n        \r\n        var response = await apiCall(state.globals.varNames.apiPath + 'user/getUserDataOnly', {});  \r\n       \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            initiateUserData(response.payload);\r\n            \r\n            var responseSosyal = await apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {});\r\n            console.log('response sosyal: ', responseSosyal);\r\n            if(responseSosyal.status == 1){\r\n                initiateSosyalData(responseSosyal.payload);\r\n                \r\n            }\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        \r\n        // return response;\r\n    }\r\n\r\n    function updateUserData(){\r\n        return GlobalProviderCom.updateUserData(state, initiateUserData, forceUpdate);\r\n    }\r\n\r\n    function checkPassword(password){\r\n        let minChar = 2;\r\n        let maxPassLength = 20;\r\n        if(state.userData.production){\r\n            minChar = 2;\r\n        }\r\n        let numUpper = (password.match(/[A-Z]/g) || []).length;\r\n        let numLower = (password.match(/[a-z]/g) || []).length;\r\n        let numInt = (password.match(/[0-9]/g) || []).length;\r\n        let status = false;\r\n        let message = '';\r\n        // var specialCharPass = (password.match(/[^a-z0-9]/ig) || []).length;\r\n        if(password != ''){\r\n            if(numUpper >= minChar && numLower >= minChar && numInt >= minChar){\r\n            \r\n                status = true;\r\n                \r\n            }else{\r\n                if(numUpper < minChar){\r\n                    \r\n                    message = 'Password must contain at least ' + minChar + ' capital letters.';\r\n                }else if(numLower < minChar){\r\n                    message = 'Password must contain at least ' + minChar + ' small letters.';     \r\n                }else{\r\n                    message = 'Password must contain at least ' + minChar + ' numbers.';\r\n                    \r\n                }\r\n                \r\n            }\r\n        }else{\r\n            status = true;\r\n        }\r\n        \r\n\r\n        return {\r\n            status,\r\n            message\r\n        }\r\n    }\r\n\r\n    function checkPassInput2(password){\r\n        let minChar = 0;\r\n        let maxPassLength = 20;\r\n        if(!state.userData.production){\r\n            minChar = 2;\r\n        }\r\n        let numUpper = (password.match(/[A-Z]/g) || []).length;\r\n        let numLower = (password.match(/[a-z]/g) || []).length;\r\n        let numInt = (password.match(/[0-9]/g) || []).length;\r\n        let status = false;\r\n        let message = '';\r\n        // var specialCharPass = (password.match(/[^a-z0-9]/ig) || []).length;\r\n        if(numUpper >= minChar && numLower >= minChar && numInt >= minChar){\r\n            message = '';\r\n            // status = true;\r\n            \r\n        }else{\r\n            if(numUpper < minChar){\r\n                \r\n                message = 'Password must contain at least ' + minChar + ' capital letters.';\r\n            }else if(numLower < minChar){\r\n                message = 'Password must contain at least ' + minChar + ' small letters.';     \r\n            }else{\r\n                message = 'Password must contain at least ' + minChar + ' numbers.';\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    function checkPassInput(password){\r\n        return GlobalProviderCom.checkPassInput(password, state);\r\n    }\r\n\r\n    function repeatPasswordChange(password, repeatPass){\r\n        if(password != repeatPass && repeatPass != ''){\r\n            return 'Password and repeat password are not equal.';\r\n        }else{\r\n            return '';\r\n        }\r\n    }\r\n\r\n    function checkRepeatPassInput2(password, repeatPass){\r\n        if(password != repeatPass){\r\n            return 'Password and repeat password are not equal.';\r\n        }else{\r\n            return '';\r\n        }\r\n    }\r\n\r\n    function checkRepeatPassInput(password, repeatPass){\r\n        GlobalProviderCom.checkRepeatPassInput(password, repeatPass);\r\n    }\r\n\r\n    function checkUsernameInput2(username){\r\n        let minChar = 3;\r\n        let label = 'Username';\r\n        let msg = '';\r\n        // if(!isUsername){\r\n        //     minChar = 5;\r\n        //     label = 'Address';\r\n        // }\r\n        let maxChar = 16;\r\n        if(state.userData.production){\r\n            minChar = 0;\r\n        }\r\n\r\n        let specialCharUsername = (username.match(/[^a-z0-9_]/ig) || []).length;\r\n        if(specialCharUsername == 0 && username.length >= minChar && username.length <= maxChar){\r\n            msg = '';\r\n            \r\n        }else{\r\n            if(specialCharUsername > 0){\r\n                msg = label +' can only contain numbers, letters and _.';\r\n                // setError(label +' can only contain numbers, letters and _.');\r\n            }else if(username.length < minChar){\r\n                msg = label +' must be at least ' + minChar + ' characters.';\r\n                // setError(label +' must be at least ' + minChar + ' characters.');\r\n            }else{\r\n                msg = label +' cannot exceed ' + maxChar + ' characters.';\r\n                // setError(label +' cannot exceed ' + maxChar + ' characters.');    \r\n            }\r\n        }\r\n\r\n        return msg;\r\n    }\r\n\r\n    function checkUsernameInput(username){\r\n        return GlobalProviderCom.checkUsernameInput(username, state);\r\n    }\r\n\r\n    function convertStrToNum(str){\r\n        let num = '0';\r\n        if(str != ''){\r\n            num = str;\r\n        } \r\n        \r\n        return num;\r\n    }\r\n\r\n    function convertNumToStr(num){\r\n        let str = '';\r\n        if(num != 0){\r\n            str = num + '';\r\n        } \r\n        \r\n        return str;\r\n    }\r\n\r\n    function getDelayer(timeOutID, funcToRun){\r\n        console.log('time out id: ', timeOutID);\r\n        clearTimeout(timeOutID);\r\n        timeOutID = setTimeout(()=>{\r\n            funcToRun();\r\n        }, 1000); \r\n        return timeOutID;    \r\n    }\r\n\r\n    function funcDelayer(timeOutID, funcToRun, timeOfDelay){\r\n        console.log('time out id: ', timeOutID);\r\n        let newTimeOutID = 0;\r\n        clearTimeout(timeOutID);\r\n        newTimeOutID = setTimeout(()=>{\r\n            funcToRun();\r\n        }, timeOfDelay * 1000); \r\n        return newTimeOutID;    \r\n    }\r\n\r\n    async function getMsgs(headerID, startPoint){\r\n        console.log('get user data');\r\n        console.log('api path: ', state.globals.varNames.apiPath);\r\n        // console.log('token: ', state.userData.token);\r\n        let data = {\r\n            headerID: headerID,\r\n            startPoint: startPoint\r\n        }\r\n\r\n        var response = await apiCall(state.globals.varNames.blagsApiPath + 'message/showMessages', data);  \r\n        state.messageData.msgs = response.payload;\r\n        state.userData.viewingMsgs = true;\r\n        state.messageData.headerIDViewed = headerID;\r\n        forceUpdate();\r\n        // return response.payload;\r\n        // return response;\r\n    }\r\n\r\n    function changeOutsidePage2(page){\r\n        state.userData.currentPage.front = page;\r\n        forceUpdate();\r\n    }\r\n\r\n    function changeOutsidePage(page){\r\n        GlobalProviderCom.changeOutsidePage(page, state, forceUpdate)\r\n    }\r\n\r\n    // function connectToSocket(){\r\n    //     const socket = io(state.globals.varNames.blagsServerPath + '?token=' + state.userData.sosyalData.socketToken);\r\n\r\n    //     // const socket = io('http://192.168.1.4:9000?token=hey');\r\n\t// // const socket2 = io('http://192.168.1.4:9000?token=hey2');\r\n    //     socket.on('connect', function(){\r\n    //         console.log('connected')\r\n    //     });\r\n        \r\n    //     socket.on('disconnect', function(){\r\n    //         console.log('disconnected')\r\n    //     });\r\n\r\n    //     socket.on('New message', function(){\r\n    //         console.log('new message')\r\n    //     });\r\n    //     // console.log('socket id: ', socket.sessionid);\r\n    // }\r\n\r\n    function forceUpdate(){\r\n        dispatch({\r\n            type: 'UPDATE_USER_DATA',\r\n            payload: 'username'\r\n        });   \r\n    }\r\n\r\n    function toggleNav2(){\r\n        state.userData.openingNav = !state.userData.openingNav;  \r\n        forceUpdate();\r\n    }\r\n\r\n    function toggleNav(){\r\n        GlobalProviderCom.toggleNav(state, forceUpdate);\r\n    }\r\n\r\n    function getOrder(isAsc){\r\n        let order = 0;\r\n        if(isAsc){\r\n            order = 1;\r\n        }\r\n        \r\n        \r\n        return order;\r\n    }\r\n\r\n    function getApiPath2(){\r\n        console.log('initiate sosyal data');\r\n        let apiPath = state.globals.varNames.apiPath;\r\n        if(state.userData.isSosyal){\r\n            apiPath = state.globals.varNames.blagsApiPath;\r\n        }\r\n        return apiPath;\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    function getApiPath(){\r\n        return GlobalProviderCom.getApiPath(state);\r\n        \r\n        \r\n    }\r\n\r\n    function getImgPath2(){\r\n        console.log('initiate sosyal data');\r\n        let apiPath = state.globals.varNames.imgPath;\r\n        if(state.userData.isSosyal){\r\n            apiPath = state.globals.varNames.imgPathBlags;\r\n        }\r\n        return apiPath;\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    function getImgPath(){\r\n        return GlobalProviderCom.getImgPath(state);\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    function getSiteID2(){\r\n        console.log('initiate sosyal data');\r\n        let siteID = state.appData.siteID;\r\n        if(state.userData.isSosyal){\r\n            siteID = state.appData.sosyalID;\r\n        }\r\n        return siteID;\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    function getSiteID(){\r\n        return GlobalProviderCom.getSiteID(state);\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    function dateToStr(payload) { \r\n        let timestampDate = new Date(payload * 1000);\r\n        let hours = timestampDate.getHours();\r\n        let minutes = timestampDate.getMinutes();\r\n        let seconds = timestampDate.getSeconds();\r\n        let year = timestampDate.getFullYear();\r\n        let month = timestampDate.getMonth() + 1;\r\n        let date = timestampDate.getDate();  \r\n        \r\n        return month + \"/\" + date + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;     \r\n    }\r\n\r\n    function datePickerStr(time) { \r\n        let dateToConvert = new Date(time);\r\n        let month = dateToConvert.getMonth() + 1;\r\n        let day = dateToConvert.getDate();\r\n        let monthFinal = month;\r\n        let dayFinal = day;\r\n\r\n        if(month < 10){\r\n            monthFinal = '0' + month;\r\n        } \r\n\r\n        if(day < 10){\r\n            dayFinal = '0' + day;\r\n        }\r\n\r\n        \r\n        let dateStr = dateToConvert.getFullYear() + '-' + monthFinal + '-' + dayFinal;  \r\n        return dateStr;   \r\n    }\r\n\r\n\r\n    function initiateSosyalData2(data){\r\n        console.log('initiate sosyal data');\r\n        state.userData.sosyalData.balance = data.balance;\r\n        state.userData.sosyalData.dataBal = data.dataBal;\r\n        state.userData.sosyalData.totalAddtlData = data.totalAddtlData;\r\n        state.userData.sosyalData.socketToken = data.sosyalSocketToken;\r\n        state.userData.sosyalData.country = data.country;\r\n        state.userData.sosyalData.name = data.name;\r\n        state.userData.sosyalData.description = data.description;\r\n        state.userData.sosyalData.tags = data.tags;\r\n        state.userData.sosyalData.imgURL = data.imgURL;\r\n        state.userData.sosyalData.bidBal = data.bidBal;\r\n        state.userData.sosyalData.bidAmt = data.bidAmt;\r\n        state.userData.sosyalData.rating = data.rating;\r\n        state.userData.sosyalData.numOfRaters = data.numOfRaters;\r\n        state.userData.sosyalData.ratingVerified = data.ratingVerified;\r\n        state.userData.sosyalData.numOfRatersVerified = data.numOfRatersVerified;\r\n        state.userData.sosyalData.photoPassword = data.photoPassword;\r\n        state.userData.verifiedDataSet = data.verifiedDataSet;\r\n        state.userData.verifiedDataSet = false;\r\n        state.userData.verifiedData = data.verifiedData;\r\n        // state.userData.verifiedData.address = data.verifiedData.address;\r\n        state.userData.followedUsers = data.followedUsers;\r\n        state.userData.sosyalData.joinReqs = data.joinReqs;\r\n        state.userData.sosyalData.companyID = data.companyID;\r\n        state.userData.sosyalData.company = data.company;\r\n    }\r\n\r\n    function initiateSosyalData(data){\r\n        GlobalProviderCom.initiateSosyalData(data, state);\r\n    }\r\n\r\n    function initiateUserData(userData){\r\n        console.log('initiate user data');\r\n        state.userData.username = userData.username;\r\n        state.userData.userID = userData.userID;\r\n        state.userData.name = userData.name;\r\n        state.userData.imgURL = userData.imgURL;\r\n        state.userData.description = userData.description;\r\n        state.userData.companyID = userData.companyID;\r\n        state.userData.tags = userData.tags;\r\n        state.userData.position.lat = userData.lat / 1000000000000;\r\n        state.userData.position.lng = userData.lng / 1000000000000;\r\n        let groserMode = true;\r\n        if(userData.groserMode == 0){\r\n            groserMode = false;\r\n        }\r\n        state.userData.groserMode = groserMode;\r\n        state.userData.country = userData.country;\r\n        state.userData.imgPath = userData.imgPath;\r\n        // state.userData.postsID = userData.postsID;\r\n        // state.userData.reviewsID = userData.reviewsID;\r\n        state.userData.dataBal = userData.dataBal;\r\n        state.userData.totalAddtlData = userData.totalAddtlData;\r\n        state.userData.balance = userData.balance;\r\n        state.userData.bidBal = userData.bidBal;\r\n        state.userData.bidAmt = userData.bidAmt;\r\n        state.userData.expenses = userData.expenses;\r\n        state.userData.rating = userData.rating;\r\n        state.userData.numOfRaters = userData.numOfRaters;\r\n        state.userData.ratingVerified = userData.ratingVerified;\r\n        state.userData.numOfRatersVerified = userData.numOfRatersVerified;\r\n        state.userData.photoPassword = userData.photoPassword;\r\n        state.userData.verifiedUser = userData.verifiedUser;\r\n        state.userData.joinReqs = userData.joinReqs;\r\n        state.userData.company = userData.company;\r\n        \r\n        // state.userData.blagssPassSet = userData.blagssPassSet;\r\n        // state.userData.passwordSet = userData.passwordSet;\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    function initiateGlobals2(globals){\r\n        state.globals.numOfItems = globals.numOfItems;\r\n        state.globals.numOfPosts = globals.numOfItems;\r\n        \r\n    }\r\n\r\n    function initiateGlobals(globals){\r\n        GlobalProviderCom.initiateGlobals(globals, state);\r\n        \r\n    }\r\n\r\n    function setVariables2(payload){\r\n        state.countries = payload.countries;\r\n        state.globals.errorCodes = payload.codes;\r\n        // state.globals.varNames.chatApiPath = payload.paths.chat; \r\n        // state.globals.varNames.imgPath = payload.paths.profileImg;  \r\n        // state.globals.varNames.itemsImgPath = payload.paths.itemsImg;  \r\n        // // state.globals.varNames.apiPath = payload.paths.own; \r\n        // state.globals.varNames.blagsApiPath = payload.paths.blags;  \r\n        // state.globals.varNames.blagsImgPath = payload.paths.sosyalImg;  \r\n        // console.log('path img: ', context.state.globals.varNames.itemsImgPath);\r\n        // context.state.globals.varNames.serchApiPath = payload.paths.serch;  \r\n        // context.state.globals.varNames.ad = payload.paths.chat;   \r\n    }\r\n\r\n    function setVariables(payload){\r\n        GlobalProviderCom.setVariables(payload, state);\r\n    }\r\n\r\n    function tagsNote(){\r\n        return 'Tags are separated by spaces(e.g. 1 2 3 4 5).'\r\n    }\r\n\r\n    function minBidNote(){\r\n        return 'Minimum bid amount is 0.001.'\r\n    }\r\n\r\n    function consumptionNote(){\r\n        return 'This action consumes ' + state.globals.consumption + ' data.'\r\n    }\r\n\r\n    // async function getSearchTags(tag, startPt, isUserTags){\r\n\r\n    //     let tags = [];\r\n\r\n    //     let data = {\r\n    //         tag: tag,\r\n    //         startPoint: startPt,\r\n               \r\n    //     }\r\n\r\n    //     let path = 'user/getSearchTags';\r\n    //     if(isUserTags){\r\n    //         path = 'user/getUserHints';\r\n    //     }\r\n\r\n    //     let response = await apiCall(getApiPath() + path, data);\r\n    //     console.log('response: ', response);\r\n    //     if(response.status == 1){\r\n    //         // setTags(response.payload);\r\n    //         tags = response.payload\r\n    //     } \r\n        \r\n    //     return tags;\r\n    // }\r\n\r\n    async function getSearchTags(tag, startPt, isUserTags){\r\n\r\n        let tags = [];\r\n\r\n        let data = {\r\n            tag: tag,\r\n            startPoint: startPt,\r\n               \r\n        }\r\n\r\n        let path = 'user/getSearchTags';\r\n        if(isUserTags){\r\n            path = 'user/getUserHints';\r\n        }\r\n\r\n        let response = await apiCall(getApiPath() + path, data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // setTags(response.payload);\r\n            tags = response.payload\r\n        } \r\n        \r\n        return tags;\r\n    }\r\n\r\n    function changePage2(page){\r\n        console.log('initiate user data');\r\n        state.userData.currentPage.back = page;\r\n        forceUpdate();\r\n        // dispatch({\r\n        //     type: 'UPDATE_USER_DATA',\r\n        //     payload: 'username'\r\n        // });\r\n        \r\n    }\r\n\r\n    function changePage(page){\r\n        GlobalProviderCom.changePage(page, state, forceUpdate);\r\n        // dispatch({\r\n        //     type: 'UPDATE_USER_DATA',\r\n        //     payload: 'username'\r\n        // });\r\n        \r\n    }\r\n\r\n    function changeApp(page){\r\n        console.log('initiate user data');\r\n        state.userData.pageNumm ++;\r\n        forceUpdate();\r\n        // dispatch({\r\n        //     type: 'UPDATE_USER_DATA',\r\n        //     payload: 'username'\r\n        // });\r\n        \r\n    }\r\n\r\n    function randomStr(length) {\r\n        let result           = '';\r\n        let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        \r\n        let charactersLength = characters.length;\r\n        for ( let i = 0; i < length; i++ ) {\r\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function convertTagsToStr(tags) {\r\n        \r\n        let tagsStr = '';\r\n        let tagsArr = JSON.parse(tags);\r\n        console.log('tags Arr: ', tagsArr);\r\n        tagsArr.forEach((tag, ndx) => {\r\n            tagsStr = tagsStr + tag + ' ';\r\n        })\r\n        // if(tagsArr === Array){\r\n            \r\n        // }\r\n        console.log('tags str: ', tagsStr);\r\n        return tagsStr;\r\n    }\r\n\r\n    function convertTagsStrToArrayStr(tagsStr) {\r\n        let tagsArray = tagsStr.split(\" \");\r\n        let arrayStr = JSON.stringify(tagsArray);\r\n        return arrayStr;\r\n    }\r\n\r\n    async function cancelShapper(userID, type) {\r\n        let data = {\r\n            type: type,\r\n            userID: userID   \r\n        }\r\n        let response = await apiCall(state.globals.varNames.apiPath + 'map/cancelHire', data); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 3, false);\r\n        } \r\n    }\r\n\r\n    async function cancelShapper(userID, type) {\r\n        GlobalProviderCom.cancelShapper(userID, type, state, forceUpdate)\r\n    }\r\n\r\n    function createUserInfo2(username, rating, ratingVerified, numOfRaters, numOfRatersVerified, imgURL) {\r\n        \r\n        let userInfo = {\r\n            username: username,\r\n            rating: rating,\r\n            ratingVerified: ratingVerified,\r\n            numOfRaters: numOfRaters,\r\n            numOfRatersVerified: numOfRatersVerified,\r\n            imgURL: imgURL\r\n        }\r\n\r\n        return userInfo;\r\n    }\r\n\r\n    function openModal(payload) {\r\n        console.log('open modal start');\r\n        state.appModalData.title = payload.title;\r\n        state.appModalData.index = payload.index;\r\n        state.appModalData.page = payload.page;\r\n        \r\n        state.appModalData.addtlData = payload.addtlData;\r\n       \r\n    \r\n        state.userData.showingModal = true;\r\n        \r\n    }\r\n\r\n    function openSingleModal2(name, data) {\r\n        console.log('open single modal');\r\n        state.userData.openingSingleModal = true;\r\n        state.singleModalData.name = name;\r\n        state.singleModalData.data = data;\r\n        forceUpdate();\r\n        \r\n    }\r\n\r\n    function openSingleModal(name, data) {\r\n        GlobalProviderCom.openSingleModal(name, data, state, forceUpdate);\r\n        \r\n    }\r\n\r\n    function openYesNoModal2(question, callbackFunc) {\r\n        console.log('open modal start');\r\n        state.userData.openingYesNoModal = true;\r\n        state.yesNoModalData.callbackFunc = callbackFunc;\r\n        state.yesNoModalData.question = question;\r\n        forceUpdate();\r\n        \r\n    }\r\n\r\n    function openYesNoModal(question, callbackFunc) {\r\n        GlobalProviderCom.openYesNoModal(question, callbackFunc, state, forceUpdate);\r\n        \r\n    }\r\n\r\n    function openMsgModal2(username, msg, msgID, headerID) {\r\n        console.log('open modal start');\r\n        state.userData.openingMsgModal = true;\r\n        state.msgModalData.username = username;\r\n        state.msgModalData.msg = msg;\r\n        state.msgModalData.msgID = msgID;\r\n        state.msgModalData.headerID = headerID;\r\n        // state.msgModalData.replying = replying;\r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openMsgModal(username, msg, msgID, headerID) {\r\n        GlobalProviderCom.openMsgModal(username, msg, msgID, headerID, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openHintsModal(hint, isUserSearch, callbackFunc) {\r\n        console.log('open modal start');\r\n        state.userData.openingHintsModal = true;\r\n        state.hintsModalData.hint = hint;\r\n        state.hintsModalData.isUserSearch = isUserSearch;\r\n        state.hintsModalData.callbackFunc = callbackFunc;\r\n        // state.hintsModalData.headerID = headerID;\r\n        // state.msgModalData.replying = replying;\r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openStartPtModal2(value, callbackFunc) {\r\n        console.log('open modal start');\r\n        console.log('value: ', value);\r\n        console.log('callback func: ', callbackFunc);\r\n        state.userData.openingStartPtModal = true;\r\n        state.startPtModalData.value = value;\r\n        state.startPtModalData.callbackFunc = callbackFunc;\r\n        \r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openStartPtModal(value, callbackFunc) {\r\n        GlobalProviderCom.openStartPtModal(value, callbackFunc, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openMoreOptionsModal2(options, onClickOptionFunc) {\r\n        console.log('open more options modal');\r\n        // console.log('value: ', value);\r\n        // console.log('callback func: ', onClickOptionFunc);\r\n        state.userData.openingMoreOptionsModal = true;\r\n        state.moreOptionsModalData.options = options;\r\n        state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n        \r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openMoreOptionsModal(options, onClickOptionFunc) {\r\n        GlobalProviderCom.openMoreOptionsModal(options, onClickOptionFunc, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openGroserModal2(data) {\r\n        console.log('open modal start');\r\n        // console.log('value: ', value);\r\n        // console.log('callback func: ', onClickOptionFunc);\r\n        state.userData.openingGroserModal = true;\r\n        state.groserModalData.data = data;\r\n        // state.groserModalData.name = name;\r\n        // state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n        \r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function openGroserModal(data) {\r\n        GlobalProviderCom.openGroserModal(data, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function getLinks(text, linkType) {\r\n        let words = text;\r\n        let wordArray = [];\r\n        if(linkType == 'userLink'){\r\n            wordArray = words.split(/@([a-z0-9]+)/i);\r\n        }else if(linkType == 'link'){\r\n            wordArray = words.split(/\\[link\\]([a-z0-9.\\/:]+)\\[\\/link\\]/i);\r\n        }\r\n        \r\n        let wordsObjArr = [];\r\n        if(wordArray.length > 1){\r\n            wordArray.forEach((word, ndx) => {\r\n                if((ndx + 1) % 2 == 0){\r\n                    wordsObjArr.push({\r\n                        text: word,\r\n                        obj: linkType\r\n                    })\r\n                }else{\r\n                    wordsObjArr.push({\r\n                        text: word,\r\n                        obj: 'text'\r\n                    })   \r\n                }\r\n            })\r\n        }\r\n        \r\n\r\n        return wordsObjArr;\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function convertTextToObj(text) {\r\n        \r\n        let wordsObjArr = getLinks(text, 'userLink');\r\n        // console.log('words obj arr: ', wordsObjArr);\r\n        if(wordsObjArr.length == 0){\r\n            wordsObjArr.push({\r\n                text: text,\r\n                obj: 'text'   \r\n            })\r\n        }\r\n        \r\n        let wordsObjArrLinks = [];\r\n        for(let i = 0; i < wordsObjArr.length; i++){\r\n            if(wordsObjArr[i].obj == 'text'){\r\n                wordsObjArrLinks = getLinks(wordsObjArr[i].text, 'link'); \r\n                // console.log('words obj links: ', wordsObjArrLinks);\r\n                if(wordsObjArrLinks.length > 0){\r\n                    \r\n                    wordsObjArrLinks.forEach((wordObjLinks, ndx) => {\r\n                        wordsObjArr.splice(i + ndx + 1, 0, wordObjLinks);\r\n                        // wordsObjArr.push(wordObjLinks);\r\n                    })\r\n                    wordsObjArr.splice(i, 1);\r\n                }    \r\n            }\r\n        }\r\n\r\n        // console.log('words obj: ', wordsObjArr);\r\n        // let component = <View style={{flexDirection: 'row', marginVertical: 10}}>\r\n        //     {wordsObjArr.map((word, ndx) => {\r\n        //         if(word.obj == 'text'){\r\n        //             return <Text>{word.text}</Text>;   \r\n        //         }else{\r\n        //             if(word.obj == 'userLink'){\r\n        //                 return <Text key={ndx} onPress={()=>{showOtherUser(word.text)}}>{'@' + word.text}</Text>      \r\n        //             }else{\r\n        //                 return <Text key={ndx} onPress={()=>{Linking.openURL('https://google.com')}}>{'#' + word.text}</Text>      \r\n        //             }\r\n                    \r\n        //         }\r\n                \r\n                \r\n                \r\n        //     })}            \r\n        // </View>\r\n        \r\n        \r\n\r\n        return wordsObjArr;\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function convertEmptyStr(str){\r\n        var strRegex = str.replace(/ /ig, \"\");\r\n        var strFinal = '';\r\n        console.log('str regex: ', strRegex);\r\n        if(strRegex != ''){\r\n            strFinal = str;\r\n        }\r\n    \r\n        return strFinal;\r\n    }\r\n\r\n    // function showOtherUser2(username) {\r\n    //     console.log('open modal start');\r\n    //     if(username == state.userData.username){\r\n    //         changePage('Profile');\r\n    //     }else{\r\n    //         state.userData.showingOtherUser = true;\r\n    //         state.otherUserData.username = username;\r\n            \r\n    //         forceUpdate();\r\n    //     }\r\n        \r\n    \r\n        \r\n        \r\n    // }\r\n\r\n\r\n    function showOtherUser2(username) {\r\n        console.log('open modal start');\r\n        if(username == state.userData.username){\r\n            changePage('Profile');\r\n        }else{\r\n            showOtherPage('Other User', username);\r\n        }\r\n        \r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function showOtherUser(username) {\r\n        GlobalProviderCom.showOtherUser(username, state, forceUpdate);\r\n        \r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function showOtherPage2(name, data) {\r\n        console.log('open modal start');\r\n        \r\n        \r\n    \r\n        state.userData.showingOtherPage = true;\r\n        state.otherPageData.name = name;\r\n        state.otherPageData.data = data;\r\n        state.userData.otherPageNum ++;\r\n        forceUpdate();\r\n        \r\n    }\r\n\r\n    function showOtherPage(name, data) {\r\n        GlobalProviderCom.showOtherPage(name, data, state, forceUpdate);\r\n        \r\n    }\r\n\r\n    function showOtherUserList2(userID) {\r\n        // console.log('open modal start');\r\n        // state.userData.showingOtherUserList = true;\r\n        // state.otherUserListData.userID = userID;\r\n        \r\n        // forceUpdate();\r\n    \r\n        showOtherPage('Other List', userID);\r\n        \r\n    }\r\n\r\n    function showOtherUserList(userID) {\r\n        GlobalProviderCom.showOtherUserList(userID, state, forceUpdate);\r\n        \r\n    }\r\n\r\n    function showOtherPost2(post) {\r\n        console.log('show other post');\r\n        // state.userData.showingOtherPost = true;\r\n        // state.otherPostData = post;\r\n        \r\n        // forceUpdate();\r\n        showOtherPage('Other Post', post);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function showOtherPost(post) {\r\n        GlobalProviderCom.showOtherPost(post);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function showToast2(message, duration, isError) {\r\n        console.log('open modal start');\r\n        state.userData.showingToast = true;\r\n        state.toastData.message = message;\r\n        state.toastData.duration = duration;\r\n        state.toastData.isError = isError;\r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function showToast(message, duration, isError) {\r\n        GlobalProviderCom.showToast(message, duration, isError, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function showPageNav(callbackFunc) {\r\n        state.pageNavData.callbackFunc = callbackFunc;\r\n        state.userData.showingPageNav = true;\r\n        state.pageNavData.key ++;\r\n        forceUpdate();\r\n        \r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function closePageNav() {\r\n        // state.pageNavData.callbackFunc = callbackFunc;\r\n        state.userData.showingPageNav = false;\r\n        forceUpdate();\r\n        \r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function createProfileData(userID, imgURL, imgPath, username, name, description, country, rating, numOfRaters, isSosyal, photoPassword, ratingVerified, numOfRatersVerified) {\r\n\r\n        let profile = {\r\n            userID: userID,\r\n            imgURL: imgURL,\r\n            imgPath: imgPath,\r\n            // profileImgUrl: globals.varNames.imgPathBlags + userData.sosyalData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword,\r\n            username: username,\r\n            name: name,\r\n            description: description,\r\n            country: country,\r\n            rating: rating,\r\n            numOfRaters: numOfRaters,\r\n            ratingVerified: ratingVerified,\r\n            numOfRatersVerified: numOfRatersVerified,\r\n            isSosyal: isSosyal,\r\n            photoPassword: photoPassword\r\n        } \r\n        \r\n        return profile;\r\n        \r\n        \r\n    }\r\n\r\n    function createUserInfo(info, isCompany) {\r\n        let prefix = '';\r\n        if(isCompany){\r\n            prefix = 'company';\r\n        }\r\n        let userInfo = {\r\n            username: info[prefix + 'username'],\r\n            rating: info[prefix + 'rating'],\r\n            ratingVerified: info[prefix + 'ratingverified'],\r\n            numOfRaters: info[prefix + 'numofraters'],\r\n            numOfRatersVerified: info[prefix + 'numofratersverified'],\r\n            imgURL: info[prefix + 'imgurl'],\r\n            name: info[prefix + 'name'],\r\n            description: info[prefix + 'description'],\r\n            verifiedUser: info[prefix + 'verifieduser']\r\n        }\r\n\r\n        return userInfo\r\n        \r\n        \r\n    }\r\n\r\n    function logout(){\r\n        state.userData.loggedIn = false;\r\n        localStorage.removeItem('userData'); \r\n        state.userData.currentPage.front = 'login';    \r\n        forceUpdate();  \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     console.log('pages Ref: ', pagesRef);\r\n    //     // if(isTyping){\r\n            \r\n    //     // }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [pagesRef]);\r\n\r\n    return (<GlobalContext.Provider value = {{\r\n        appData: state.appData,\r\n        userData: state.userData,\r\n        globals: state.globals,\r\n        countries: state.countries,\r\n        // appModalData: state.appModalData,\r\n        // mapData: state.mapData,\r\n        otherUserData: state.otherUserData,\r\n        otherUserListData: state.otherUserListData,\r\n        otherPostData: state.otherPostData,\r\n        toastData: state.toastData,\r\n        msgModalData: state.msgModalData,\r\n        startPtModalData: state.startPtModalData,\r\n        singleModalData: state.singleModalData,\r\n        yesNoModalData: state.yesNoModalData,\r\n        moreOptionsModalData: state.moreOptionsModalData,\r\n        otherPageData: state.otherPageData,\r\n        groserModalData: state.groserModalData,\r\n        pageNavData: state.pageNavData,\r\n        hintsModalData: state.hintsModalData,\r\n        login,\r\n        apiCall,\r\n        getUserData,\r\n        // getUserToken,\r\n        initiateGlobals,\r\n        updateUserData,\r\n        changePage,\r\n        changeApp,\r\n        forceUpdate,\r\n        toggleNav,\r\n        dateToStr,\r\n        datePickerStr,\r\n        getMsgs,\r\n        changeOutsidePage,\r\n        openModal,\r\n        getDelayer,\r\n        getSearchTags,\r\n        randomStr,\r\n        funcDelayer,\r\n        checkPassword,\r\n        repeatPasswordChange,\r\n        checkUsernameInput,\r\n        checkRepeatPassInput: GlobalProviderCom.checkRepeatPassInput,\r\n        checkPassInput,\r\n        showOtherUser,\r\n        showOtherUserList,\r\n        showOtherPost,\r\n        showOtherPage,\r\n        showToast,\r\n        openMsgModal,\r\n        openStartPtModal,\r\n        openSingleModal,\r\n        openYesNoModal,\r\n        openMoreOptionsModal,\r\n        openGroserModal,\r\n        openHintsModal,\r\n        cancelShapper,\r\n        convertTextToObj: GlobalProviderCom.convertTextToObj,\r\n        convertEmptyStr,\r\n        getApiPath,\r\n        getImgPath,\r\n        getSiteID,\r\n        getOrder,\r\n        convertNumToStr,\r\n        convertStrToNum,\r\n        createUserInfo,\r\n        convertTagsToStr,\r\n        convertTagsStrToArrayStr,\r\n        createProfileData,\r\n        showPageNav,\r\n        closePageNav,\r\n        tagsNote,\r\n        minBidNote,\r\n        consumptionNote,\r\n        logout\r\n        \r\n    }}>\r\n        {/* <PagesFinal ref={pagesRef} /> */}\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, {createContext, useReducer, useState, forwardRef, useRef, useEffect} from 'react';\r\n// import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport AppReducer from './AppReducer';\r\nimport InitialState from '../../Context/InitialState';\r\nimport axios from 'axios';\r\nimport Pages from '../../MainViews/Pages';\r\n// import GlobalProviderCom from '../common/Context/GlobalProvider';\r\n// import io from 'socket.io-client';\r\n\r\n// import { Linking } from 'react-native';\r\n// import { Text, CardItem, View } from 'native-base';\r\n\r\nconst initialState = InitialState;\r\n\r\n\r\nconst PagesFinal = forwardRef(Pages);\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n// openSingleModal\r\nexport const GlobalProvider = ({children}) => {\r\n    console.log('GLOBAL PROVIDER');\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    const pagesRef = useRef(null);\r\n    \r\n    function login(username){\r\n        console.log('login');\r\n        dispatch({\r\n            type: 'DELETE',\r\n            payload: username\r\n        });\r\n    }\r\n\r\n    // function checkErrors(code){\r\n        // return GlobalProviderCom.checkErrors(code, state, forceUpdate);\r\n    // }\r\n\r\n    function checkErrors(code){\r\n        let errorExist = false;\r\n        // let codeFinal\r\n        console.log('state. globals: ', state.globals);\r\n        console.log('code: ', code);\r\n        state.globals.errorCodes.forEach((errorCode) => {\r\n            if(code == errorCode){\r\n                errorExist = true;\r\n                if(errorCode == 500){\r\n                    openSingleModal('Info', {div: 'Data'});  \r\n                    // showToast('wsjf alsjfafsf ljsfajfjsf ;ajsfjjf ;asfjajs  f lakjjdflajfjajf ;adfjsjff asfa; asdfsldkf a;sdfasf jalsfjfa afjaf;af kajsjfal', 5000);\r\n                }else if(errorCode == 501){\r\n                    openSingleModal('Info', {div: 'Balance'});\r\n                    // showToast('wsjf alsjfafsf ljsfajfjsf ;ajsfjjf ;asfjajs  f lakjjdflajfjajf ;adfjsjff asfa; asdfsldkf a;sdfasf jalsfjfa afjaf;af kajsjfal', 5000);\r\n                }else if(errorCode == 56){\r\n                    showToast('Request limit exceeded. Try again after a few seconds.', 5, true);\r\n                    \r\n                    \r\n                }else if(errorCode == 5){\r\n                    showToast('Invalid token.', 5, true);\r\n                    logout();\r\n                    \r\n                }\r\n            }\r\n        })  \r\n        \r\n        return errorExist;\r\n    }\r\n\r\n    \r\n\r\n    async function apiCall(url, data){\r\n        let response = await axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: data,\r\n            headers: {\r\n                'x-access-token': state.userData.token,\r\n                'version': state.appData.version,\r\n                'sosyal-version': state.appData.versionSosyal,\r\n            }    \r\n        })\r\n    \r\n        response.data.globalError = false;\r\n    \r\n        if(response.data.status == 0){\r\n            if(!checkErrors(response.data.code)){\r\n                showToast(response.data.message, 3, true);\r\n            }\r\n        }\r\n    \r\n        \r\n        return response.data;\r\n    \r\n        \r\n    };\r\n\r\n    async function getUserData(token){\r\n        console.log('get user data');\r\n        console.log('api path: ', state.globals.varNames.apiPath);\r\n        // console.log('token: ', state.userData.token);\r\n        state.userData.token = token;\r\n        localStorage.setItem('userData', JSON.stringify({token: state.userData.token}));\r\n        var response = await apiCall(state.globals.varNames.apiPath + 'user/getUserData', {});  \r\n       \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            pagesRef.current.initiateUserData(response.payload.userData);\r\n            setVariables(response.payload);\r\n            initiateGlobals(response.payload.globals);\r\n            var responseSosyal = await apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {});\r\n            console.log('response sosyal: ', responseSosyal);\r\n            if(responseSosyal.status == 1){\r\n                initiateSosyalData(responseSosyal.payload);\r\n                state.userData.currentPage.back = 'Home';\r\n                state.userData.loggedIn = true;\r\n            }else{\r\n                state.userData.loggedIn = false;\r\n            }\r\n            \r\n            \r\n            \r\n            // connectToSocket();\r\n            \r\n            // dispatch({\r\n            //     type: 'UPDATE_USER_DATA',\r\n            //     payload: 'username'\r\n            // });\r\n        }else{\r\n            // state.userData.gotUserData = true;\r\n            state.userData.loggedIn = false;    \r\n        }\r\n        state.userData.gotUserData = true;\r\n        forceUpdate();\r\n        // return response;\r\n    }\r\n\r\n    // async function getUserToken(){\r\n    //     console.log('get user token');\r\n    //     // console.log('asyn storage: ', AsyncStorage);\r\n    //     let value = localStorage.getItem('userData');\r\n    //     console.log('value: ', value);\r\n    //     let userDataStorage = JSON.parse(value); \r\n        \r\n    //     if(userDataStorage != null){\r\n    //         console.log('userdata storage: ', userDataStorage);\r\n    //         // userData.token = userDataStorage.token;\r\n    //         getUserData(userDataStorage.token);\r\n            \r\n            \r\n            \r\n    //     }else{\r\n    //         state.userData.gotUserData = true;\r\n    //         state.userData.loggedIn = false;\r\n    //         forceUpdate();\r\n    //     }   \r\n        \r\n    // }\r\n\r\n    async function updateUserData(){\r\n        console.log('get user data');\r\n        console.log('api path: ', state.globals.varNames.apiPath);\r\n        // console.log('token: ', state.userData.token);\r\n        \r\n        var response = await apiCall(state.globals.varNames.apiPath + 'user/getUserDataOnly', {});  \r\n       \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            pagesRef.current.initiateUserData(response.payload);\r\n            \r\n            var responseSosyal = await apiCall(state.globals.varNames.blagsApiPath + 'user/getUserDataOnly', {});\r\n            console.log('response sosyal: ', responseSosyal);\r\n            if(responseSosyal.status == 1){\r\n                initiateSosyalData(responseSosyal.payload);\r\n                \r\n            }\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        \r\n        // return response;\r\n    }\r\n\r\n    function checkPassword(password){\r\n        let minChar = 2;\r\n        let maxPassLength = 20;\r\n        if(state.userData.production){\r\n            minChar = 2;\r\n        }\r\n        let numUpper = (password.match(/[A-Z]/g) || []).length;\r\n        let numLower = (password.match(/[a-z]/g) || []).length;\r\n        let numInt = (password.match(/[0-9]/g) || []).length;\r\n        let status = false;\r\n        let message = '';\r\n        // var specialCharPass = (password.match(/[^a-z0-9]/ig) || []).length;\r\n        if(password != ''){\r\n            if(numUpper >= minChar && numLower >= minChar && numInt >= minChar){\r\n            \r\n                status = true;\r\n                \r\n            }else{\r\n                if(numUpper < minChar){\r\n                    \r\n                    message = 'Password must contain at least ' + minChar + ' capital letters.';\r\n                }else if(numLower < minChar){\r\n                    message = 'Password must contain at least ' + minChar + ' small letters.';     \r\n                }else{\r\n                    message = 'Password must contain at least ' + minChar + ' numbers.';\r\n                    \r\n                }\r\n                \r\n            }\r\n        }else{\r\n            status = true;\r\n        }\r\n        \r\n\r\n        return {\r\n            status,\r\n            message\r\n        }\r\n    }\r\n\r\n    function checkPassInput2(password){\r\n        let minChar = 0;\r\n        let maxPassLength = 20;\r\n        if(!state.userData.production){\r\n            minChar = 2;\r\n        }\r\n        let numUpper = (password.match(/[A-Z]/g) || []).length;\r\n        let numLower = (password.match(/[a-z]/g) || []).length;\r\n        let numInt = (password.match(/[0-9]/g) || []).length;\r\n        let status = false;\r\n        let message = '';\r\n        // var specialCharPass = (password.match(/[^a-z0-9]/ig) || []).length;\r\n        if(numUpper >= minChar && numLower >= minChar && numInt >= minChar){\r\n            message = '';\r\n            // status = true;\r\n            \r\n        }else{\r\n            if(numUpper < minChar){\r\n                \r\n                message = 'Password must contain at least ' + minChar + ' capital letters.';\r\n            }else if(numLower < minChar){\r\n                message = 'Password must contain at least ' + minChar + ' small letters.';     \r\n            }else{\r\n                message = 'Password must contain at least ' + minChar + ' numbers.';\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    function checkPassInput(password){\r\n        // GlobalProviderCom.checkPassInput(password, state);\r\n    }\r\n\r\n    function repeatPasswordChange(password, repeatPass){\r\n        if(password != repeatPass && repeatPass != ''){\r\n            return 'Password and repeat password are not equal.';\r\n        }else{\r\n            return '';\r\n        }\r\n    }\r\n\r\n    function checkRepeatPassInput2(password, repeatPass){\r\n        if(password != repeatPass){\r\n            return 'Password and repeat password are not equal.';\r\n        }else{\r\n            return '';\r\n        }\r\n    }\r\n\r\n    function checkRepeatPassInput(password, repeatPass){\r\n        // GlobalProviderCom.checkRepeatPassInput(password, repeatPass);\r\n    }\r\n\r\n    function checkUsernameInput2(username){\r\n        let minChar = 3;\r\n        let label = 'Username';\r\n        let msg = '';\r\n        // if(!isUsername){\r\n        //     minChar = 5;\r\n        //     label = 'Address';\r\n        // }\r\n        let maxChar = 16;\r\n        if(state.userData.production){\r\n            minChar = 0;\r\n        }\r\n\r\n        let specialCharUsername = (username.match(/[^a-z0-9_]/ig) || []).length;\r\n        if(specialCharUsername == 0 && username.length >= minChar && username.length <= maxChar){\r\n            msg = '';\r\n            \r\n        }else{\r\n            if(specialCharUsername > 0){\r\n                msg = label +' can only contain numbers, letters and _.';\r\n                // setError(label +' can only contain numbers, letters and _.');\r\n            }else if(username.length < minChar){\r\n                msg = label +' must be at least ' + minChar + ' characters.';\r\n                // setError(label +' must be at least ' + minChar + ' characters.');\r\n            }else{\r\n                msg = label +' cannot exceed ' + maxChar + ' characters.';\r\n                // setError(label +' cannot exceed ' + maxChar + ' characters.');    \r\n            }\r\n        }\r\n\r\n        return msg;\r\n    }\r\n\r\n    function checkUsernameInput(username){\r\n        // GlobalProviderCom.checkUsernameInput(username, state);\r\n    }\r\n\r\n    function convertStrToNum(str){\r\n        let num = '0';\r\n        if(str != ''){\r\n            num = str;\r\n        } \r\n        \r\n        return num;\r\n    }\r\n\r\n    function convertNumToStr(num){\r\n        let str = '';\r\n        if(num != 0){\r\n            str = num + '';\r\n        } \r\n        \r\n        return str;\r\n    }\r\n\r\n    function getDelayer(timeOutID, funcToRun){\r\n        console.log('time out id: ', timeOutID);\r\n        clearTimeout(timeOutID);\r\n        timeOutID = setTimeout(()=>{\r\n            funcToRun();\r\n        }, 1000); \r\n        return timeOutID;    \r\n    }\r\n\r\n    function funcDelayer(timeOutID, funcToRun, timeOfDelay){\r\n        console.log('time out id: ', timeOutID);\r\n        let newTimeOutID = 0;\r\n        clearTimeout(timeOutID);\r\n        newTimeOutID = setTimeout(()=>{\r\n            funcToRun();\r\n        }, timeOfDelay * 1000); \r\n        return newTimeOutID;    \r\n    }\r\n\r\n    async function getMsgs(headerID, startPoint){\r\n        console.log('get user data');\r\n        console.log('api path: ', state.globals.varNames.apiPath);\r\n        // console.log('token: ', state.userData.token);\r\n        let data = {\r\n            headerID: headerID,\r\n            startPoint: startPoint\r\n        }\r\n\r\n        var response = await apiCall(state.globals.varNames.blagsApiPath + 'message/showMessages', data);  \r\n        state.messageData.msgs = response.payload;\r\n        state.userData.viewingMsgs = true;\r\n        state.messageData.headerIDViewed = headerID;\r\n        forceUpdate();\r\n        // return response.payload;\r\n        // return response;\r\n    }\r\n\r\n    function changeOutsidePage(page){\r\n        state.userData.currentPage.front = page;\r\n        forceUpdate();\r\n    }\r\n\r\n    // function changeOutsidePage(page){\r\n    //     // GlobalProviderCom.changeOutsidePage(page, state, forceUpdate)\r\n    // }\r\n\r\n    // function connectToSocket(){\r\n    //     const socket = io(state.globals.varNames.blagsServerPath + '?token=' + state.userData.sosyalData.socketToken);\r\n\r\n    //     // const socket = io('http://192.168.1.4:9000?token=hey');\r\n\t// // const socket2 = io('http://192.168.1.4:9000?token=hey2');\r\n    //     socket.on('connect', function(){\r\n    //         console.log('connected')\r\n    //     });\r\n        \r\n    //     socket.on('disconnect', function(){\r\n    //         console.log('disconnected')\r\n    //     });\r\n\r\n    //     socket.on('New message', function(){\r\n    //         console.log('new message')\r\n    //     });\r\n    //     // console.log('socket id: ', socket.sessionid);\r\n    // }\r\n\r\n    function forceUpdate(){\r\n        dispatch({\r\n            type: 'UPDATE_USER_DATA',\r\n            payload: 'username'\r\n        });   \r\n    }\r\n\r\n    function toggleNav(){\r\n        state.userData.openingNav = !state.userData.openingNav;  \r\n        forceUpdate();\r\n    }\r\n\r\n    // function toggleNav(){\r\n    //     // GlobalProviderCom.toggleNav(state, forceUpdate);\r\n    // }\r\n\r\n    function getOrder(isAsc){\r\n        let order = 0;\r\n        if(isAsc){\r\n            order = 1;\r\n        }\r\n        \r\n        \r\n        return order;\r\n    }\r\n\r\n    function getApiPath(){\r\n        console.log('initiate sosyal data');\r\n        let apiPath = state.globals.varNames.apiPath;\r\n        if(state.userData.isSosyal){\r\n            apiPath = state.globals.varNames.blagsApiPath;\r\n        }\r\n        return apiPath;\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    // function getApiPath(){\r\n    //     // return GlobalProviderCom.getApiPath(state);\r\n        \r\n        \r\n    // }\r\n\r\n    function getImgPath(){\r\n        console.log('initiate sosyal data');\r\n        let apiPath = state.globals.varNames.imgPath;\r\n        if(state.userData.isSosyal){\r\n            apiPath = state.globals.varNames.imgPathBlags;\r\n        }\r\n        return apiPath;\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    // function getImgPath(){\r\n    //     // return GlobalProviderCom.getImgPath(state);\r\n        \r\n        \r\n        \r\n    // }\r\n\r\n    function getSiteID(){\r\n        console.log('initiate sosyal data');\r\n        let siteID = state.appData.siteID;\r\n        if(state.userData.isSosyal){\r\n            siteID = state.appData.sosyalID;\r\n        }\r\n        return siteID;\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    // function getSiteID(){\r\n    //     // return GlobalProviderCom.getSiteID(state);\r\n        \r\n        \r\n        \r\n    // }\r\n\r\n    function dateToStr(payload) { \r\n        let timestampDate = new Date(payload * 1000);\r\n        let hours = timestampDate.getHours();\r\n        let minutes = timestampDate.getMinutes();\r\n        let seconds = timestampDate.getSeconds();\r\n        let year = timestampDate.getFullYear();\r\n        let month = timestampDate.getMonth() + 1;\r\n        let date = timestampDate.getDate();  \r\n        \r\n        return month + \"/\" + date + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;     \r\n    }\r\n\r\n    function datePickerStr(time) { \r\n        let dateToConvert = new Date(time);\r\n        let month = dateToConvert.getMonth() + 1;\r\n        let day = dateToConvert.getDate();\r\n        let monthFinal = month;\r\n        let dayFinal = day;\r\n\r\n        if(month < 10){\r\n            monthFinal = '0' + month;\r\n        } \r\n\r\n        if(day < 10){\r\n            dayFinal = '0' + day;\r\n        }\r\n\r\n        \r\n        let dateStr = dateToConvert.getFullYear() + '-' + monthFinal + '-' + dayFinal;  \r\n        return dateStr;   \r\n    }\r\n\r\n\r\n    function initiateSosyalData(data){\r\n        console.log('initiate sosyal data');\r\n        state.userData.sosyalData.balance = data.balance;\r\n        state.userData.sosyalData.dataBal = data.dataBal;\r\n        state.userData.sosyalData.totalAddtlData = data.totalAddtlData;\r\n        state.userData.sosyalData.socketToken = data.sosyalSocketToken;\r\n        state.userData.sosyalData.country = data.country;\r\n        state.userData.sosyalData.name = data.name;\r\n        state.userData.sosyalData.description = data.description;\r\n        state.userData.sosyalData.tags = data.tags;\r\n        state.userData.sosyalData.imgURL = data.imgURL;\r\n        state.userData.sosyalData.bidBal = data.bidBal;\r\n        state.userData.sosyalData.bidAmt = data.bidAmt;\r\n        state.userData.sosyalData.rating = data.rating;\r\n        state.userData.sosyalData.numOfRaters = data.numOfRaters;\r\n        state.userData.sosyalData.ratingVerified = data.ratingVerified;\r\n        state.userData.sosyalData.numOfRatersVerified = data.numOfRatersVerified;\r\n        state.userData.sosyalData.photoPassword = data.photoPassword;\r\n        state.userData.verifiedDataSet = data.verifiedDataSet;\r\n        state.userData.verifiedDataSet = false;\r\n        state.userData.verifiedData = data.verifiedData;\r\n        // state.userData.verifiedData.address = data.verifiedData.address;\r\n        state.userData.followedUsers = data.followedUsers;\r\n        state.userData.sosyalData.joinReqs = data.joinReqs;\r\n        state.userData.sosyalData.companyID = data.companyID;\r\n        state.userData.sosyalData.company = data.company;\r\n    }\r\n\r\n    // function initiateSosyalData(data){\r\n    //     // GlobalProviderCom.initiateSosyalData(data, state);\r\n    // }\r\n\r\n    function initiateUserData2(userData){\r\n        console.log('initiate user data');\r\n        state.userData.username = userData.username;\r\n        state.userData.userID = userData.userID;\r\n        state.userData.name = userData.name;\r\n        state.userData.imgURL = userData.imgURL;\r\n        state.userData.description = userData.description;\r\n        state.userData.companyID = userData.companyID;\r\n        state.userData.tags = userData.tags;\r\n        state.userData.position.lat = userData.lat / 1000000000000;\r\n        state.userData.position.lng = userData.lng / 1000000000000;\r\n        let groserMode = true;\r\n        if(userData.groserMode == 0){\r\n            groserMode = false;\r\n        }\r\n        state.userData.groserMode = groserMode;\r\n        state.userData.country = userData.country;\r\n        state.userData.imgPath = userData.imgPath;\r\n        // state.userData.postsID = userData.postsID;\r\n        // state.userData.reviewsID = userData.reviewsID;\r\n        state.userData.dataBal = userData.dataBal;\r\n        state.userData.totalAddtlData = userData.totalAddtlData;\r\n        state.userData.balance = userData.balance;\r\n        state.userData.bidBal = userData.bidBal;\r\n        state.userData.bidAmt = userData.bidAmt;\r\n        state.userData.expenses = userData.expenses;\r\n        state.userData.rating = userData.rating;\r\n        state.userData.numOfRaters = userData.numOfRaters;\r\n        state.userData.ratingVerified = userData.ratingVerified;\r\n        state.userData.numOfRatersVerified = userData.numOfRatersVerified;\r\n        state.userData.photoPassword = userData.photoPassword;\r\n        state.userData.joinReqs = userData.joinReqs;\r\n        state.userData.company = userData.company;\r\n        \r\n        // state.userData.blagssPassSet = userData.blagssPassSet;\r\n        // state.userData.passwordSet = userData.passwordSet;\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    function initiateGlobals(globals){\r\n        state.globals.numOfItems = globals.numOfItems;\r\n        state.globals.numOfPosts = globals.numOfItems;\r\n        \r\n    }\r\n\r\n    // function initiateGlobals(globals){\r\n    //     // GlobalProviderCom.initiateGlobals(globals, state);\r\n        \r\n    // }\r\n\r\n    function setVariables(payload){\r\n        state.countries = payload.countries;\r\n        state.globals.errorCodes = payload.codes;\r\n        // state.globals.varNames.chatApiPath = payload.paths.chat; \r\n        // state.globals.varNames.imgPath = payload.paths.profileImg;  \r\n        // state.globals.varNames.itemsImgPath = payload.paths.itemsImg;  \r\n        // // state.globals.varNames.apiPath = payload.paths.own; \r\n        // state.globals.varNames.blagsApiPath = payload.paths.blags;  \r\n        // state.globals.varNames.blagsImgPath = payload.paths.sosyalImg;  \r\n        // console.log('path img: ', context.state.globals.varNames.itemsImgPath);\r\n        // context.state.globals.varNames.serchApiPath = payload.paths.serch;  \r\n        // context.state.globals.varNames.ad = payload.paths.chat;   \r\n    }\r\n\r\n    // function setVariables(payload){\r\n    //     // GlobalProviderCom.setVariables(payload, state);\r\n    // }\r\n\r\n    // async function getSearchTags(tag, startPt, isUserTags){\r\n\r\n    //     let tags = [];\r\n\r\n    //     let data = {\r\n    //         tag: tag,\r\n    //         startPoint: startPt,\r\n               \r\n    //     }\r\n\r\n    //     let path = 'user/getSearchTags';\r\n    //     if(isUserTags){\r\n    //         path = 'user/getUserHints';\r\n    //     }\r\n\r\n    //     let response = await apiCall(getApiPath() + path, data);\r\n    //     console.log('response: ', response);\r\n    //     if(response.status == 1){\r\n    //         // setTags(response.payload);\r\n    //         tags = response.payload\r\n    //     } \r\n        \r\n    //     return tags;\r\n    // }\r\n\r\n    async function getSearchTags(tag, startPt, isUserTags){\r\n\r\n        let tags = [];\r\n\r\n        let data = {\r\n            tag: tag,\r\n            startPoint: startPt,\r\n               \r\n        }\r\n\r\n        let path = 'user/getSearchTags';\r\n        if(isUserTags){\r\n            path = 'user/getUserHints';\r\n        }\r\n\r\n        let response = await apiCall(getApiPath() + path, data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // setTags(response.payload);\r\n            tags = response.payload\r\n        } \r\n        \r\n        return tags;\r\n    }\r\n\r\n    function changePage(page){\r\n        console.log('initiate user data');\r\n        state.userData.currentPage.back = page;\r\n        forceUpdate();\r\n        // dispatch({\r\n        //     type: 'UPDATE_USER_DATA',\r\n        //     payload: 'username'\r\n        // });\r\n        \r\n    }\r\n\r\n    // function changePage(page){\r\n        // GlobalProviderCom.changePage(page, state, forceUpdate);\r\n    //     // dispatch({\r\n    //     //     type: 'UPDATE_USER_DATA',\r\n    //     //     payload: 'username'\r\n    //     // });\r\n        \r\n    // }\r\n\r\n    function changeApp(page){\r\n        console.log('initiate user data');\r\n        state.userData.pageNumm ++;\r\n        forceUpdate();\r\n        // dispatch({\r\n        //     type: 'UPDATE_USER_DATA',\r\n        //     payload: 'username'\r\n        // });\r\n        \r\n    }\r\n\r\n    function randomStr(length) {\r\n        let result           = '';\r\n        let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        \r\n        let charactersLength = characters.length;\r\n        for ( let i = 0; i < length; i++ ) {\r\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function convertTagsToStr(tags) {\r\n        \r\n        let tagsStr = '';\r\n        let tagsArr = JSON.parse(tags);\r\n        console.log('tags Arr: ', tagsArr);\r\n        tagsArr.forEach((tag, ndx) => {\r\n            tagsStr = tagsStr + tag + ' ';\r\n        })\r\n        // if(tagsArr === Array){\r\n            \r\n        // }\r\n        console.log('tags str: ', tagsStr);\r\n        return tagsStr;\r\n    }\r\n\r\n    function convertTagsStrToArrayStr(tagsStr) {\r\n        let tagsArray = tagsStr.split(\" \");\r\n        let arrayStr = JSON.stringify(tagsArray);\r\n        return arrayStr;\r\n    }\r\n\r\n    async function cancelShapper(userID, type) {\r\n        let data = {\r\n            type: type,\r\n            userID: userID   \r\n        }\r\n        let response = await apiCall(state.globals.varNames.apiPath + 'map/cancelHire', data); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 3, false);\r\n        } \r\n    }\r\n\r\n    // async function cancelShapper(userID, type) {\r\n    //     // GlobalProviderCom.cancelShapper(userID, type, state, forceUpdate)\r\n    // }\r\n\r\n    function createUserInfo(username, rating, ratingVerified, numOfRaters, numOfRatersVerified, imgURL) {\r\n        \r\n        let userInfo = {\r\n            username: username,\r\n            rating: rating,\r\n            ratingVerified: ratingVerified,\r\n            numOfRaters: numOfRaters,\r\n            numOfRatersVerified: numOfRatersVerified,\r\n            imgURL: imgURL\r\n        }\r\n\r\n        return userInfo;\r\n    }\r\n\r\n    function openModal(payload) {\r\n        console.log('open modal start');\r\n        state.appModalData.title = payload.title;\r\n        state.appModalData.index = payload.index;\r\n        state.appModalData.page = payload.page;\r\n        \r\n        state.appModalData.addtlData = payload.addtlData;\r\n       \r\n    \r\n        state.userData.showingModal = true;\r\n        \r\n    }\r\n\r\n    function openSingleModal(name, data) {\r\n        console.log('open single modal');\r\n        state.userData.openingSingleModal = true;\r\n        state.singleModalData.name = name;\r\n        state.singleModalData.data = data;\r\n        forceUpdate();\r\n        \r\n    }\r\n\r\n    function openYesNoModal(question, callbackFunc) {\r\n        console.log('open modal start');\r\n        state.userData.openingYesNoModal = true;\r\n        state.yesNoModalData.callbackFunc = callbackFunc;\r\n        state.yesNoModalData.question = question;\r\n        forceUpdate();\r\n        \r\n    }\r\n\r\n    // function openYesNoModal(question, callbackFunc) {\r\n    //     // GlobalProviderCom.openYesNoModal(question, callbackFunc, state, forceUpdate);\r\n        \r\n    // }\r\n\r\n    function openMsgModal(username, msg, msgID, headerID) {\r\n        console.log('open modal start');\r\n        state.userData.openingMsgModal = true;\r\n        state.msgModalData.username = username;\r\n        state.msgModalData.msg = msg;\r\n        state.msgModalData.msgID = msgID;\r\n        state.msgModalData.headerID = headerID;\r\n        // state.msgModalData.replying = replying;\r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    // function openMsgModal(username, msg, msgID, headerID) {\r\n    //     // GlobalProviderCom.openMsgModal(username, msg, msgID, headerID, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    // }\r\n\r\n    function openStartPtModal(value, callbackFunc) {\r\n        console.log('open modal start');\r\n        console.log('value: ', value);\r\n        console.log('callback func: ', callbackFunc);\r\n        state.userData.openingStartPtModal = true;\r\n        state.startPtModalData.value = value;\r\n        state.startPtModalData.callbackFunc = callbackFunc;\r\n        \r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    // function openStartPtModal(value, callbackFunc) {\r\n    //     // GlobalProviderCom.openStartPtModal(value, callbackFunc, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    // }\r\n\r\n    function openMoreOptionsModal(options, onClickOptionFunc) {\r\n        console.log('open more options modal');\r\n        // console.log('value: ', value);\r\n        // console.log('callback func: ', onClickOptionFunc);\r\n        state.userData.openingMoreOptionsModal = true;\r\n        state.moreOptionsModalData.options = options;\r\n        state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n        \r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    // function openMoreOptionsModal(options, onClickOptionFunc) {\r\n    //     // GlobalProviderCom.openMoreOptionsModal(options, onClickOptionFunc, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    // }\r\n\r\n    function openGroserModal(data) {\r\n        console.log('open modal start');\r\n        // console.log('value: ', value);\r\n        // console.log('callback func: ', onClickOptionFunc);\r\n        state.userData.openingGroserModal = true;\r\n        state.groserModalData.data = data;\r\n        // state.groserModalData.name = name;\r\n        // state.moreOptionsModalData.onClickOptionFunc = onClickOptionFunc;\r\n        \r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    // function openGroserModal(data) {\r\n    //     // GlobalProviderCom.openGroserModal(data, state, forceUpdate);\r\n    \r\n        \r\n        \r\n    // }\r\n\r\n    function getLinks(text, linkType) {\r\n        let words = text;\r\n        let wordArray = [];\r\n        if(linkType == 'userLink'){\r\n            wordArray = words.split(/@([a-z0-9]+)/i);\r\n        }else if(linkType == 'link'){\r\n            wordArray = words.split(/\\[link\\]([a-z0-9.\\/:]+)\\[\\/link\\]/i);\r\n        }\r\n        \r\n        let wordsObjArr = [];\r\n        if(wordArray.length > 1){\r\n            wordArray.forEach((word, ndx) => {\r\n                if((ndx + 1) % 2 == 0){\r\n                    wordsObjArr.push({\r\n                        text: word,\r\n                        obj: linkType\r\n                    })\r\n                }else{\r\n                    wordsObjArr.push({\r\n                        text: word,\r\n                        obj: 'text'\r\n                    })   \r\n                }\r\n            })\r\n        }\r\n        \r\n\r\n        return wordsObjArr;\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function convertTextToObj(text) {\r\n        \r\n        let wordsObjArr = getLinks(text, 'userLink');\r\n        // console.log('words obj arr: ', wordsObjArr);\r\n        if(wordsObjArr.length == 0){\r\n            wordsObjArr.push({\r\n                text: text,\r\n                obj: 'text'   \r\n            })\r\n        }\r\n        \r\n        let wordsObjArrLinks = [];\r\n        for(let i = 0; i < wordsObjArr.length; i++){\r\n            if(wordsObjArr[i].obj == 'text'){\r\n                wordsObjArrLinks = getLinks(wordsObjArr[i].text, 'link'); \r\n                // console.log('words obj links: ', wordsObjArrLinks);\r\n                if(wordsObjArrLinks.length > 0){\r\n                    \r\n                    wordsObjArrLinks.forEach((wordObjLinks, ndx) => {\r\n                        wordsObjArr.splice(i + ndx + 1, 0, wordObjLinks);\r\n                        // wordsObjArr.push(wordObjLinks);\r\n                    })\r\n                    wordsObjArr.splice(i, 1);\r\n                }    \r\n            }\r\n        }\r\n\r\n        // console.log('words obj: ', wordsObjArr);\r\n        // let component = <View style={{flexDirection: 'row', marginVertical: 10}}>\r\n        //     {wordsObjArr.map((word, ndx) => {\r\n        //         if(word.obj == 'text'){\r\n        //             return <Text>{word.text}</Text>;   \r\n        //         }else{\r\n        //             if(word.obj == 'userLink'){\r\n        //                 return <Text key={ndx} onPress={()=>{showOtherUser(word.text)}}>{'@' + word.text}</Text>      \r\n        //             }else{\r\n        //                 return <Text key={ndx} onPress={()=>{Linking.openURL('https://google.com')}}>{'#' + word.text}</Text>      \r\n        //             }\r\n                    \r\n        //         }\r\n                \r\n                \r\n                \r\n        //     })}            \r\n        // </View>\r\n        \r\n        \r\n\r\n        return wordsObjArr;\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function convertEmptyStr(str){\r\n        var strRegex = str.replace(/ /ig, \"\");\r\n        var strFinal = '';\r\n        console.log('str regex: ', strRegex);\r\n        if(strRegex != ''){\r\n            strFinal = str;\r\n        }\r\n    \r\n        return strFinal;\r\n    }\r\n\r\n    // function showOtherUser2(username) {\r\n    //     console.log('open modal start');\r\n    //     if(username == state.userData.username){\r\n    //         changePage('Profile');\r\n    //     }else{\r\n    //         state.userData.showingOtherUser = true;\r\n    //         state.otherUserData.username = username;\r\n            \r\n    //         forceUpdate();\r\n    //     }\r\n        \r\n    \r\n        \r\n        \r\n    // }\r\n\r\n\r\n    function showOtherUser(username) {\r\n        console.log('open modal start');\r\n        if(username == state.userData.username){\r\n            changePage('Profile');\r\n        }else{\r\n            showOtherPage('Other User', username);\r\n        }\r\n        \r\n    \r\n        \r\n        \r\n    }\r\n\r\n    // function showOtherUser(username) {\r\n    //     // GlobalProviderCom.showOtherUser(username, state);\r\n        \r\n    \r\n        \r\n        \r\n    // }\r\n\r\n    function showOtherPage(name, data) {\r\n        console.log('open modal start');\r\n        \r\n        \r\n    \r\n        state.userData.showingOtherPage = true;\r\n        state.otherPageData.name = name;\r\n        state.otherPageData.data = data;\r\n        state.userData.otherPageNum ++;\r\n        forceUpdate();\r\n        \r\n    }\r\n\r\n    // function showOtherPage(name, data) {\r\n    //     // GlobalProviderCom.showOtherPage(name, data, state, forceUpdate);\r\n        \r\n    // }\r\n\r\n    function showOtherUserList(userID) {\r\n        // console.log('open modal start');\r\n        // state.userData.showingOtherUserList = true;\r\n        // state.otherUserListData.userID = userID;\r\n        \r\n        // forceUpdate();\r\n    \r\n        showOtherPage('Other List', userID);\r\n        \r\n    }\r\n\r\n    // function showOtherUserList(userID) {\r\n    //     // GlobalProviderCom.showOtherUserList(userID);\r\n        \r\n    // }\r\n\r\n    function showOtherPost(post) {\r\n        console.log('show other post');\r\n        // state.userData.showingOtherPost = true;\r\n        // state.otherPostData = post;\r\n        \r\n        // forceUpdate();\r\n        showOtherPage('Other Post', post);\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    // function showOtherPost(post) {\r\n    //     // GlobalProviderCom.showOtherPost(post);\r\n    \r\n        \r\n        \r\n    // }\r\n\r\n    function showToast(message, duration, isError) {\r\n        console.log('open modal start');\r\n        state.userData.showingToast = true;\r\n        state.toastData.message = message;\r\n        state.toastData.duration = duration;\r\n        state.toastData.isError = isError;\r\n        forceUpdate();\r\n    \r\n        \r\n        \r\n    }\r\n\r\n    function createProfileData(userID, imgURL, imgPath, username, name, description, country, rating, numOfRaters, isSosyal, photoPassword, ratingVerified, numOfRatersVerified) {\r\n\r\n        let profile = {\r\n            userID: userID,\r\n            imgURL: imgURL,\r\n            imgPath: imgPath,\r\n            // profileImgUrl: globals.varNames.imgPathBlags + userData.sosyalData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword,\r\n            username: username,\r\n            name: name,\r\n            description: description,\r\n            country: country,\r\n            rating: rating,\r\n            numOfRaters: numOfRaters,\r\n            ratingVerified: ratingVerified,\r\n            numOfRatersVerified: numOfRatersVerified,\r\n            isSosyal: isSosyal,\r\n            photoPassword: photoPassword\r\n        } \r\n        \r\n        return profile;\r\n        \r\n        \r\n    }\r\n\r\n    function logout(){\r\n        state.userData.loggedIn = false;\r\n        localStorage.removeItem('userData'); \r\n        state.userData.currentPage.front = 'login';    \r\n        forceUpdate();  \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     console.log('pages Ref: ', pagesRef);\r\n    //     // if(isTyping){\r\n            \r\n    //     // }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [pagesRef]);\r\n\r\n    return (<GlobalContext.Provider value = {{\r\n        // appData: state.appData,\r\n        // userData: state.userData,\r\n        // globals: state.globals,\r\n        // countries: state.countries,\r\n        // // appModalData: state.appModalData,\r\n        // // mapData: state.mapData,\r\n        // otherUserData: state.otherUserData,\r\n        // otherUserListData: state.otherUserListData,\r\n        // otherPostData: state.otherPostData,\r\n        // toastData: state.toastData,\r\n        // msgModalData: state.msgModalData,\r\n        // startPtModalData: state.startPtModalData,\r\n        // singleModalData: state.singleModalData,\r\n        // yesNoModalData: state.yesNoModalData,\r\n        // moreOptionsModalData: state.moreOptionsModalData,\r\n        // otherPageData: state.otherPageData,\r\n        // groserModalData: state.groserModalData,\r\n        // login,\r\n        // apiCall,\r\n        // getUserData,\r\n        // // getUserToken,\r\n        // updateUserData,\r\n        // changePage,\r\n        // changeApp,\r\n        // forceUpdate,\r\n        // toggleNav,\r\n        // dateToStr,\r\n        // datePickerStr,\r\n        // getMsgs,\r\n        // changeOutsidePage,\r\n        // openModal,\r\n        // getDelayer,\r\n        // getSearchTags,\r\n        // randomStr,\r\n        // funcDelayer,\r\n        // checkPassword,\r\n        // repeatPasswordChange,\r\n        // checkUsernameInput,\r\n        // checkRepeatPassInput,\r\n        // checkPassInput,\r\n        // showOtherUser,\r\n        // showOtherUserList,\r\n        // showOtherPost,\r\n        // showOtherPage,\r\n        // showToast,\r\n        // openMsgModal,\r\n        // openStartPtModal,\r\n        // openSingleModal,\r\n        // openYesNoModal,\r\n        // openMoreOptionsModal,\r\n        // openGroserModal,\r\n        // cancelShapper,\r\n        // convertTextToObj,\r\n        // convertEmptyStr,\r\n        // getApiPath,\r\n        // getImgPath,\r\n        // getSiteID,\r\n        // getOrder,\r\n        // convertNumToStr,\r\n        // convertStrToNum,\r\n        // createUserInfo,\r\n        // convertTagsToStr,\r\n        // convertTagsStrToArrayStr,\r\n        // createProfileData,\r\n        // logout\r\n        \r\n    }}>\r\n        <PagesFinal ref={pagesRef} />\r\n        {/* {children} */}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useState, useEffect, useContext, useRef } from 'react'; \r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport { yellow, green } from '@material-ui/core/colors';\r\n\r\nexport default function Ratings({rating, numOfRaters, size, isVerified, raterSize = 12}) {\r\n\tconsole.log('LIST')\r\n\t\r\n    let color = yellow[500];\r\n    if(isVerified){\r\n        color = green[500];\r\n    }\r\n    const StyledRating = withStyles({\r\n        iconFilled: {\r\n          color: color,\r\n          fontSize: size\r\n        },\r\n        iconEmpty: {\r\n            fontSize: size,\r\n            // margin: 0\r\n        },\r\n        // readOnly: {\r\n        //     backgroundColor: 'blue',\r\n        //     margin: 0\r\n        // }\r\n        // iconHover: {\r\n        //   color: '#ff3d47',\r\n        // },\r\n    })(Rating);\r\n    \r\n    // let numOfRatersSpan = null;\r\n    // if(numOfRaters > 0){\r\n    //     numOfRatersSpan = <span style={{fontSize: parseInt(size * 0.75)}}>{numOfRaters}</span>;    \r\n    // }\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     console.log('rating ref: ', ratingRef);\r\n    //     // if(pageInitiated){\r\n                   \r\n    //     // }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [ratingRef]);\r\n\r\n    return (\r\n        <div className='d-flex'>\r\n\r\n            {/* <Rating\r\n                type='custom'\r\n                imageSize={size}\r\n                // showRating\r\n                // onFinishRating={ratingCompleted}\r\n                readonly\r\n                style={{marginRight: 5}}\r\n                ratingCount={5}\r\n                ratingColor={color}\r\n                \r\n                startingValue={rating / 100}\r\n            /> */}\r\n\r\n            <StyledRating\r\n                className=''\r\n                name=\"simple-controlled\"\r\n                value={rating / 100}\r\n                precision={0.1}\r\n                readOnly\r\n                // ref={ratingRef}\r\n                // onChange={onRate}\r\n            />\r\n            <span className='ml-1' style={{fontSize: raterSize, position: 'relative', left: -5, top: 5}}>{numOfRaters}</span>\r\n            {/* {numOfRatersSpan} */}\r\n            {/* <Badge style={{position: 'relative', top: 10, left: 5}} className='p-0' max={500000} badgeContent={numOfRaters} color=\"primary\">\r\n                <PersonIcon style={{position: 'relative', top: -18, color: color, fontSize: size}} />\r\n            </Badge> */}\r\n            {/* <div style={{flexDirection: 'row'}}>\r\n                <Text style={{fontSize: size}}>{numOfRaters}</Text>\r\n                <Icon size={size} name='star' color={color} />\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n// import { View, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport {Card, Button, Avatar} from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nexport default function UserImg({imgPathBegin, imgURL, userID, photoPassword, size=50}) {\r\n\tconsole.log('LIST')\r\n    const { openSingleModal } = useContext(GlobalContext);\r\n\r\n\tlet url = 'htto';\r\n    if(imgURL != ''){\r\n        url = imgPathBegin + imgURL + '/' + userID + '/' + photoPassword\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n\r\n    // let myStyle = {backgroundColor: 'gray', width: 50, height: 50}\r\n    let imgURI = url;\r\n    console.log('img uri: ', imgURI);\r\n    // if(image != null){\r\n    //     imgURI = URL.createObjectURL(image);\r\n    // }\r\n    return (\r\n        \r\n        <Avatar style={{width: size, height: size}} onClick={()=>openSingleModal('Image', url)} className='' alt=\"Remy Sharp\" src={imgURI} />\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\nimport {Card, Button, Link} from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { yellow, green } from '@material-ui/core/colors';\r\n\r\nexport default function UserLink({username, verified, fontSize = 15}) {\r\n\tconsole.log('LIST')\r\n    const { showOtherUser } = useContext(GlobalContext); \r\n    let checkIcon = null;\r\n\tif(verified == 1){\r\n        checkIcon = <CheckIcon className='' style={{color: green[500], fontSize: 20}} />;\r\n    }\r\n\r\n    return (\r\n        <Link style={{fontWeight: 500, fontSize}} href=\"#\" onClick={(e)=>{e.preventDefault(); showOtherUser(username)}}>\r\n            @{username}\r\n            {checkIcon}\r\n        </Link>\r\n        // <Text onPress={()=>showOtherUser(username)} style={{...style, color: 'blue', fontWeight: 'bold'}}>@{username}</Text>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, Tabs, Tab, Link} from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nexport default function MoreInfo({div}) {\r\n    console.log('AppModal');\r\n    const {userData, globals, getUserData, forceUpdate, appModalData, openSingleModal} = useContext(GlobalContext);\r\n    // const [showMoreInfo, setShowMoreInfo] = useState(false);\r\n    // let label = 'More';\r\n    // let moreInfoDiv = null;\r\n    // if(showMoreInfo){\r\n    //     // moreInfoDiv = <div>\r\n    //     //     {children}\r\n    //     // </div>;\r\n    //     label = 'Less'     \r\n    // }\r\n    return (\r\n        // {div}\r\n        <Link href=\"#\" onClick={(e)=>{e.preventDefault(); openSingleModal('Details', {div: div})}}>More Info</Link>    \r\n        // <div className='d-flex flex-column'>\r\n            \r\n        //     {moreInfoDiv}\r\n        // </div>\r\n        \r\n       \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\n// import UserRatings from './UserRatings';\r\nimport UserImg from '../Components/UserImg';\r\nimport UserLink from './UserLink';\r\nimport Rating from './Rating';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function UserInfoDiv({userInfo, imgPathBegin, photoPassword}) {\r\n\tconsole.log('LIST')\r\n\tconst {userData, globals, getUserData, singleModalData, apiCall, showToast, getSiteID} = useContext(GlobalContext);\r\n    console.log('user info: ', userInfo);\r\n    return (\r\n        <div className='d-flex'>\r\n            <div className='border-right px-2'>\r\n                <UserImg imgPathBegin={imgPathBegin} imgURL={userInfo.imgURL} userID={userData.userID} photoPassword={photoPassword} />\r\n            </div>\r\n            \r\n            <div className='d-flex flex-column px-2'>\r\n                {/* <Text style={{color: 'blue', fontSize: 20}}>@{userInfo.username}</Text> */}\r\n                <UserLink verified={userInfo.verifiedUser} username={userInfo.username} />\r\n                <span>{userInfo.name}</span>\r\n                <span>{userInfo.description}</span>\r\n                <Rating size={17} isVerified={false} rating={userInfo.rating} numOfRaters={userInfo.numOfRaters} />\r\n                <Rating size={17} isVerified={true} rating={userInfo.ratingVerified} numOfRaters={userInfo.numOfRatersVerified} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","\r\nimport React, { useState, useContext, useRef } from 'react'; \r\n// import { View, Image } from 'react-native';\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n// import { Button, COLOR } from 'react-native-material-ui';\r\n\r\n\r\n// import { Text } from 'native-base';\r\n// import { Rating } from 'react-native-elements';\r\nimport Rating from '../HtmlComponents/Rating';\r\nimport UserImg from '../Components/UserImg';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport CompanyDiv from '../HtmlComponents/CompanyDiv';\r\nimport UserInfoDiv from '../HtmlComponents/UserInfoDiv';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport WrongIcon from '@material-ui/icons/Close';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default function ProfileDiv({profileData, isUser}) {\r\n    console.log('profile data: ', profileData);\r\n    const {userData, globals, apiCall, changePage, getApiPath, forceUpdate, openSingleModal, createUserInfo} = useContext(GlobalContext);\r\n    let followed = false;\r\n    let companyJoinLabel = 'Join Company';\r\n    async function follow(){\r\n        console.log('send money');\r\n        // userToFollow: req.body.userToFollow,\r\n        // type: req.body.type\r\n        let type = 'follow';\r\n        if(followed){\r\n            type = 'unfollow';\r\n        }\r\n        \r\n        let data = {\r\n            userToFollow: profileData.userID,\r\n            type: type\r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/follow', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            \r\n        }\r\n    }\r\n\r\n    async function join(){\r\n        console.log('send money');\r\n        // userToFollow: req.body.userToFollow,\r\n        // type: req.body.type\r\n        if(companyJoinLabel == 'Join Company'){\r\n            joinCompany();\r\n        }else if(companyJoinLabel == 'Cancel Request'){\r\n            cancelRequest();\r\n        }else{\r\n            leaveCompany();\r\n        }\r\n        \r\n    }\r\n\r\n    async function joinCompany(){\r\n        console.log('send money');\r\n        // userToFollow: req.body.userToFollow,\r\n        // type: req.body.type\r\n        let data = {\r\n            coID: profileData.userID,\r\n            \r\n        }\r\n\r\n        \r\n        // console.log('options: ', options);\r\n        let response = await apiCall(getApiPath() + 'company/joinCompany', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            userData.joinReqs.push(profileData.userID);  \r\n            forceUpdate();    \r\n        }\r\n    }\r\n\r\n    async function cancelRequest(){\r\n        console.log('send money');\r\n        // userToFollow: req.body.userToFollow,\r\n        // type: req.body.type\r\n        let data = {\r\n            coID: profileData.userID,\r\n            \r\n        }\r\n\r\n        \r\n        // console.log('options: ', options);\r\n        let response = await apiCall(getApiPath() + 'company/cancelRequest', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            let ndxToSplice = 0;\r\n            userData.joinReqs.forEach((joinReq, ndx) => {\r\n                if(joinReq == profileData.userID){\r\n                    ndxToSplice = ndx;\r\n                }   \r\n            }) \r\n            \r\n            userData.joinReqs.splice(ndxToSplice, 1);\r\n            forceUpdate();\r\n        }\r\n    }\r\n\r\n    async function leaveCompany(){\r\n        console.log('send money');\r\n        \r\n        let data = {\r\n            coID: profileData.userID,\r\n            \r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(getApiPath() + 'company/leaveCompany', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            userData.companyID = 0;   \r\n            forceUpdate();\r\n        }\r\n    }\r\n\r\n    \r\n    let url = 'http';\r\n    if(profileData.imgURL != ''){\r\n        url = profileData.imgPath + profileData.imgURL + '/' + userData.userID + '/' + profileData.photoPassword;\r\n        \r\n    }\r\n    \r\n    \r\n    console.log('img url: ', profileData.profileImgUrl);\r\n    console.log('img url2: ', url);\r\n\r\n    let bidName = 'User';\r\n    if(userData.isSosyal){\r\n        bidName = 'User Sosyal';\r\n    }\r\n    let verifiedLink = <Link className='' href=\"#\" onClick={(e)=>{e.preventDefault(); openSingleModal('Verified Info', profileData.userID)}}>View</Link>;\r\n    \r\n    let verified = <CheckIcon className='' style={{color: green[500], fontSize: 20}} />;\r\n    if(profileData.verifiedUser == 0){\r\n        verified = <WrongIcon className='' style={{color: red[500], fontSize: 20}} />;\r\n        verifiedLink = null;\r\n    }\r\n    let btns = <div className='d-flex mt-2' style={{justifyContent: 'flex-start'}}>\r\n        {/* <Button style={{ container: {marginBottom: 20} }} raised primary text='Follow' onPress={follow} /> */}\r\n        <Button className='mr-1' variant=\"contained\" onClick={()=>changePage('Edit Profile')}>Edit</Button>\r\n        <Button variant=\"contained\" onClick={()=>openSingleModal('Bid', {bidAmt: profileData.bidAmt, itemName: bidName, id: profileData.userID, bidBal: profileData.bidBal})}>Bid</Button>\r\n        {/* <Button raised primary text='Edit' onPress={()=>changePage('Edit Profile')} />\r\n        <Button raised primary text='Bid' onPress={()=>openSingleModal('Bid', {bidAmt: profileData.bidAmt, itemName: bidName, id: profileData.userID})} /> */}\r\n    </div>;\r\n\r\n\r\n    if(!isUser){\r\n        let label = 'Follow';\r\n        profileData.followedUsers.forEach((followedUser)=>{\r\n            if(followedUser == profileData.userID){\r\n                label = 'Unfollow';\r\n                followed = true;\r\n            }\r\n        })\r\n        console.log('join requests: ', profileData.joinReqs);\r\n        profileData.joinReqs.forEach((joinReq) => {\r\n            if(joinReq == profileData.userID){\r\n                companyJoinLabel = 'Cancel Request';\r\n            }\r\n        })\r\n\r\n        let coID = userData.companyID;\r\n        if(userData.isSosyal){\r\n            coID = userData.sosyalData.companyID;\r\n        }\r\n        if(coID == profileData.userID){\r\n            companyJoinLabel = 'Leave Company';\r\n        }\r\n\r\n        btns = <div className='d-flex mt-2'>\r\n            <Button className='mr-1' variant=\"contained\" onClick={follow}>{label}</Button>\r\n            {/* <Button style={{ container: {marginBottom: 20} }} raised primary text={label} onPress={follow} /> */}\r\n            <Button className='mr-1' variant=\"contained\" onClick={join}>{companyJoinLabel}</Button>\r\n            {/* <Button raised primary text={companyJoinLabel} onPress={join} /> */}\r\n        </div>;\r\n    }\r\n\r\n    let companyDiv = null;\r\n    let companyInfo = null;\r\n    if(profileData.company.username != null){\r\n\r\n        // username: userInfo.companyusername,\r\n        // rate: userInfo.companyrating,\r\n        // numOfRaters: userInfo.companynumofraters,\r\n        // rateVerified: userInfo.companyratingverified,\r\n        // numOfRatersVerified: userInfo.companynumofratersverified,\r\n        // name: userInfo.companyname,\r\n        // imgURL: userInfo.companyimgurl,\r\n        let company = profileData.company;\r\n\r\n        let userInfo = {\r\n            companyusername: company.username,\r\n            companyname: company.name,\r\n            companyimgurl: company.imgURL,\r\n            companynumofratersverified: company.numOfRatersVerified,\r\n            companynumofraters: company.numOfRaters,\r\n            companyrating: company.rating,\r\n            companyratingverified: company.ratingVerified,\r\n        }\r\n\r\n        // let companyInfo = createUserInfo(userInfo, true);\r\n        // companyDiv = <CompanyDiv isSosyal={userData.isSosyal} user={userInfo} />\r\n        companyDiv = <div className='mt-2'>\r\n            <h6>Company</h6>\r\n            <UserInfoDiv userInfo={company} imgPathBegin={profileData.imgPath} photoPassword={profileData.photoPassword} />\r\n        </div>\r\n        // companyDiv = <div className='d-flex flex-column mt-3'>\r\n        //     <h6>Company</h6>\r\n        //     <div className='d-flex'>\r\n        //         {/* <UserImg size={30} imgPathBegin={imgPathBegin} imgURL={user.companyimgurl} userID={userData.userID} photoPassword={photoPassword} /> */}\r\n        //         <div className='d-flex flex-column ml-2'>\r\n        //             <span>{profileData.company.name}</span>\r\n        //             <UserLink verified={0} username={profileData.company.username} />\r\n        //             {/* <Rating size={17} isVerified={false} rating={user.companyrating} numOfRaters={user.companynumofraters} />\r\n        //             <Rating size={17} isVerified={true} rating={user.companyratingverified} numOfRaters={user.companynumofratersverified} /> */}\r\n        //         </div>\r\n        //     </div>\r\n            \r\n        // </div> \r\n    }\r\n\r\n    return (\r\n        // <View style={{flex: 1}}>\r\n        //     <View style={{marginBottom: 20}}>\r\n                \r\n        //         <Image style={{width: 100, height: 100, backgroundColor: 'blue', alignSelf: 'center'}} source={{uri: url}}/>\r\n                \r\n        //         <Text>{profileData.username}</Text>\r\n        //         <Text>{profileData.name}</Text>\r\n        //         <Text>{profileData.description}</Text>\r\n        //         <Text>{profileData.country}</Text>\r\n                \r\n\r\n        //         <Rating size={15} color={COLOR.yellow500} rating={profileData.rate} numOfRaters={profileData.numOfRaters} />\r\n                \r\n        //     </View>\r\n        //     {btns}\r\n            \r\n            \r\n            \r\n        // </View>\r\n        // profileData.imgPath + profileData.imgURL + '/' + profileData.userID + '/' + profileData.photoPassword;\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column p-2'>\r\n            <div style={{justifyContent: 'center'}} className='d-flex'>\r\n                <UserImg size={100} imgPathBegin={profileData.imgPath} imgURL={profileData.imgURL} userID={userData.userID} photoPassword={profileData.photoPassword} />\r\n            </div>\r\n            \r\n            <div style={{flex: 1}} className='d-flex flex-column ml-2 px-2'>\r\n                <UserLink username={profileData.username} />\r\n                <span>{profileData.name}</span>\r\n                <span>{profileData.description}</span>\r\n                <span>{profileData.country}</span>\r\n                <span>Verified: {verified} {verifiedLink}</span>\r\n                {/* <Link className='' href=\"#\" onClick={(e)=>{e.preventDefault(); openSingleModal('Verified Info', profileData.userID)}}>View</Link>     */}\r\n                <Rating size={20} isVerified={false} rating={profileData.rate} numOfRaters={profileData.numOfRaters} />\r\n                <Rating size={20} isVerified={true} rating={profileData.rateVerified} numOfRaters={profileData.numOfRatersVerified} />\r\n                {/* <UserLink username={profileData.company.username} />\r\n                <span>@{profileData.company.username}</span>\r\n                <Rating size={20} isVerified={false} rating={profileData.company.rating / 100} numOfRaters={profileData.company.numOfRaters} />\r\n                <Rating size={20} isVerified={true} rating={profileData.company.ratingVerified / 100} numOfRaters={profileData.company.numOfRatersVerified} /> */}\r\n                {btns}\r\n                {companyDiv}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport {Button, Tabs, Tab, Paper} from '@material-ui/core';\r\n// import { View } from 'react-native';\r\n\r\n// import { Container, Header, Content, Text, List, ListItem, Icon, Item } from 'native-base';\r\n// import { COLOR, Button } from 'react-native-material-ui';\r\n// import Button from './Button';\r\n\r\n\r\n\r\nexport default function InsidePageWrapper({tabs, onChangeTab, moreTabs, children}) {\r\n    console.log('AppModal');\r\n    const {userData, globals, openMoreOptionsModal, forceUpdate, appModalData} = useContext(GlobalContext);\r\n    const [tabVal, setTabVal] = useState(0);\r\n    // const [isOpeningMoreTabs, setIsOpeningMoreTabs] = useState(false);\r\n    function handleChange(e, newValue){\r\n        console.log('value: ', newValue);\r\n        let tab = tabs[newValue];\r\n        if(tab != 'More'){\r\n            onChangeTab(tabs[newValue]);\r\n            setTabVal(newValue);\r\n        }else{\r\n            openMoreOptionsModal(moreTabs, openMoreTab)    \r\n        }\r\n        \r\n    }\r\n\r\n    function openMoreTab(moreTab){\r\n        // e.preventDefault();\r\n        onChangeTab(moreTab);\r\n        // setIsOpeningMoreTabs(false);      \r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <Paper square>\r\n                <Tabs\r\n                    value={tabVal}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={handleChange}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                    \r\n                    {tabs.map((tab, ndx) => {\r\n                        return <Tab key={ndx} label={tab} />    \r\n                        \r\n                    })}\r\n                </Tabs>\r\n            </Paper>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n                {children}\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n       \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {Link, IconButton, Card, Paper} from '@material-ui/core';\r\n\r\n// import ListCard from '../HtmlComponents/ListCard';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport UserImg from '../Components/UserImg';\r\n\r\nexport default function ReviewList({ review }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, forceUpdate, apiCall, openSingleModal } = useContext(GlobalContext);\r\n\r\n    return (\r\n        // <ListCard buttons={[]}>\r\n            \r\n        //     <UserLink username={review.username} style={{fontSize: 20}} />\r\n        //     <View>\r\n        //         <Text>{review.comment}</Text> \r\n        //         <Text>{JSON.stringify(review)}</Text>   \r\n        //     </View>\r\n        //     <View style={{flexDirection: 'row'}}>\r\n        //         <Rating\r\n        //             imageSize={20}\r\n                    \r\n        //             readonly\r\n        //             style={{ paddingVertical: 10 }}\r\n        //             ratingCount={5}\r\n        //             startingValue={review.rate}\r\n        //         />\r\n        //     </View>\r\n            \r\n        //     <Button onPress={()=>openSingleModal('Details', {info: review, imgPathBegin: globals.varNames.imgPathBlags, photoPassword: userData.sosyalData.photoPassword })} primary text=\"More Info\" />\r\n            \r\n        // </ListCard>\r\n\r\n        <Paper elevation={2} className='d-flex mb-3 p-2'>\r\n            <UserImg imgPathBegin={globals.varNames.imgPathBlags} imgURL={review.imgurl} userID={userData.userID} photoPassword={userData.sosyalData.photoPassword} />\r\n            <div className='d-flex flex-column ml-2'>\r\n                <UserLink verified={review.verifieduser} username={review.username} />\r\n                <p style={{fontSize: 15}}>{review.comment}</p>\r\n                <Rating name=\"read-only\" value={review.rate} readOnly />\r\n            </div>\r\n            \r\n            \r\n        </Paper>\r\n    );\r\n}","\r\nimport React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\n// import PageNav from './PageNav';\r\n\r\nimport ReviewList from '../List/ReviewList';\r\n\r\nexport default function Reviews({userData, isUser}) {\r\n    console.log('REVIEWS');\r\n    const {globals, apiCall, openSingleModal, showPageNav, closePageNav, getSiteID} = useContext(GlobalContext);\r\n    // const {apiCall} = useContext(GlobalContext);\r\n    console.log('profile data: ', userData);\r\n    // const [startPt, setStartPt] = useState(0);\r\n    const [reviewsData, setReviewsData] = useState({\r\n        reviews: [],\r\n    });\r\n\r\n    async function getReviews(startPt){\r\n        // userViewedID: req.body.userViewedID,\r\n        // startPoint\r\n        console.log('site id: ', getSiteID());\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/getReviews', {startPoint: startPt, userViewedID: userData.userID, siteID: getSiteID()});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            \r\n            setReviewsData({...reviewsData, reviews: response.payload});\r\n        } \r\n    }\r\n    \r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getReviews();\r\n        showPageNav(getReviews);\r\n        getReviews(0);\r\n\r\n        return closePageNav\r\n    }, []);\r\n    \r\n    \r\n    \r\n    \r\n    let reviewBtn = null;\r\n    if(!isUser){\r\n        // reviewBtn = <View>\r\n        //     <Button onPress={()=>openSingleModal('Review', userData.userID)} transparent>\r\n        //         <Text>Create Review</Text>\r\n        //     </Button>   \r\n        // </View>;\r\n        // <View style={{flexDirection: 'row'}}>\r\n        //         <Button style={{container: {marginRight: 25}}} raised primary text='Back' onPress={onPressBack} />\r\n        //         <PageNav startPt={startPt} setStartPt={setStartPt} isForward={false} getItems={getMsgs} />\r\n        //     </View>\r\n        // reviewBtn = <View style={{flexDirection: 'row'}}>\r\n        //     <Button primary text='Review user' onPress={()=>openSingleModal('Review', userData.userID)} raised />\r\n        // </View>\r\n        reviewBtn = <Button variant=\"contained\" onClick={()=>openSingleModal('Review', userData.userID)}>Review User</Button>;\r\n        \r\n    }\r\n    \r\n    \r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        // <View style={{flex: 1}}>\r\n            \r\n        //     {reviewBtn}\r\n            \r\n        //     <View style={{flex: 1}}>\r\n        //         <ScrollView>\r\n        //             {reviewsData.reviews.map((review) => {\r\n        //                 return <ReviewList key={review.id} review={review}/>\r\n                        \r\n        //             })}\r\n        //         </ScrollView>   \r\n        //     </View>\r\n            \r\n            \r\n        //     <PageNav isForward={true} startPt={startPt} setStartPt={setStartPt} getItems={getReviews} />\r\n        // </View>\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column py-1 px-2'>\r\n            <div style={{justifyContent: 'flex-end'}} className='d-flex'>\r\n                {reviewBtn}\r\n            </div>\r\n            \r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-1 py-1'>\r\n                {reviewsData.reviews.map((review) => {\r\n                    return <ReviewList key={review.id} review={review}/>\r\n                    \r\n                })}\r\n            </div>\r\n            {/* <div style={{alignItems: 'flex-end'}} className='d-flex flex-column px-3'>\r\n                <PageNav isForward={true} startPt={startPt} setStartPt={setStartPt} getItems={getReviews} />\r\n            </div> */}\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n}","\r\nimport React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, TextField, MenuItem, Menu, Link} from '@material-ui/core';\r\n\r\n// import { View } from 'react-native';\r\n\r\n// import { Container, Header, Content, Text, List, ListItem, Icon, Item } from 'native-base';\r\n// import { COLOR, Button } from 'react-native-material-ui';\r\n// import Button from './Button';\r\n\r\n\r\n\r\nexport default function Tab({headers, onChangeTab, moreTabs}) {\r\n    console.log('AppModal');\r\n    const {userData, globals, openMoreOptionsModal, forceUpdate, appModalData} = useContext(GlobalContext);\r\n    const [isOpeningMoreTabs, setIsOpeningMoreTabs] = useState(false);\r\n    // const [anchorEl, setAnchorEl] = useState(null);\r\n    \r\n\r\n    // function handleClick(event){\r\n    //     setAnchorEl(event.currentTarget);\r\n    // }\r\n    \r\n    // function handleClose(){\r\n    //     setAnchorEl(null);\r\n    // }\r\n\r\n    // function onMenuClicked(menu){\r\n    //     onChangeTab(menu);\r\n    //     handleClose();\r\n    // }\r\n    \r\n    function openMoreTab(moreTab){\r\n        // e.preventDefault();\r\n        onChangeTab(moreTab);\r\n        // setIsOpeningMoreTabs(false);      \r\n    }\r\n\r\n    function onClickLink(e, moreTab){\r\n        e.preventDefault();\r\n        onChangeTab(moreTab);\r\n        // setIsOpeningMoreTabs(!isOpeningMoreTabs);      \r\n    }\r\n\r\n    function onClickMoreLink(e){\r\n        e.preventDefault();\r\n        // onChangeTab(moreTab);\r\n        openMoreOptionsModal(moreTabs, openMoreTab)\r\n        // setIsOpeningMoreTabs(!isOpeningMoreTabs);      \r\n    }\r\n\r\n    let moreTabsComponent = null;\r\n    let moreLabel = 'More';\r\n    if(isOpeningMoreTabs){\r\n        moreTabsComponent = <div style={{position: 'absolute', width: 100, left: -30, top: 30}} className='d-flex flex-column bg-white px-2 shadow pt-3 pb-2'>\r\n           \r\n            {moreTabs.map((moreTab) => {\r\n                // <Button primary text=\"Primary\" />\r\n                return <Link className='mb-1 border-bottom' noIndent onClick={(e) => openMoreTab(e, moreTab)}>\r\n                    {moreTab}\r\n                </Link>\r\n                \r\n                \r\n                \r\n                \r\n            })}      \r\n        </div>;\r\n\r\n        moreLabel = 'Less';\r\n    }\r\n    \r\n    console.log('buttons: ', headers);\r\n    // let menu = null;\r\n    // let menu = \r\n\r\n    return (\r\n        // <View>\r\n        //     <View style={{flexDirection: 'row', marginVertical: 5}}>\r\n        //         {headers.map((header, ndx) => {\r\n        //             // <Button primary text=\"Primary\" />\r\n        //             if(header != 'More'){\r\n                        \r\n        //                 return <Button key={ndx} upperCase={false} style={{container: {}, text: {fontSize: 15}}} raised={raised} primary text={header} onPress={()=>{onChangeTab(header)}} />\r\n        //                 // return <Button style={{touchable: {marginRight: 20}, text: {fontSize: 15, fontWeight: '100', color: COLOR.blueGrey300, paddingVertical: 10}}} raised={raised} primary text={header} onPress={()=>{onChangeTab(header)}} />\r\n        //             }else{\r\n        //                 return <Button key={ndx} upperCase={false} style={{container: {marginRight: 5}, text: {fontSize: 15}}} raised={raised} primary text='More' onPress={()=>openMoreOptionsModal(moreTabs, openMoreTab)} />    \r\n        //             }\r\n                    \r\n                    \r\n                    \r\n                    \r\n        //         })} \r\n        //     </View>\r\n               \r\n        //     {/* {moreTabsComponent} */}\r\n        // </View>\r\n        <div className='d-flex' style={{justifyContent: 'flex-end'}}>\r\n            {headers.map((header, ndx) => {\r\n                // <Button primary text=\"Primary\" />\r\n                if(header != 'More'){\r\n                    \r\n                    // return <Button key={ndx} variant=\"contained\" onClick={()=>{onChangeTab(header)}}>{header}</Button>\r\n                    return <Link style={styles.link} key={ndx} className='ml-5' variant=\"contained\" onClick={(e)=>{onClickLink(e, header)}}>{header}</Link>;\r\n                    // return <Button style={{touchable: {marginRight: 20}, text: {fontSize: 15, fontWeight: '100', color: COLOR.blueGrey300, paddingVertical: 10}}} raised={raised} primary text={header} onPress={()=>{onChangeTab(header)}} />\r\n                }else{\r\n                    // return <Button variant=\"contained\" onClick={()=>{onChangeTab(header)}}>Login</Button>\r\n                    return <div style={{position: 'relative'}}>\r\n                        {/* <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>More</Button> */}\r\n                        {/* <Link key={ndx} variant=\"contained\" className='ml-5' onClick={(e)=>{onClickMoreLink(e)}}>{moreLabel}</Link> */}\r\n                        <Link style={styles.link} key={ndx} variant=\"contained\" className='ml-5' onClick={(e)=>{onClickMoreLink(e)}}>{moreLabel}</Link>\r\n                        {/* {moreTabsComponent} */}\r\n                        {/* <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {moreTabs.map((moreTab) => {\r\n                                \r\n                                return <MenuItem onClick={()=>onMenuClicked(moreTab)}>{moreTab}</MenuItem>\r\n                                \r\n                                \r\n                                \r\n                            })} \r\n                            \r\n                            \r\n                        </Menu> */}\r\n                    </div>\r\n                        \r\n                }\r\n                \r\n                \r\n                \r\n                \r\n            })}\r\n            \r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nconst styles = {\r\n    link: {\r\n        fontWeight: 500\r\n    }\r\n}","import React, {useState, useContext, forwardRef, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\n\r\nexport default function PageNav({isForward, onChangeStartPt}) {\r\n    console.log('PAGE NAV5');\r\n    const {globals, funcDelayer, openStartPtModal} = useContext(GlobalContext);\r\n    const [timeOutID, setTimeOutID] = useState(0);\r\n    // const [counter, setCounter] = useState(0);\r\n    // const [navInitiated, setNavInitiated] = useState(false);\r\n    // const [fromModal, setFromModal] = useState(false);\r\n    const [startPt, setStartPt] = useState(0);\r\n    // let timeOutID = 0;\r\n    // let fromModal = false;\r\n    // console.log('timeOut id: ', timeOutID);\r\n    // console.log('counter: ', counter);\r\n    // useEffect(() => {\r\n    //     // console.log('Do something after counter has changed', counter);\r\n    //     // timeOutID = funcDelayer(timeOutID, getItems, 1);\r\n    //     console.log('from modal: ', fromModal);\r\n    //     console.log('from modal: ', fromModal);\r\n    //     // getItems();\r\n    //     if(navInitiated){\r\n    //         if(!fromModal){\r\n    //             setTimeOutID(funcDelayer(timeOutID, getItems, 0));\r\n    //         }else{\r\n    //             getItems();\r\n    //             setFromModal(false);   \r\n    //         }\r\n    //     }\r\n        \r\n        \r\n    //     // setCounter(counter + 1);\r\n        \r\n    // }, [startPt]);\r\n\r\n    // useEffect(() => {\r\n    //     // console.log('Do something after counter has changed', counter);\r\n    //     // timeOutID = funcDelayer(timeOutID, getItems, 1);\r\n        \r\n    //     // timeOutID ++;  \r\n        \r\n    //     setNavInitiated(true)\r\n    // }, []);\r\n    console.log('start pt page nav: ', startPt);\r\n    function changeStartPt(value){\r\n        console.log('value: ', value);\r\n        // let value2 = parseInt(value);\r\n        // console.log('value2: ', value2);\r\n        // setFromModal(true);\r\n        let valFin = getMin(value);\r\n        setStartPt(valFin);\r\n        onChangeStartPt(valFin);\r\n        // getItems();\r\n        // timeOutID = funcDelayer(timeOutID, function(){\r\n        //     console.log('change start pt');\r\n            \r\n        // }, 5000);\r\n        \r\n        // getItems();\r\n    }\r\n\r\n    // function returnVal(value){\r\n    //     console.log('value: ', value);\r\n    //     // let value2 = parseInt(value);\r\n    //     // console.log('value2: ', value2);\r\n    //     onChangeStartPt(value);\r\n    //     // getItems();\r\n    //     // timeOutID = funcDelayer(timeOutID, function(){\r\n    //     //     console.log('change start pt');\r\n            \r\n    //     // }, 5000);\r\n        \r\n    //     // getItems();\r\n    // }\r\n\r\n    function addStartPt(sign){\r\n        \r\n        let value = startPt;\r\n        if(sign == 'minus'){\r\n            value = value - globals.numOfItems;\r\n        }else{\r\n            value = value + globals.numOfItems;\r\n        }\r\n\r\n        let valFin = getMin(value);\r\n        // setStartPt(5);\r\n        setStartPt(valFin);\r\n        setTimeOutID(funcDelayer(timeOutID, () => {\r\n            onChangeStartPt(valFin);\r\n        }, 0));\r\n        // getItems();\r\n        // getItems();\r\n    }\r\n\r\n    function getMin(value){\r\n        console.log('get min');\r\n        \r\n        // if(isNaN(value)){\r\n            \r\n        //     value = 0;   \r\n        // }else{\r\n            \r\n        // }\r\n        \r\n        if(isForward){\r\n            if(value < 0){\r\n                value = 0;    \r\n            }   \r\n        }else{\r\n            if(value > 0){\r\n                value = 0;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    \r\n\r\n    \r\n    \r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        \r\n        <div style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            \r\n            <Link style={styles.link} className='mr-5' href=\"#\" onClick={(e)=>{e.preventDefault(); openStartPtModal(startPt, changeStartPt)}}>{startPt}</Link> \r\n            <Link style={styles.link} className='mr-5' href=\"#\" onClick={(e)=>{e.preventDefault(); addStartPt('minus')}}>Prev</Link> \r\n            <Link style={styles.link} href=\"#\" onClick={(e)=>{e.preventDefault(); addStartPt('plus')}}>Next</Link>      \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nconst styles = {\r\n    link: {\r\n        fontWeight: 500\r\n    }\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\n// import {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\nimport UserLink from './UserLink';\r\n\r\n\r\nexport default function SiteSpan({username}) {\r\n\tconsole.log('LIST')\r\n    \r\n\r\n    return (\r\n        <div className='d-flex'>\r\n            <span className='mr-2'>Site:</span><UserLink verified={0} username={username} />\r\n        </div>\r\n        \r\n        // <Text onPress={()=>showOtherUser(username)} style={{...style, color: 'blue', fontWeight: 'bold'}}>@{username}</Text>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport InsidePageWrapper from '../HtmlComponents/InsidePageWrapper';\r\n\r\n\r\n// import Tab from '../HtmlComponents/Tab';\r\nimport UserInfoDiv from '../HtmlComponents/UserInfoDiv';\r\n\r\nexport default function DetailsDiv({info, imgPathBegin, photoPassword}) {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, apiCall, createUserInfo} = useContext(GlobalContext);\r\n    console.log('info: ', info);\r\n    const [tab, setTab] = useState(true);\r\n    \r\n    // const {userInfo, companyInfo, imgPathBegin, photoPassword} = singleModalData.data;\r\n    // const [postInputs, setPostInputs] = useState({\r\n    //     post: singleModalData.data.post,\r\n        \r\n    // });\r\n    \r\n    // var startPoint = 0\r\n    // let userInfo = {\r\n    //     username: info.username,\r\n    //     rating: info.rating,\r\n    //     ratingVerified: info.ratingverified,\r\n    //     numOfRaters: info.numofraters,\r\n    //     numOfRatersVerified: info.numofratersverified,\r\n    //     imgURL: info.imgurl,\r\n    //     name: info.name,\r\n    //     description: info.description,\r\n    //     verifiedUser: info.verifieduser\r\n    // }\r\n    let userInfo = createUserInfo(info, false);\r\n    let companyInfo = createUserInfo(info, true);\r\n    // let companyInfo = {\r\n    //     username: info.companyusername,\r\n    //     rating: info.companyrating,\r\n    //     ratingVerified: info.companyratingverified,\r\n    //     numOfRaters: info.companynumofraters,\r\n    //     numOfRatersVerified: info.companynumofratersverified, \r\n    //     imgURL: info.companyimgurl,\r\n    //     name: info.companyname,\r\n    //     description: info.companydescription,\r\n    //     verifiedUser: 0\r\n    // }\r\n\r\n    \r\n    let infoFinal = userInfo;\r\n\r\n    if(tab == 'Company'){\r\n        infoFinal = companyInfo;\r\n    }\r\n\r\n    let tabs = ['User'];\r\n    let companyDiv = null;\r\n    if(info.companyusername != null){\r\n        tabs.push('Company');\r\n        companyDiv = <div>\r\n            <h6 className='mt-2'>Company</h6>\r\n            <UserInfoDiv userInfo = {companyInfo} imgPathBegin = {imgPathBegin} photoPassword={photoPassword} />    \r\n        </div>\r\n    }\r\n    // function onButtonsPressed(){\r\n\r\n    // }\r\n\r\n    \r\n    \r\n    return (\r\n        // <div>\r\n            \r\n        //     <InsidePageWrapper onChangeTab={(tab)=>setTab(tab)} tabs={tabs}>\r\n        //         <div className='py-2'>\r\n        //             <UserInfoDiv userInfo = {infoFinal} imgPathBegin = {imgPathBegin} photoPassword={photoPassword} />\r\n        //         </div>\r\n                \r\n        //     </InsidePageWrapper>\r\n            \r\n            \r\n                \r\n            \r\n            \r\n        // </div>\r\n        <div className='d-flex flex-column py-2'>\r\n            {/* <h6>User</h6> */}\r\n            <UserInfoDiv userInfo = {userInfo} imgPathBegin = {imgPathBegin} photoPassword={photoPassword} />    \r\n            {companyDiv}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport UserImg from '../Components/UserImg';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport Tab from '../HtmlComponents/Tab';\r\nimport {Link, IconButton, Card, Paper} from '@material-ui/core';\r\nimport PageNav from '../Components/PageNav';\r\nimport PostList2 from './PostList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport UserMoreInfo from '../HtmlComponents/UserMoreInfo';\r\nimport ExpandableDiv from '../HtmlComponents/ExpandableDiv';\r\nimport SiteSpan from '../HtmlComponents/SiteSpan';\r\nimport DetailsDiv from '../Components/DetailsDiv';\r\n// import {Button, TextField, IconButton} from '@material-ui/core';\r\n\r\nexport default function PostList({ post, sequence, isAsc, sortType }) {\r\n    console.log('ITEM LIST')\r\n    console.log('post: ', post);\r\n    const { userData, globals, showOtherUser, openSingleModal, getOrder, openYesNoModal, convertTextToObj, dateToStr, apiCall, showToast } = useContext(GlobalContext);\r\n    // const [replyData, setReplyData] = useState({\r\n    //     showingReplies: false\r\n    // });\r\n    console.log('isAsc: ', isAsc);\r\n    const [pageInitiated, setPageInitiated] = useState(false);\r\n    const [showingReplies, setShowingReplies] = useState(false);\r\n    const [replies, setReplies] = useState([]);\r\n    const [startPt, setStartPt] = useState(0);\r\n    const [counter, setCounter] = useState(0);\r\n    const [showingOtherPost, setShowingOtherPost] = useState(false);\r\n    const [replyOptions, setReplyOptions] = useState({\r\n        isAsc: isAsc,\r\n        \r\n        sortType: sortType\r\n        \r\n    })\r\n    console.log('reply options: ', replyOptions);\r\n    let fromUser = false;\r\n    if(userData.userID == post.creator){\r\n        fromUser = true;\r\n    }\r\n\r\n    function setOptionsReply(options){\r\n        // console.log('showingReplies: ', showingReplies);\r\n        console.log('set options options: ', options);\r\n        setReplyOptions({\r\n            \r\n            isAsc: options.isAsc,\r\n            \r\n            sortType: options.sortType\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    let wordsObjArr = convertTextToObj(post.post);\r\n    let postPar = <p style={{fontSize: 14}} className='py-2 m-0'>\r\n        {wordsObjArr.map((word, ndx) => {\r\n            if(word.obj == 'text'){\r\n                return word.text;   \r\n            }else{\r\n                if(word.obj == 'userLink'){\r\n                    return <UserLink username={word.text} />      \r\n                    \r\n                }else{\r\n                    return <Link target=\"_blank\" href={word.text}>{word.text}</Link>     \r\n                    \r\n                }\r\n                \r\n            }\r\n            \r\n            \r\n            \r\n        })}       \r\n    </p>\r\n\r\n    let imgPathBegin = globals.varNames.imgPathBlags;\r\n    let photoPassword = userData.sosyalData.photoPassword;\r\n    let details = <div>\r\n        {postPar}\r\n        <DetailsDiv info={post} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />\r\n    </div>\r\n    \r\n\r\n    function onButtonsPressed(button){\r\n        // e.preventDefault();\r\n        console.log('on buttons pressed ')\r\n        console.log('button: ', button);\r\n        if(button == 'Reply'){\r\n            openSingleModal('New Post', {replyID: post.id, post: '', tags: JSON.stringify([]), blogID: 0, bidAmt: 0, siteID: post.siteid});\r\n        }else if(button == 'Show'){\r\n            // setReplyData({...replyData, showingReplies: true});\r\n            console.log('post:  ', post);\r\n            // getReplies(post.id, post.sequence); \r\n            getReplies(); \r\n        }else if(button == 'Hide'){\r\n            // setReplyData({...replyData, showingReplies: false});\r\n            setShowingReplies(false);\r\n            setShowingOtherPost(false);\r\n            // getPostsBySequence(post.sequence); \r\n        }else if(button == 'Edit'){\r\n            // setReplyData({...replyData, showingReplies: false});\r\n            // getReplies(post.id); \r\n            openSingleModal('New Post', {replyID: 0, post: post.post, tags: post.tags, blogID: post.id, bidAmt: post.bidamt});\r\n        }else if(button == 'Delete'){\r\n            openYesNoModal('Delete post?', deletePost);\r\n            // cancelHire();\r\n        }else if(button == 'More Info'){\r\n            // info, imgPathBegin, photoPassword\r\n            openSingleModal('Details', {div: details});\r\n            // cancelHire();\r\n        }else if(button == 'Bid'){\r\n            openSingleModal('Bid', {bidAmt: post.bidamt, itemName: 'Post', id: post.id, bidBal: post.bidbal});\r\n            // cancelHire();\r\n        }\r\n        \r\n    }\r\n\r\n    // const preventDefault = (event) => event.preventDefault();\r\n\r\n\r\n    async function deletePost(){\r\n        let data = {\r\n           \r\n            blogID: post.id   \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'blog/deleteBlog', data);\r\n         \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Post deleted successfully.', 5);\r\n        }    \r\n    }\r\n\r\n    async function getReplies(){\r\n        console.log('get replies');\r\n        // startPoint: req.body.startPoint,\r\n        // sortBy: req.body.sortBy,\r\n        // replyID: req.body.replyID\r\n        \r\n        var data = {\r\n            startPoint: startPt,\r\n            sortBy: replyOptions.sortType,\r\n            replyID: post.id,\r\n            isAsc: getOrder(replyOptions.isAsc)\r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'blog/showReplies', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // setMsgsData({...msgsData, msgs: response.payload});\r\n            // response.payload.forEach((post) => {\r\n            //     initPost(post, post.sequence);\r\n            // })\r\n            setReplies(response.payload);\r\n            setShowingReplies(true);\r\n            setCounter(counter + 1);\r\n            // post.replies = response.payload;\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    let bgNum = sequence % 10;\r\n    \r\n    \r\n    // console.log('wordsObjArr: ', wordsObjArr);\r\n    // console.log('post: ', post);\r\n\r\n    let url = 'http';\r\n    if(post.imgurl != ''){\r\n        url = globals.varNames.imgPathBlags + post.imgurl + '/' + userData.userID + '/' + userData.sosyalData.photoPassword\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n    \r\n    let card = null; \r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getReplies();\r\n        }\r\n        \r\n        console.log('reply options: ', replyOptions);\r\n        \r\n        // setPageInitiated(true);\r\n    }, [replyOptions]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getReplies();\r\n        }\r\n        \r\n        console.log('reply options: ', replyOptions);\r\n        \r\n        // setPageInitiated(true);\r\n    }, [startPt]);\r\n\r\n    useEffect(() => {\r\n        \r\n        setPageInitiated(true);\r\n    }, []);\r\n\r\n    let btns = ['Reply', 'Show', 'More Info'];\r\n    if(showingReplies){\r\n        btns = ['Reply', 'Hide', 'More Info'];  \r\n    }\r\n\r\n    let moreBtns = [];\r\n    if(fromUser){\r\n        moreBtns = ['Edit', 'Delete', 'Bid', 'More Info'];\r\n        btns.splice(2, 1);\r\n        btns.push('More');\r\n    }\r\n\r\n    let pFontSize = 14;\r\n\r\n    let postDiv = <div>\r\n        <div  className='d-flex border-bottom py-2'>\r\n            <UserImg imgPathBegin={globals.varNames.imgPathBlags} imgURL={post.imgurl} userID={userData.userID} photoPassword={userData.sosyalData.photoPassword} />\r\n            <div style={{flex: 1}} className='d-flex flex-column ml-2 pl-2 border-left'>\r\n                <div style={{justifyContent: 'space-between'}} className='d-flex'>\r\n                    \r\n                    <UserLink verified={post.verifieduser} username={post.username} />\r\n                    \r\n                    <span style={styles.idSpans}>{post.id}</span>\r\n                </div>\r\n                <div style={{justifyContent: 'space-between'}} className='d-flex'>\r\n                    \r\n                    <span className='d-flex m-0 mr-2'>{post.name}</span>\r\n                    \r\n                    <span style={styles.idSpans}>{dateToStr(post.lastupdate)}</span>\r\n                </div>\r\n                \r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        <div className='d-flex flex-column border-bottom'>\r\n            <div className='d-flex flex-column'>\r\n                <p style={{fontSize: pFontSize}} className='py-2 m-0'>\r\n                    {wordsObjArr.map((word, ndx) => {\r\n                        if(word.obj == 'text'){\r\n                            return word.text;   \r\n                        }else{\r\n                            if(word.obj == 'userLink'){\r\n                                return <UserLink verified={0} fontSize={pFontSize} username={word.text} />      \r\n                                \r\n                            }else{\r\n                                return <Link target=\"_blank\" href={word.text}>{word.text}</Link>     \r\n                                \r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                        \r\n                        \r\n                    })}       \r\n                </p> \r\n                <div className='d-flex flex-column'>\r\n                    \r\n                    \r\n                    {/* <UserMoreInfo user={post} isSosyal={true} /> */}\r\n                    <SiteSpan username={post.siteusername} />\r\n                    \r\n                    \r\n                </div>   \r\n            </div>\r\n                   \r\n        </div>\r\n        \r\n        \r\n        <div style={{borderLeftWidth: 5, borderLeftStyle: 'solid', justifyContent: 'space-between'}} className={'d-flex px-2 mt-2 b-' + bgNum}>\r\n            <span style={styles.idSpans}>{sequence}</span>\r\n            \r\n            <Tab headers={btns} onChangeTab={onButtonsPressed} moreTabs={moreBtns} />\r\n            \r\n        </div>   \r\n    </div>\r\n\r\n    let borderTop = '';\r\n    let repliesDiv = null;\r\n    \r\n\r\n    let otherPostDiv = null;\r\n    \r\n    if(showingOtherPost){\r\n        otherPostDiv = postDiv;  \r\n        borderTop = ' border-top mt-2'\r\n    }\r\n\r\n    if(showingReplies){\r\n        // btns = ['Reply', 'Hide'];\r\n        \r\n        repliesDiv = <div>\r\n            <div>\r\n                {replies.map((reply, ndx) => {\r\n                    return (\r\n                    \r\n                        \r\n                        <PostList2 isAsc={replyOptions.isAsc} sortType={replyOptions.sortType} sequence={sequence + 1} getOrder={getOrder} getReplies={getReplies} post={reply} key={reply.id + '_' + (sequence + 1) + '_' + counter}/>\r\n                    )\r\n                    \r\n                })}\r\n                \r\n            </div>\r\n            \r\n            <Paper elevation={2} className={'d-flex flex-column px-2'}>\r\n                {otherPostDiv}\r\n                <div className={'d-flex' + borderTop}>\r\n                    <div style={{borderLeftWidth: 5, borderLeftStyle: 'solid'}} className={'d-flex px-2 my-1 b-' + bgNum}>\r\n                        <span style={styles.idSpans}>{sequence}</span>\r\n                        <IconButton className='p-0' onClick={()=>openSingleModal('Post Options', {searchOptions: replyOptions, setSearchOptions: setOptionsReply, isRepliesOption: true})} aria-label=\"menu\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div style={{justifyContent: 'flex-end', flex: 1}} className='d-flex py-1'>\r\n                        <PageNav onChangeStartPt={setStartPt} isForward={true}/>\r\n                        <Link style={styles.idSpans} className='ml-5 ' href=\"#\" onClick={(e)=>{e.preventDefault(); setShowingOtherPost(!showingOtherPost)}}>{post.id}</Link>\r\n                        {/* <div className='d-flex py-1'>\r\n                            \r\n                            \r\n                            \r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n                \r\n            </Paper>\r\n               \r\n        </div> \r\n    }\r\n\r\n    \r\n\r\n    \r\n    // if(userData.userID != post.creator){\r\n    //     btns.splice(2, 1);\r\n    // }\r\n    \r\n    \r\n    return (\r\n        <div className='mb-2'>\r\n            <Paper elevation={2} className='mb-3 px-2 pb-2'>\r\n                {postDiv}\r\n                {/* <div  className='d-flex border-bottom py-2'>\r\n                    <UserImg imgPathBegin={globals.varNames.imgPathBlags} imgURL={post.imgurl} userID={userData.userID} photoPassword={userData.sosyalData.photoPassword} />\r\n                    <div style={{flex: 1}} className='d-flex flex-column ml-2 pl-2 border-left'>\r\n                        <div style={{justifyContent: 'space-between'}} className='d-flex'>\r\n                            <UserLink username={post.username} />\r\n                            <span style={{fontSize: 12}}>{post.id}</span>\r\n                        </div>\r\n                        \r\n                        <span style={{fontSize: 12}}>{dateToStr(post.lastupdate)}</span>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <p style={{fontSize: 14}} className='border-bottom py-2 m-0'>\r\n                    {wordsObjArr.map((word, ndx) => {\r\n                        if(word.obj == 'text'){\r\n                            return word.text;   \r\n                        }else{\r\n                            if(word.obj == 'userLink'){\r\n                                return <UserLink username={word.text} />      \r\n                                \r\n                            }else{\r\n                                return <Link target=\"_blank\" href={word.text}>{word.text}</Link>     \r\n                                \r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                        \r\n                        \r\n                    })}       \r\n                </p>\r\n                \r\n                <div style={{borderLeftWidth: 5, borderLeftStyle: 'solid'}} className={'d-flex px-2 mt-2 b-' + bgNum}>\r\n                    <span>{sequence}</span>\r\n                    \r\n                    <Tab headers={btns} onChangeTab={onButtonsPressed} moreTabs={moreBtns} />\r\n                    \r\n                </div> */}\r\n                \r\n                {/* <h6>{JSON.stringify(post)}</h6> */}\r\n            </Paper>\r\n\r\n            {repliesDiv}\r\n            \r\n        </div>   \r\n    );\r\n}\r\n\r\nconst styles = {\r\n    idSpans: {\r\n        fontSize: 15\r\n    }\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\n// import PageNav from './PageNav';\r\nimport PostsPicker from './PostsPicker';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {Button, TextField, IconButton} from '@material-ui/core';\r\nimport PostList from '../List/PostList';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nexport default function PostsDiv({userViewedID, isProfilePage, isPostResult, postResult}) {\r\n    console.log('MESSAGE HEADERS');\r\n    // console.log('post result: ', postResult);\r\n    // console.log('post result: ', postResult);\r\n    const {userData, appData, globals, apiCall, openSingleModal, getSiteID, funcDelayer, showPageNav, closePageNav} = useContext(GlobalContext);\r\n    const [startPt, setStartPt] = useState(0);\r\n    const [startPtSequence, setStartPtSequence] = useState(0);\r\n    const [counter, setCounter] = useState(0);\r\n    // const [timeoutID, setTimeoutID] = useState(true);\r\n    const [pageInitiated, setPageInitiated] = useState(false);\r\n    let timeoutID = 0;\r\n    // let postsInit = [];\r\n    \r\n    \r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    const [postOptions, setPostOptions] = useState({\r\n        isAsc: false,\r\n        isReplies: false,\r\n        sortType: 'Last Update',\r\n        isTagsTab: true,\r\n        allSite: false\r\n    })\r\n\r\n    let siteID = getSiteID();\r\n    \r\n    \r\n\r\n    function getSiteIDFinal(){\r\n        let siteIDFinal = 0;\r\n        if(!postOptions.allSite){\r\n            siteIDFinal = siteID;\r\n        } \r\n        \r\n        return siteIDFinal;\r\n    }\r\n\r\n    function setOptions(options){\r\n        // console.log('showingReplies: ', showingReplies);\r\n        console.log('set options options: ', options);\r\n        setPostOptions({\r\n            \r\n            isAsc: options.isAsc,\r\n            isReplies: options.isReplies,\r\n            sortType: options.sortType,\r\n            isTagsTab: options.isTagsTab,\r\n            allSite: options.allSite\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    function getPosts(){\r\n        // console.log('showingReplies: ', showingReplies);\r\n        // funcDelayer()\r\n        getBlogs();\r\n        // if(postsData.showingReplies){\r\n        //     getReplies(postsData.latestReplyID, postsData.latestSequence - 1);\r\n        // }else{\r\n            \r\n        // }\r\n    }\r\n\r\n    \r\n\r\n    async function getBlogs(){\r\n        \r\n        // if(isPostResult){\r\n        //     return;\r\n        // }\r\n\r\n        if(isProfilePage){\r\n            getProfileBlogs();\r\n        }else{\r\n            getHomeBlogs();\r\n        }\r\n        setCounter(counter + 1);\r\n        // setStartPtSequence(0);\r\n        // resetPostsData();\r\n    }\r\n\r\n    async function getProfileBlogs(){\r\n        // let tab = 'TAGS';\r\n        // if(isTagsTab){\r\n        //     tab = 'USER';\r\n        // }\r\n        \r\n        let data = {\r\n            userViewedID: userViewedID,\r\n            sortBy: postOptions.sortType,\r\n            startPoint: startPt,\r\n            tab: getTab(),\r\n            siteID: getSiteIDFinal(),\r\n            replyID: 0,\r\n            isReplies: getIsReplies(),\r\n            isAsc: getOrder(postOptions.isAsc)\r\n            \r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'blog/getProfileBlogs', data);\r\n        if(response.status == 1){\r\n            // setMsgsData({...msgsData, msgs: response.payload});\r\n            // clearPosts(0);\r\n            // response.payload.forEach((post) => {\r\n            //     initPost(post, 0);\r\n            // })\r\n\r\n            setPosts(response.payload)\r\n            \r\n        }\r\n    }\r\n\r\n    async function getHomeBlogs(){\r\n        // if(pageInitiated)\r\n        // let tab = 'TAGS';\r\n        // if(isTagsTab){\r\n        //     tab = 'USER';\r\n        // }\r\n        console.log('get home blogs');\r\n        \r\n        var data = {\r\n            sortBy: postOptions.sortType,\r\n            startPoint: startPt,\r\n            tab: getTab(),\r\n            siteID: getSiteIDFinal(),\r\n            replyID: 0,\r\n            isReplies: getIsReplies(),\r\n            isAsc: getOrder(postOptions.isAsc)\r\n        }\r\n\r\n        console.log('get home blogs data: ', data);\r\n        console.log('post options: ', postOptions);\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'blog/getHomeBlogs', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // setMsgsData({...msgsData, msgs: response.payload});\r\n            // clearPosts(0);\r\n            // response.payload.forEach((post) => {\r\n            //     initPost(post, 0);\r\n            // })\r\n            \r\n            setPosts(response.payload)\r\n        }\r\n    }\r\n\r\n    function getTab(){\r\n        let tab = 'USER';\r\n        if(postOptions.isTagsTab){\r\n            tab = 'TAGS';\r\n        }\r\n        \r\n        \r\n        return tab;\r\n    }\r\n\r\n    function getOrder(isAsc){\r\n        let order = 0;\r\n        if(isAsc){\r\n            order = 1;\r\n        }\r\n        \r\n        \r\n        return order;\r\n    }\r\n\r\n    function getIsReplies(){\r\n        let isReply = 0;\r\n        if(postOptions.isReplies){\r\n            isReply = 1;\r\n        }\r\n        \r\n        \r\n        return isReply;\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        showPageNav(setStartPt);\r\n        \r\n        \r\n        \r\n        getBlogs();\r\n        // if(isPostResult){\r\n        \r\n            \r\n        //     setPosts([postResult]);\r\n        //     // postsInit = [postResult];\r\n        // }\r\n        setPageInitiated(true);\r\n        return closePageNav\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getBlogs();\r\n        }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [postOptions]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getBlogs();\r\n        }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [startPt]);\r\n\r\n    // let pageNav = <PageNav startPt={startPt} getItems={getPosts} setStartPt={setStartPt} isForward={true}/>   ;\r\n    let btns = <div style={{justifyContent: 'space-between'}} className='d-flex mb-1'>\r\n        <Button variant=\"contained\" onClick={()=>openSingleModal('New Post', {replyID: 0, post: '', tags: JSON.stringify([]), blogID: 0, bidAmt: 0})}>New</Button>\r\n        \r\n        \r\n        <IconButton className='p-0' onClick={()=>openSingleModal('Post Options', {searchOptions: postOptions, setSearchOptions: setOptions, isRepliesOption: false})} aria-label=\"menu\">\r\n            <MoreVertIcon />\r\n        </IconButton> \r\n        \r\n    </div>;\r\n\r\n    // if(isPostResult){\r\n    //     // pageNav = null;\r\n    //     btns = null;\r\n    // }\r\n    \r\n    \r\n    return (\r\n        \r\n\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-2 mt-1'>\r\n            {btns}\r\n            <div className='px-1' style={{flex: 1, overflow: 'auto'}}>\r\n                {posts.map((post, ndx) => {\r\n                    return (\r\n                    \r\n                        \r\n                        <PostList isAsc={postOptions.isAsc} sortType={postOptions.sortType} sequence={1} getOrder={getOrder} post={post} key={post.id + '_' + 1 + '_' + counter}/>\r\n                    )\r\n                    \r\n                })}\r\n                \r\n            </div>\r\n            {/* {pageNav} */}\r\n               \r\n        </div>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n// import {GlobalContext} from '../../Context/GlobalProvider';\r\nimport ProfileDiv from '../Components/ProfileDiv';\r\nimport {Button, Tabs, Tab, Paper} from '@material-ui/core';\r\nimport InsidePageWrapper from '../HtmlComponents/InsidePageWrapper';\r\nimport Reviews from '../Components/Reviews';\r\n// import EditUser from '../Components/EditUser';\r\nimport PostsDiv from '../Components/PostsDiv';\r\n\r\n// // import { Container, Header, Content, Button, Text, Input, Item, Tab, Tabs, TabHeading, Icon } from 'native-base';\r\n// import Tab from '../HtmlComponents/Tab';\r\nexport default function ProfilePage() {\r\n    const {userData, updateUserData, globals, apiCall, changePage, countries, openSingleModal} = useContext(GlobalContext);\r\n    // const {updateUserData} = useContext(GlobalContext);\r\n    \r\n    const [gotUserData, setGotUserData] = useState(false);\r\n    \r\n    const [tab, setTab] = useState('Profile');\r\n    \r\n    let profile = {\r\n        userID: userData.userID,\r\n        imgURL: userData.imgURL,\r\n        imgPath: globals.varNames.imgPath,\r\n        profileImgUrl: globals.varNames.imgPath + userData.imgURL + '/' + userData.userID + '/' + userData.photoPassword,\r\n        username: userData.username,\r\n        name: userData.name,\r\n        description: userData.description,\r\n        country: countries[userData.country],\r\n        rate: userData.rating,\r\n        numOfRaters: userData.numOfRaters,\r\n        rateVerified: userData.ratingVerified,\r\n        numOfRatersVerified: userData.numOfRatersVerified,\r\n        isSosyal: userData.isSosyal,\r\n        photoPassword: userData.photoPassword,\r\n        bidBal: userData.bidBal,\r\n        bidAmt: userData.bidAmt,\r\n        company: userData.company,\r\n        verifiedUser: userData.verifiedUser\r\n    }\r\n\r\n    let bidName = 'User';\r\n    \r\n    if(userData.isSosyal){\r\n        console.log('user data: ', userData);\r\n        profile = {\r\n            userID: userData.userID,\r\n            imgURL: userData.sosyalData.imgURL,\r\n            imgPath: globals.varNames.imgPathBlags,\r\n            profileImgUrl: globals.varNames.imgPathBlags + userData.sosyalData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword,\r\n            username: userData.username,\r\n            name: userData.sosyalData.name,\r\n            description: userData.sosyalData.description,\r\n            country: countries[userData.sosyalData.country],\r\n            rate: userData.sosyalData.rating,\r\n            numOfRaters: userData.sosyalData.numOfRaters,\r\n            rateVerified: userData.sosyalData.ratingVerified,\r\n            numOfRatersVerified: userData.sosyalData.numOfRatersVerified,\r\n            isSosyal: userData.isSosyal,\r\n            photoPassword: userData.sosyalData.photoPassword,\r\n            bidBal: userData.sosyalData.bidBal,\r\n            bidAmt: userData.sosyalData.bidAmt,\r\n            company: userData.sosyalData.company,\r\n            verifiedUser: userData.sosyalData.verifiedUser\r\n        }  \r\n        \r\n        bidName = 'User Sosyal';\r\n    }\r\n    \r\n    // function getProfileDatas(){\r\n    //     getUserData(userData.token);\r\n    //     // setGotUserData(true);\r\n    // }\r\n    const [value, setValue] = useState(2);\r\n\r\n    function onChangeTab(value){\r\n        console.log('value: ', value);\r\n        if(value != 'Edit' && value != 'Bid'){\r\n            setTab(value);\r\n        }else{\r\n            if(value == 'Edit'){\r\n                changePage('Edit Profile');\r\n        //         <Button size='small' className='mr-1' variant=\"contained\" onClick={()=>changePage('Edit Profile')}>Edit</Button>\r\n        // <Button size='small' variant=\"contained\" onClick={()=>openSingleModal('Bid', {bidAmt: profileData.bidAmt, itemName: bidName, id: profileData.userID})}>Bid</Button>\r\n            }else{\r\n                openSingleModal('Bid', {bidAmt: profile.bidAmt, itemName: bidName, id: profile.userID, bidBal: profile.bidBal})   \r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        updateUserData();\r\n        \r\n    }, []);\r\n\r\n    let page = <ProfileDiv profileData={profile} isUser={true} />;\r\n    if(tab == 'Reviews'){\r\n        // reviews, startPt, setStartPt, getReviews\r\n        page = <Reviews userData={profile} isUser={true} />;\r\n    }else if(tab == 'Posts'){\r\n        page = <PostsDiv isPostResult={false} postResult={null} isProfilePage={true} userViewedID={userData.userID} />\r\n        \r\n    }\r\n    \r\n    return (\r\n        <InsidePageWrapper onChangeTab={onChangeTab} tabs={['Profile', 'Reviews', 'More']} moreTabs={['Posts', 'Edit', 'Bid']}>\r\n            {page}\r\n        </InsidePageWrapper>\r\n        // <div style={{flex: 1}}>\r\n            \r\n            \r\n        //     <Tab headers={['Profile', 'Reviews', 'More']} moreTabs={['Items', 'Posts']} onChangeTab={(tab)=>setTab(tab)}></Tab>\r\n            \r\n        //     {page}\r\n        // </div>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\n// import { View, Image, TouchableOpacity } from 'react-native';\r\n\r\n// import { Divider } from 'react-native-material-ui';\r\n// import { Avatar, Accessory } from 'react-native-elements';\r\n// import { Container, Header, Content, Button, Text, Input, Item, Card, CardItem } from 'native-base';\r\n// import ListCard from '../HtmlComponents/ListCard';\r\nimport UserImg from '../Components/UserImg';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport SiteSpan from '../HtmlComponents/SiteSpan';\r\n\r\nexport default function MsgHeaderList({ msgHeader, onPressHeader }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, dateToStr, showOtherUser, convertTextToObj } = useContext(GlobalContext);\r\n    \r\n    let headerName = msgHeader.sendername;\r\n    let imgURL = msgHeader.senderimg;\r\n\r\n    if(userData.userID == msgHeader.sender){\r\n        headerName = msgHeader.receivername;\r\n        imgURL= msgHeader.receiverimg;\r\n    }\r\n\r\n    \r\n    let url = 'http';\r\n    if(imgURL != ''){\r\n        url = globals.varNames.imgPathBlags + imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword;\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n\r\n    let lastMsg = '';\r\n    if(msgHeader.message != null){\r\n        lastMsg = msgHeader.message\r\n    }\r\n    \r\n    let wordsObjArr = convertTextToObj(lastMsg);\r\n    console.log('words obj arr: ', wordsObjArr);\r\n    return (\r\n        // <ListCard buttons={[]}>\r\n            \r\n            \r\n            \r\n        //     <View>\r\n        //         <View style={{flexDirection: 'row'}}>\r\n\r\n        //             <View>\r\n                        \r\n        //                 <UserImg style={{width: 50, height: 50, backgroundColor: 'gray', alignSelf: 'center', marginRight: 5}} imgPathBegin={globals.varNames.imgPathBlags} imgURL={imgURL} userID={userData.userID} photoPassword={userData.sosyalData.photoPassword} />\r\n        //             </View>\r\n\r\n        //             <View style={{flex: 1}}>\r\n        //                 <Text style={{fontSize: 15, color: 'blue', marginBottom: 5}} onPress={()=>showOtherUser(headerName)}>@{headerName}</Text>\r\n        //                 <TouchableOpacity onPress={onPressHeader}>\r\n        //                     <View style={{flexDirection: 'row', marginBottom: 5}}>\r\n        //                         {wordsObjArr.map((word, ndx) => {\r\n        //                             if(word.obj == 'text'){\r\n        //                                 return <Text style={{fontSize: 14}} key={ndx}>{word.text}</Text>;   \r\n        //                             }else{\r\n        //                                 if(word.obj == 'userLink'){\r\n        //                                     return <Text style={{color: 'blue', fontSize: 14}} key={ndx}>{'@' + word.text}</Text>      \r\n        //                                 }else{\r\n        //                                     return <Text style={{color: 'blue', fontSize: 14}} key={ndx}>{word.text}</Text>      \r\n        //                                 }\r\n                                        \r\n        //                             }\r\n                                    \r\n                                    \r\n                                    \r\n        //                         })}\r\n                                \r\n                                \r\n        //                     </View>\r\n                            \r\n        //                     <View style={{alignSelf: 'flex-end'}}>\r\n        //                         <Text style={{fontSize: 12}}>{dateToStr(msgHeader.lastreplied)}</Text>\r\n        //                     </View>\r\n        //                 </TouchableOpacity>\r\n                        \r\n        //             </View> \r\n        //         </View>\r\n                \r\n                \r\n                \r\n        //     </View>\r\n            \r\n        //     <Text style={{fontSize: 15, color: 'blue', marginBottom: 5}} onPress={()=>showOtherUser(headerName)}>@{headerName}</Text>\r\n            \r\n            \r\n            \r\n        // </ListCard>\r\n        <Paper elevation={2} className='mb-2 d-flex p-2'>\r\n            <UserImg imgPathBegin={globals.varNames.imgPathBlags} imgURL={imgURL} userID={userData.userID} photoPassword={userData.sosyalData.photoPassword} />        \r\n            <div style={{flex: 1}} className='d-flex flex-column px-2 border-left ml-2'>\r\n                <UserLink username={headerName} verified={0} />\r\n                <div className='d-flex flex-column'>\r\n                    <p onClick={onPressHeader} style={{fontSize: 14, height: 30}} >\r\n                        {wordsObjArr.map((word, ndx) => {\r\n                            if(word.obj == 'text'){\r\n                                // return <Text style={{fontSize: 14}} key={ndx}>{word.text}</Text>;\r\n                                return word.text;   \r\n                            }else{\r\n                                if(word.obj == 'userLink'){\r\n                                    // return <Text style={{color: 'blue', fontSize: 14}} key={ndx}>{'@' + word.text}</Text>      \r\n                                    return <span>@{word.text}</span>      \r\n                                }else{\r\n                                    // return <span>{word.text}</span> \r\n                                    return <Link href=\"\">{word.text}</Link> \r\n                                    \r\n                                }\r\n                                \r\n                            }\r\n                            \r\n                            \r\n                            \r\n                        })}\r\n                    </p>\r\n                    <div className='d-flex' style={{justifyContent: 'space-between'}}>\r\n                        <SiteSpan username={msgHeader.siteusername} />\r\n                        <span style={{alignSelf: 'flex-end', fontSize: 12}}>{dateToStr(msgHeader.lastreplied)}</span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                {/* <div className='d-flex'>\r\n                    <span className='mr-2'>Site:</span><UserLink verified={0} username={msgHeader.siteusername} />\r\n                </div> */}\r\n                \r\n            </div>\r\n        </Paper>\r\n    );\r\n}","\r\nimport React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n// import { View } from 'react-native';\r\n\r\n\r\n// import PageNav from './PageNav';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\n// import { Button } from 'react-native-material-ui';\r\nimport MsgHeaderList from '../List/MsgHeaderList';\r\n\r\nexport default function MessageHeaders({onPressHeader}) {\r\n    console.log('MESSAGE HEADERS');\r\n    const {userData, globals, apiCall, messageData, closePageNav, showPageNav, getSiteID, openMsgModal, appData} = useContext(GlobalContext);\r\n    const [startPt, setStartPt] = useState(0);\r\n    const [msgHeaders, setMsgHeaders] = useState([]);\r\n    const [allSite, setAllSite] = useState(false);\r\n    const [pageInitiated, setPageInitiated] = useState(false);\r\n    \r\n    // console.log('msg headers:', messageData.msgHeaders);\r\n\r\n    async function getMsgHeaders(){\r\n        let siteID = 0;\r\n        if(!allSite){\r\n            siteID = getSiteID();\r\n        }\r\n        console.log('all site; ', allSite);\r\n        let data = {\r\n            startPoint: startPt,\r\n            siteID: siteID\r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'message/getMsgHeaders', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setMsgHeaders(response.payload);\r\n            // messageData.msgHeaders = response.payload;\r\n            // console.log('message headers: ', messageData.msgHeaders);\r\n            // forceUpdate();\r\n        }     \r\n    }\r\n\r\n    // function getHeaders(point){\r\n    //     setStartPt(point); \r\n    // }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getMsgHeaders();\r\n        }\r\n        \r\n    }, [allSite]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getMsgHeaders();\r\n        \r\n        showPageNav(setStartPt);\r\n        getMsgHeaders();\r\n        setPageInitiated(true);\r\n        return closePageNav\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getMsgHeaders();\r\n        if(pageInitiated){\r\n            getMsgHeaders();\r\n        } \r\n        \r\n    }, [startPt]);\r\n    \r\n    let allSiteLabel = appData.name;\r\n    if(userData.isSosyal){\r\n        allSiteLabel = appData.sosyalName;\r\n    }\r\n    \r\n    if(allSite){\r\n        allSiteLabel = 'All';\r\n    }\r\n    // let modal = null;\r\n    // if(newMsgModal){\r\n    //     modal = <NewMsgModal closeModal={()=>setNewMsgModal(false)}/>\r\n    // }\r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        // <View style={{flex: 1}}>\r\n        //     <View style = {{flexDirection: 'row', justifyContent: 'flex-end', marginBottom: 5}}>\r\n        //         <Button raised primary text='New' onPress={()=>openMsgModal('', '', 0, 0)} />\r\n        //         <Button raised primary text={allSiteLabel} onPress={()=>setAllSite(!allSite)} />\r\n        //     </View>\r\n            \r\n        //     <View style={{flex: 1}}>\r\n        //         {msgHeaders.map((msgHeader) => {\r\n        //             return <MsgHeaderList msgHeader={msgHeader} key={msgHeader.id} onPressHeader={() => {onPressHeader(msgHeader)}}/>\r\n                    \r\n                    \r\n        //         })}\r\n        //     </View>\r\n            \r\n            \r\n           \r\n\r\n        //     <PageNav startPt={startPt} getItems={getMsgHeaders} setStartPt={setStartPt} isForward={true}/>\r\n            \r\n        // </View>\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <div className='mb-2 d-flex' style={{justifyContent: 'flex-end'}}>\r\n                <Link className='mr-3 pt-2' href=\"#\" onClick={(e)=>{e.preventDefault(); setAllSite(!allSite)}}>{allSiteLabel}</Link>\r\n                <Button variant=\"contained\" onClick={()=>openMsgModal('', '', 0, 0)}>New</Button>\r\n                {/* <Button variant=\"contained\" onClick={()=>setAllSite(!allSite)}>{allSiteLabel}</Button> */}\r\n                \r\n            </div>\r\n            \r\n            <div className='px-1' style={{flex: 1, overflow: 'auto'}}>\r\n                {msgHeaders.map((msgHeader) => {\r\n                    return <MsgHeaderList msgHeader={msgHeader} key={msgHeader.id} onPressHeader={() => {onPressHeader(msgHeader)}}/>\r\n                    \r\n                    \r\n                })}\r\n            </div>\r\n            {/* <div style={{alignItems: 'flex-end'}} className='d-flex flex-column px-3'>\r\n                <PageNav startPt={startPt} getItems={getMsgHeaders} setStartPt={setStartPt} isForward={true}/>\r\n            </div> */}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\n// import { View, Image } from 'react-native';\r\n\r\n// import { Button, COLOR } from 'react-native-material-ui';\r\n// import { Avatar, Accessory } from 'react-native-elements';\r\n// import { Text, Input, Item, Card } from 'native-base';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport Tab from '../HtmlComponents/Tab';\r\n\r\nexport default function MsgList({ msg, msgHeader }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, dateToStr, apiCall, showToast, openMsgModal, openYesNoModal, showOtherUser, convertTextToObj } = useContext(GlobalContext);\r\n    \r\n    let senderName = msgHeader.sendername;\r\n    let imgURL = msgHeader.senderimg;\r\n    if(msg.creator == msgHeader.receiver){\r\n        senderName = msgHeader.receivername;\r\n        imgURL = msgHeader.receiverimg;\r\n    }\r\n\r\n    let msgIsFromUser = false;\r\n    if(userData.username == senderName){\r\n        msgIsFromUser = true;\r\n    }\r\n\r\n    function onButtonsPressed(button){\r\n        console.log('button: ', button);\r\n        if(button == 'Edit'){\r\n            // openSingleModal('Edit Msg', {msgID: msg.id, msg: msg.message}) \r\n            // username, msg, msgID, headerID  \r\n            openMsgModal('', msg.message, msg.id, msg.msgheader);\r\n        }else if(button == 'Delete'){\r\n            openYesNoModal('Delete this message?', deleteMsg);\r\n            \r\n            // deleteMsg();   \r\n        }\r\n    }\r\n\r\n    async function deleteMsg(){\r\n\r\n        let data = {\r\n           \r\n            msgID: msg.id   \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'message/deleteMessage', data);\r\n         \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 5);\r\n        }\r\n    }\r\n\r\n    let buttons = [];\r\n    let bgColor = 'white';\r\n    let alignSelf = 'flex-start';\r\n    if(msgIsFromUser){\r\n        bgColor = 'blue';\r\n        buttons = ['Edit', 'Delete'];\r\n        alignSelf = 'flex-end';\r\n    }\r\n\r\n    // let url = 'http';\r\n    // if(imgURL != ''){\r\n    //     url = globals.varNames.imgPathBlags + imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword\r\n    //     // url = profileData.profileImgUrl;\r\n    // }\r\n\r\n    let wordsObjArr = convertTextToObj(msg.message);\r\n\r\n    return (\r\n        // <ListCard style={{backgroundColor: bgColor}} buttons={buttons} onButtonsPressed={onButtonsPressed}>\r\n           \r\n        //     <View style={{flexDirection: 'row'}}>\r\n                \r\n        //         <View style={{flex: 1}}>\r\n        //             <Text style={{fontSize: 20, color: 'blue', marginBottom: 5}} onPress={()=>showOtherUser(senderName)}>@{senderName}</Text>\r\n        //             <View style={{flexDirection: 'row'}}>\r\n        //                 {wordsObjArr.map((word, ndx) => {\r\n        //                     if(word.obj == 'text'){\r\n        //                         return <Text style={{fontSize: 14}} key={ndx}>{word.text}</Text>;    \r\n        //                     }else{\r\n        //                         if(word.obj == 'userLink'){\r\n        //                             return <Text key={ndx} style={{color: 'blue', fontSize: 14}} onPress={()=>{showOtherUser(word.text)}}>{'@' + word.text}</Text>      \r\n        //                         }else{\r\n        //                             return <Text key={ndx} style={{color: 'blue', fontSize: 14}} onPress={()=>{Linking.openURL(word.text)}}>{word.text}</Text>      \r\n        //                         }\r\n                                \r\n        //                     }\r\n                            \r\n                        \r\n                            \r\n        //                 })}\r\n        //             </View>\r\n        //             <View style={{alignItems: 'flex-end'}}>\r\n        //                 <Text style={{fontSize: 12}}>{dateToStr(msg.datecreated)}</Text>\r\n        //             </View>\r\n        //         </View>\r\n                \r\n        //     </View>\r\n        //     <p>{msg.message}</p>\r\n        // </ListCard>\r\n\r\n        <Paper elevation={2} style={{width: '70%', alignSelf: alignSelf}} className='py-2 mb-2 px-2'>\r\n            <div className='d-flex flex-row'>\r\n                <UserLink username={senderName} />\r\n            </div>\r\n            <p>\r\n                {wordsObjArr.map((word, ndx) => {\r\n                    if(word.obj == 'text'){\r\n                        return word.text;   \r\n                    }else{\r\n                        if(word.obj == 'userLink'){\r\n                            return <UserLink username={word.text} />      \r\n                            // return <Text key={ndx} style={{color: 'blue'}} onPress={()=>{showOtherUser(word.text)}}>{'@' + word.text}</Text>      \r\n                        }else{\r\n                            return <Link target=\"_blank\" href={word.text}>{word.text}</Link>     \r\n                            // return <Text key={ndx} style={{color: 'blue'}} onPress={()=>{Linking.openURL(word.text)}}>{word.text}</Text>      \r\n                        }\r\n                        \r\n                    }\r\n                    \r\n                    \r\n                    \r\n                })}\r\n            </p>\r\n            <div className='d-flex' style={{justifyContent: 'flex-end'}}>\r\n                <span className='' style={{fontSize: 12}}>{dateToStr(msg.datecreated)}</span>\r\n            </div>\r\n            <Tab headers={buttons} onChangeTab={onButtonsPressed} moreTabs={[]} />\r\n        </Paper>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n// import { View, Modal } from 'react-native';\r\n// import { Container, Header, Content, Text, Left, Right, Body, Input, Item, Icon, Card } from 'native-base';\r\nimport MsgList from '../List/MsgList';\r\n// import OtherPage from '../HtmlComponents/OtherPage';\r\nimport PageNav from './PageNav';\r\nimport {Button, TextField} from '@material-ui/core';\r\n// import { Button } from 'react-native-material-ui';\r\n\r\nexport default function Messages({onPressBack, msgHeader}) {\r\n    console.log('other profile page');\r\n    const {userData, globals, apiCall, openMsgModal} = useContext(GlobalContext);\r\n    const [msgsData, setMsgsData] = useState({\r\n        msgs: []\r\n    })\r\n\r\n    // const [msg, setMsg] = useState('');\r\n    // const [startPt, setStartPt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        getMsgs(0);\r\n    }, []);\r\n\r\n    // function replyMsg(){\r\n        \r\n    //     var data = {\r\n    //         msgHeaderID: msgHeader.id,\r\n    //         post: msg\r\n    //     }\r\n    //     // console.log('options: ', options);\r\n    //     apiCall(globals.varNames.blagsApiPath + 'message/replyMessage', data);\r\n        \r\n    // }\r\n    \r\n    \r\n    async function getMsgs(startPt){\r\n        // let data = {\r\n        //     headerID: headerID,\r\n        //     startPoint: startPoint\r\n        // }\r\n\r\n        // var response = await apiCall(state.globals.varNames.blagsApiPath + 'message/showMessages', data);\r\n        var data = {\r\n            headerID: msgHeader.id,\r\n            startPoint: startPt\r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'message/showMessages', data);\r\n        if(response.status == 1){\r\n\r\n            let msgs = [];\r\n            response.payload.forEach((msg) => {\r\n                msgs.unshift(msg);\r\n            })\r\n            \r\n            setMsgsData({...msgsData, msgs: msgs});\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <View style={{flex: 1, paddingBottom: 10}}>\r\n            \r\n        //     <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n        //         <Button style={{container: {marginRight: 25}}} raised primary text='Back' onPress={onPressBack} />\r\n        //         <PageNav startPt={startPt} setStartPt={setStartPt} isForward={false} getItems={getMsgs} />\r\n        //     </View>\r\n        //     <View style={{flex: 1}}>\r\n        //         {msgsData.msgs.map((msg) => {\r\n        //             return (\r\n                       \r\n        //                 <MsgList msgHeader={msgHeader} msg={msg} key={msg.id}/>\r\n                            \r\n        //             )\r\n                    \r\n        //         })}\r\n        //     </View>\r\n            \r\n        //     <Button raised primary text='Reply' onPress={()=>openMsgModal('', '', 0, msgHeader.id)} />\r\n           \r\n        // </View> \r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <div className='mb-2 d-flex' style={{justifyContent: 'space-between'}}>\r\n                <Button variant=\"contained\" onClick={onPressBack}>Back</Button>\r\n                <PageNav isForward={false} onChangeStartPt={getMsgs} />   \r\n            </div>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-2'>\r\n                {msgsData.msgs.map((msg) => {\r\n                    return (\r\n                        \r\n                        <MsgList msgHeader={msgHeader} msg={msg} key={msg.id}/>\r\n                            \r\n                    )\r\n                    \r\n                })}   \r\n            </div>\r\n            <Button className='mb-2' style={{width: '70%', alignSelf: 'center'}} variant=\"contained\" onClick={()=>openMsgModal('', '', 0, msgHeader.id)}>Reply</Button>\r\n        </div>\r\n    );\r\n}","import React, {useState, useContext} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport MessageHeaders from '../Components/MessageHeaders';\r\nimport Messages from '../Components/Messages';\r\n\r\n// import { View } from 'react-native';\r\n\r\n\r\n\r\n\r\nexport default function MessagesPage() {\r\n    console.log('MESSAGES PAGE');\r\n    const {userData} = useContext(GlobalContext);\r\n    const [viewingMsgs, setViewingMsgs] = useState(false);\r\n    const [chatData, setChatData] = useState(null);\r\n    let page = <MessageHeaders onPressHeader={(msgHeader)=>{setViewingMsgs(true); setChatData(msgHeader)}} />;\r\n    if(viewingMsgs){\r\n        page = <Messages onPressBack={()=>setViewingMsgs(false)} msgHeader={chatData} />;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-2 pt-1 pb-3'>\r\n            {/* <MessageHeaders onPressHeader={(msgHeader)=>{setViewingMsgs(true); setChatData(msgHeader)}} /> */}\r\n            {page}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport Tab from '../common/HtmlComponents/Tab';\r\nimport MoreInfo from '../common/HtmlComponents/MoreInfo';\r\nimport UserMoreInfo from '../common/HtmlComponents/UserMoreInfo';\r\nimport UserLink from '../common/HtmlComponents/UserLink';\r\nimport UserImg from '../common/Components/UserImg';\r\n// import MoreInfo from '../common/HtmlComponents/MoreInfo';\r\nimport DetailsDiv from '../common/Components/DetailsDiv';\r\n\r\nexport default function ItemList({ item, isUser, isSearch = false, fromModal = false }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, appData, randomStr, globals, showToast, apiCall, openSingleModal, openYesNoModal, convertTagsToStr } = useContext(GlobalContext);\r\n    \r\n    console.log('item: ', item);\r\n    console.log('item img: ', globals.varNames.itemsImgPath + item.imgurl);\r\n\r\n    let url = 'http';\r\n    if(item.imgurl != ''){\r\n        url = globals.varNames.itemsImgPath + item.imgurl + '/' + userData.userID + '/' + userData.photoPassword;\r\n    }\r\n\r\n    async function deleteItem() {\r\n        console.log('DELETE ITEM')\r\n        let response = await apiCall(globals.varNames.apiPath + 'item/deleteItem', {itemID: item.id});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Item deleted successfully.', 3, false);\r\n        }\r\n        \r\n    }\r\n\r\n    function onButtonsPressed(button){\r\n        if(button == 'Edit'){\r\n            // openSingleModal('New Item', item); \r\n            // [tags, description, name, price, id, quantity, bidAmt] \r\n            openSingleModal('New Item', {tags: item.tags, description: item.description, name: item.name, price: item.price / 100, id: item.id, quantity: item.quantity, bidAmt: item.bidamt}) \r\n        }else if(button == 'Upload'){\r\n            openSingleModal('Upload Item Photo', item);   \r\n        }else if(button == 'Delete'){\r\n            openYesNoModal('Delete this item?', deleteItem);   \r\n        }else if(button == 'Bid'){\r\n            openSingleModal('Bid', {bidAmt: item.bidamt, itemName: 'Item', id: item.id, bidBal: item.bidbal});  \r\n        }\r\n    }\r\n\r\n    // async function uploadPhoto(image){\r\n    //     let formData = new FormData();\r\n    //     formData.append('file', image);\r\n    //     // formData.append('userID', userData.userID);\r\n    //     formData.append('itemID', item.id);\r\n    //     let options = {\r\n    //         method: 'post',\r\n    //         url: globals.varNames.apiPath + 'item/uploadItemPhoto',\r\n    //         data: formData,\r\n    //         headers: {\r\n    //             'x-access-token': userData.token,\r\n    //             'version': appData.version,\r\n    //             'sosyal-version': appData.versionSosyal,\r\n    //             'photo-token': randomStr(5),\r\n    //             'photo-id': item.id\r\n    //         }\r\n    //     }\r\n\r\n    //     let response = await Axios(options);\r\n    //     console.log('response: ', response.data);\r\n    //     if(response.data.status == 1){\r\n    //         showToast(response.data.message, 3, false);\r\n    //         // closeModal();   \r\n    //     }\r\n    // }\r\n\r\n    let buttons = [];\r\n    let moreBtns = [];\r\n    let moreInfoDiv = null;\r\n    if(isUser){\r\n        buttons = ['Edit', 'Delete', 'Upload'];\r\n        if(!userData.isShappers){\r\n            buttons = ['Edit', 'Delete', 'More'];\r\n            moreBtns = ['Upload', 'Bid'];\r\n        }\r\n\r\n        if(!userData.isShappers){\r\n            moreInfoDiv = <div className='d-flex flex-column'>\r\n                <span style={styles.span}>Bid Amount: {item.bidamt / 1000}</span>\r\n                <span style={styles.span}>Bid Balance: {item.bidbal / 1000}</span>\r\n                <span style={styles.span}>Search Tags: {convertTagsToStr(item.tags)}</span>\r\n            </div>\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    let imgPathBegin = globals.varNames.itemsImgPath;\r\n    let photoPassword = userData.photoPassword;\r\n\r\n    let moreInfoDivSearch = null;\r\n    let itemName = item.name;\r\n    let itemDescription = item.description;\r\n    let itemImgURL = item.imgurl;\r\n    if(isSearch){\r\n        itemName = item.itemname;\r\n        itemDescription = item.itemdescription;\r\n        itemImgURL = item.itemimgurl;\r\n        if(!fromModal){\r\n\r\n            let details = <div>\r\n                <h6 className='m-0'>{itemName}</h6>\r\n                <span style={styles.span}>{itemDescription}</span>  \r\n                <DetailsDiv info={item} imgPathBegin={imgPathBegin} photoPassword={photoPassword} /> \r\n            </div>;\r\n\r\n            moreInfoDivSearch = <div className='d-flex flex-column'>\r\n                {/* <Rating size={17} isVerified={false} rating={item.rating} numOfRaters={item.numofraters} />\r\n                <Rating size={17} isVerified={true} rating={item.ratingverified} numOfRaters={item.numofratersverified} />    \r\n                <span>@{item.companyusername}</span>\r\n                <Rating size={17} isVerified={false} rating={item.companyrating} numOfRaters={item.companynumofraters} />\r\n                <Rating size={17} isVerified={true} rating={item.companyratingverified} numOfRaters={item.companynumofratersverified} />     */}\r\n                {/* <span>{item.username}</span> */}\r\n                <UserLink verified={item.verifieduser} username={item.username} />\r\n                <MoreInfo div={details} />\r\n                {/* <span>{item.name}</span> */}\r\n                {/* <UserMoreInfo user={item} isSosyal={false} includeCompany={true} /> */}\r\n            </div> \r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    console.log('item img url: ', url);\r\n    return (\r\n        // <ListCard moreBtns={moreBtns} style={{padding: 5}} buttons={buttons} onButtonsPressed={onButtonsPressed}>\r\n           \r\n        //     <View style={{flexDirection: 'row'}}>\r\n                \r\n        //         <Image onPress={()=>openSingleModal('Image', url)} style={{width: 50, height: 50, marginRight: 5, backgroundColor: 'blue', alignSelf: 'center'}} source={{uri: url}}/>\r\n        //         <View>\r\n        //             <Text>{item.name}</Text> \r\n        //             <Text>{item.description}</Text>\r\n        //             <Text>PHP {item.price / 100}</Text>\r\n        //             <Text>{item.quantity}</Text>  \r\n        //         </View>\r\n                    \r\n        //     </View>\r\n            \r\n        // </ListCard>\r\n        <Paper elevation={2} className='d-flex flex-column mb-2 px-2 py-2'>\r\n            <div>\r\n                <div className='d-flex'>\r\n                    <UserImg imgPathBegin={imgPathBegin} imgURL={itemImgURL} userID={userData.userID} photoPassword={photoPassword} />\r\n                    <div style={{flex: 1}} className='d-flex flex-column ml-2 border-left pl-2'>\r\n                        <h6 className='m-0'>{itemName}</h6>\r\n                        <span style={styles.span}>{itemDescription}</span>\r\n                        <div style={{width: '100%', justifyContent: 'space-between'}} className='d-flex' >\r\n                            <span style={styles.span} className='mr-5'>PHP {item.price / 100}</span>\r\n                            <span style={styles.span}>Qty: {item.quantity}</span>\r\n                        </div>\r\n                        \r\n                        {/* <MoreInfo>\r\n                            <div className='d-flex flex-column'>\r\n                                <span>Bid Amount: {item.bidamt / 1000}</span>\r\n                                <span>Bid Balance: {item.bidbal / 1000}</span>\r\n                                <span>Search Tags: {item.searchtags}</span>\r\n                            </div>\r\n                            \r\n                        </MoreInfo> */}\r\n                        {moreInfoDiv}\r\n                        {moreInfoDivSearch}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            <Tab headers={buttons} onChangeTab={onButtonsPressed} moreTabs={moreBtns} />\r\n            \r\n            \r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    span: {\r\n        fontSize: 14\r\n    }\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\nimport ItemList from '../List/ItemList';\r\n\r\n\r\n\r\nimport PageNav from '../common/Components/PageNav';\r\n\r\n\r\n\r\n\r\nexport default function ListPage() {\r\n\tconsole.log('LIST')\r\n\tconst { userData, globals, getTimeOut, apiCall, openSingleModal, showPageNav, closePageNav } = useContext(GlobalContext);\r\n    // const [startPoint, setStartPoint] = useState(0)\r\n\r\n    const [itemsData, setItemsData] = useState({\r\n        items: [],\r\n        startPt: 0\r\n    });\r\n    \r\n    // const [startPt, setStartPt] = useState(0);\r\n    useEffect(() => {\r\n        showPageNav(getItems); \r\n        getItems(0); \r\n        return closePageNav\r\n    }, [])\r\n\r\n\r\n    async function getItems(startPt) {\r\n        console.log('GET DATA')\r\n        // getTimeOut(timeOutID, )\r\n        // timeOutID = getTimeOut(timeOutID, async ()=>{\r\n            \r\n        // })\r\n        let response = await apiCall(globals.varNames.apiPath + 'item/getItems', {startPt: startPt})\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // items = response.payload;\r\n            setItemsData({...itemsData, items: response.payload});\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n       \r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-2 py-1'>\r\n            <div className='d-flex mb-1' style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                <Button variant=\"contained\" onClick={()=>{openSingleModal('New Item', {tags: JSON.stringify([]), description: '', name: '', price: 0, id: 0, quantity: 0, bidAmt: 0})}}>New Item</Button>\r\n            </div>\r\n            \r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-1'>\r\n                \r\n                {itemsData.items.map((item, idx) => \r\n                    <ItemList key={item.id} isUser={true} item = {item} />\r\n                )} \r\n            </div>\r\n            {/* <PageNav isForward={true} getItems={getItems} startPt={startPt} setStartPt={setStartPt} /> */}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Link, Paper} from '@material-ui/core';\r\n\r\n// import ListCard from '../HtmlComponents/ListCard';\r\n\r\nexport default function DataList({ data }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, forceUpdate, dateToStr, openSingleModal, openYesNoModal } = useContext(GlobalContext);\r\n    \r\n    \r\n\r\n    \r\n    function onButtonsPressed(button){\r\n        \r\n    }\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        // <ListCard buttons={[]} onButtonsPressed={onButtonsPressed}>\r\n        //     {/* <Text>{JSON.stringify(data)}</Text> */}\r\n            \r\n        //     <View style={{flexDirection: 'row', justifyContent: 'space-between', padding: 10}}>\r\n               \r\n        //         <Text style={{fontSize: 20}}>{data.amount}</Text>\r\n                \r\n        //         <Text style={{fontSize: 12}}>{dateToStr(data.created)}</Text>\r\n        //     </View>\r\n            \r\n           \r\n        // </ListCard>\r\n\r\n        <Paper className='d-flex flex-column mb-2 px-2'>\r\n            <span className='mb-2' style={{fontSize: 20, fontWeight: 700}}>{data.amount}</span>\r\n            <span style={{alignSelf: 'flex-end', fontSize: 12}} className=''>{dateToStr(data.created)}</span>\r\n        </Paper>\r\n        \r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\nimport DataList from '../List/DataList';\r\n// import PageNav from '../Components/PageNav';\r\n// import Title from '../HtmlComponents/Title';\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\nexport default function DataPage() {\r\n    const {userData, globals, showPageNav, closePageNav, apiCall, openSingleModal, getApiPath} = useContext(GlobalContext);\r\n    \r\n    const [datasArr, setDatasArr] = useState([]);\r\n    const [tab, setTab] = useState('Profile');\r\n    // const [startPt, setStartPt] = useState(0);\r\n    \r\n    let dataBal = userData.dataBal;\r\n    let totalAddtlData = userData.totalAddtlData;\r\n\r\n    if(userData.isSosyal){\r\n        dataBal = userData.sosyalData.dataBal;\r\n        totalAddtlData = userData.sosyalData.totalAddtlData;\r\n    }\r\n\r\n    console.log('databal: ', dataBal);\r\n    console.log('total addtl data: ', totalAddtlData);\r\n    async function getDatas(startPt){\r\n        \r\n        let response = await apiCall(getApiPath() + 'pay/getDatas', {startPoint: startPt});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setDatasArr(response.payload);\r\n           \r\n        }     \r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        showPageNav(getDatas);\r\n        getDatas(0);\r\n\r\n        return closePageNav\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        // <View style={{flex: 1}}>\r\n            \r\n        //     <Text style={{fontSize: 20}}>Balance: {dataBal}</Text>\r\n        //     <Text style={{fontSize: 20}}>Free: {dataBal - totalAddtlData}</Text>\r\n        //     <Text style={{fontSize: 20}}>Additional Data: {totalAddtlData}</Text>\r\n        //     <Button style={{container: {marginHorizontal: 20, marginVertical: 10}}} primary text='Buy Data' onPress={()=>openSingleModal('Buy Data', '')} raised />\r\n        //     <Title title='Datas'/>\r\n        //     <View style={{flex: 1}}>\r\n        //         {datasArr.map((dataArr) => {\r\n        //             return <DataList data={dataArr} key={dataArr.id}/>\r\n                   \r\n                    \r\n        //         })}\r\n        //     </View>\r\n            \r\n            \r\n           \r\n\r\n        //     <PageNav startPt={startPt} getItems={getDatas} setStartPt={setStartPt} isForward={true}/>\r\n        // </View>\r\n\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <div className='mb-3 d-flex flex-column px-5 mt-3 border-bottom py-2'>\r\n                <h5>Balance: {dataBal}</h5>       \r\n                <h6>Free: {dataBal - totalAddtlData}</h6>\r\n                <h6>Additional Data: {totalAddtlData}</h6>\r\n                <Button className='mt-3' style={{width: '60%', alignSelf: 'center'}} variant=\"contained\" onClick={()=>openSingleModal('Buy Data', '')}>Buy Data</Button>\r\n                {/* <div style={{justifyContent: 'flex-end'}} className='d-flex'>\r\n                    \r\n                </div> */}\r\n                \r\n            </div>\r\n            \r\n            \r\n            {/* <Title title='Datas'/> */}\r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-2'>\r\n                {datasArr.map((dataArr) => {\r\n                    return <DataList data={dataArr} key={dataArr.id}/>\r\n                \r\n                    \r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n            {/* <div className='border-top'>\r\n                <PageNav startPt={startPt} getItems={getDatas} setStartPt={setStartPt} isForward={true}/>\r\n            </div> */}\r\n            \r\n        </div>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\nimport {Button, TextField, Link, IconButton, Badge} from '@material-ui/core';\r\n\r\nimport { red } from '@material-ui/core/colors'\r\nimport MarkerIcon from '@material-ui/icons/Room';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Marker({text, onClick}) {\r\n    console.log('AppModal');\r\n    // buttons.push('Less');\r\n\r\n    \r\n    return (\r\n        \r\n        // <IconButton style={{position: 'relative', top: -40, left: -28}} className='' onClick={onClick} aria-label=\"search\">\r\n        //     <MarkerIcon style={{color: red[900]}} fontSize='large' className='' /><span style={{fontSize: 12, position: 'relative', top: 7, left: -7}} className=''>{text}</span>\r\n        // </IconButton>\r\n        \r\n        <IconButton style={{position: 'relative', top: -50, left: -33}} className='' onClick={onClick} aria-label=\"search\">\r\n            <Badge style={{position: 'relative', top: 10, left: 5}} className='' max={500000} badgeContent={text} color=\"primary\">\r\n                <MarkerIcon style={{color: red[900]}} fontSize='large' className='' />\r\n            </Badge>\r\n            \r\n        </IconButton>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n// import { View, Image } from 'react-native';\r\n\r\n// import { Button, ListItem } from 'react-native-material-ui';\r\n// import { Avatar, Accessory } from 'react-native-elements';\r\n// import { Text } from 'native-base';\r\n// import { Container, Drawer, Header, Content, Separator, List, ListItem, H3, Card, CardItem, Body, Button, Icon, Right, Item, Input, Left } from 'native-base';\r\n// import ListCard from '../HtmlComponents/ListCard';\r\n\r\nexport default function HintList({ hint, isUser, onPressHint }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, forceUpdate, apiCall, openSingleModal, openYesNoModal } = useContext(GlobalContext);\r\n    \r\n    // console.log('item: ', item);\r\n    // console.log('item img: ', globals.varNames.itemsImgPath + item.imgurl);\r\n\r\n    \r\n    \r\n    \r\n    let tag = '';\r\n    if(!isUser){\r\n        tag = hint.tag;\r\n\r\n    }else{\r\n        tag = hint.username;\r\n    }\r\n\r\n    // tag = encodeURI(tag);\r\n    // if(tag == ''){\r\n    //     tag = '&nbsp;';\r\n    // }\r\n\r\n    return (\r\n        // <View>\r\n           \r\n        //     <ListItem\r\n        //         divider\r\n        //         centerElement={{\r\n        //             primaryText: tag,\r\n        //         }}\r\n        //         onPress={()=>onPressHint(tag)}\r\n                \r\n        //     />\r\n            \r\n        // </View>\r\n            <h6 style={{height: 35, whiteSpace: 'pre'}} className='m-0 mb-1 pt-2 border-bottom' onClick={()=>onPressHint(tag)}>{tag}</h6>   \r\n            // <h6 dangerouslySetInnerHTML={{__html: tag}} className='px-1 py-2 my-0 border-bottom' onClick={()=>onPressHint(tag)}></h6>   \r\n        \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport HintList from '../List/HintList';\r\nimport PageNav from '../Components/PageNav';\r\n\r\n\r\n\r\n\r\n\r\nexport default function SearchHints({hintVal, onPressHint, isUser}) {\r\n\tconsole.log('LIST')\r\n    const {userData, getSearchTags, openSingleModal} = useContext(GlobalContext);\r\n    const [hints, setHints] = useState([]); \r\n    const [startPt, setStartPt] = useState(0); \r\n    const [pageInitiated, setPageInitiated] = useState(false); \r\n    async function getHints(){\r\n        console.log('get hints');\r\n        let tags = await getSearchTags(hintVal, startPt, isUser);\r\n        setHints(tags);\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getHints();\r\n        }\r\n        \r\n        // if(isTyping){\r\n            \r\n        // }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [hintVal]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        getHints();\r\n        setPageInitiated(true);\r\n        // if(isTyping){\r\n            \r\n        // }\r\n        \r\n        // setPageInitiated(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        getHints();\r\n        // setPageInitiated(true);\r\n        // if(isTyping){\r\n            \r\n        // }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [startPt]);\r\n\t// let div = null;\r\n    // if(hints.length > 0){\r\n    //     div = <div style={{position: 'absolute', top: 50, right: 5, left:5, backgroundColor: 'white'}} className='shadow px-3'>\r\n    //         {hints.map((hint, idx) => \r\n    //             <HintList onPressHint={onPressHint} key={hint.id} isUser={isUser} hint = {hint} />\r\n    //         )}    \r\n    //     </div>\r\n    // }\r\n    // let div = null;\r\n    // if(hints.length > 0){\r\n    //     div=\r\n    // }\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='shadow d-flex flex-column'>\r\n            {/* <div className='border-bottom d-flex flex-row' style={{justifyContent: 'space-between'}}>\r\n                <h6 className=''>Results</h6>\r\n                <h6 className='' onClick={onPressClosed}>Close</h6>\r\n            </div> */}\r\n            <div className='px-3' style={{overflow: 'auto', flex: 1}}>\r\n                {hints.map((hint) => \r\n                    <HintList onPressHint={onPressHint} key={hint.id} isUser={isUser} hint = {hint} />\r\n                )}    \r\n            </div>\r\n            <div className='d-flex flex-column pr-3 py-2' style = {{alignItems: 'flex-end'}}>\r\n                <PageNav isForward={true} onChangeStartPt={setStartPt} />\r\n            </div>\r\n            \r\n                \r\n        </div>           \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchHints from './SearchHints';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Search({searchOptions, setSearchOptions, searchInputVal, setSearchInputVal, setOptions, onClickSearch}) {\r\n\tconsole.log('LIST')\r\n\tconst {userData, getSearchTags, openSingleModal, openHintsModal} = useContext(GlobalContext);\r\n    // const [searchInputVal, setSearchInputVal] = useState('');\r\n    const [hints, setHints] = useState([]);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n\r\n    // async function getHints(){\r\n    //     console.log('get hints');\r\n    //     let tags = await getSearchTags(searchInputVal, 0, false);\r\n    //     setHints(tags);\r\n        \r\n    // }\r\n\r\n    function onChangeSearchInput(e){\r\n        console.log('on search inputs pressed');\r\n        setIsTyping(true);\r\n        // setSearchInputs({s, searchValue: text})\r\n        setSearchInputVal(e.target.value);\r\n    }\r\n\r\n    function onSearchInputPressed(){\r\n        console.log('on search inputs pressed');\r\n        // if(!isTyping){\r\n        //     setIsTyping(true);         \r\n        //     // getHints()\r\n        // }\r\n        // hint, isUserSearch, callbackFunc\r\n        openHintsModal(searchInputVal, false, onHintsModalDone);\r\n        \r\n    }\r\n\r\n    function onHintsModalDone(hint){\r\n        console.log('get hints');\r\n        \r\n        setSearchInputVal(hint);\r\n        \r\n        // setIsTyping(false);\r\n        setOptions({...searchOptions, searchValue: hint});\r\n        // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    }\r\n    \r\n    function onPressHint(hint){\r\n        console.log('get hints');\r\n        \r\n        setSearchInputVal(hint);\r\n        \r\n        setIsTyping(false);\r\n        setOptions({...searchOptions, searchValue: hint});\r\n        // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    }\r\n\r\n\r\n    function onSearch(){\r\n        console.log('get hints');\r\n        \r\n        \r\n        \r\n        setIsTyping(false);\r\n        onClickSearch();\r\n        \r\n        // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    }\r\n\r\n    function onSearch(){\r\n        console.log('get hints');\r\n        \r\n        \r\n        \r\n        setIsTyping(false);\r\n        onClickSearch();\r\n        \r\n        // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     if(isTyping){\r\n    //         getHints();\r\n    //     }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [searchInputVal]);\r\n\r\n    // let searchHints = null;\r\n    // if(isTyping){\r\n    //     searchHints = <SearchHints onPressClosed={()=>setIsTyping(false)} hintVal={searchInputVal} onPressHint={onPressHint} isUser={false} />;\r\n    // }\r\n\r\n    return (\r\n        <div className='' style={{position: 'relative', zIndex: 2}}>\r\n            <Paper style={{width: '100%'}} className='mb-2 d-flex flex-row' component=\"form\">\r\n                \r\n                <InputBase\r\n                    value={searchInputVal}\r\n                    // onChange={onChangeSearchInput}\r\n                    onClick={onSearchInputPressed}\r\n                    style={{flex: 1}}\r\n                    className='pl-3'\r\n                    placeholder=\"Search...\"\r\n                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                />\r\n                \r\n                {/* <IconButton onClick={onSearch} aria-label=\"search\">\r\n                    <SearchIcon />\r\n                </IconButton> */}\r\n                <IconButton onClick={()=>openSingleModal('Search Options', {searchOptions: searchOptions, setSearchOptions: setSearchOptions})} aria-label=\"menu\">\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                {/* <Divider orientation=\"vertical\" /> */}\r\n                \r\n            </Paper>\r\n            {/* {searchHints} */}\r\n        </div>\r\n    );\r\n}","\r\nimport React, {useState, useContext, useEffect, useRef} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\n// import PageNav from '../common/Components/PageNav';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from '../HtmlComponents/Marker';\r\nimport Search from '../common/HtmlComponents/Search';\r\n// import {Button, TextField, Link, IconButton} from '@material-ui/core';\r\n// // import IconButton from '@material-ui/core/IconButton';\r\n// import { red } from '@material-ui/core/colors'\r\n// import MarkerIcon from '@material-ui/icons/Room';\r\n\r\n// const AnyReactComponent = ({ text, onClick }) => <IconButton style={{position: 'relative', top: -40, left: -28}} className='' onClick={onClick} aria-label=\"search\">\r\n//     <MarkerIcon style={{color: red[900]}} fontSize='large' className='' /><span style={{fontSize: 12, position: 'relative', top: 7, left: -7}} className=''>{text}</span>\r\n// </IconButton>;\r\n\r\n// const AnyReactComponent = ({ text, onClick }) => <div className='bg-primary' onClick={onClick} aria-label=\"search\">\r\n//     <span>{text + text + text + text + text}</span>\r\n// </div>;\r\n\r\nexport default function MapSearchComponent() {\r\n    console.log('MAP SEARCH COMPONENT');\r\n    const {userData, globals, forceUpdate, apiCall, mapData, closePageNav, showPageNav, funcDelayer, openGroserModal, getSearchTags, openSingleModal} = useContext(GlobalContext);\r\n    const mapRef = useRef(null);\r\n    const [startPt, setStartPt] = useState(0);\r\n    const [timeoutID, setTimeoutID] = useState(0);\r\n    const [pageInitiated, setPageInitiated] = useState(false);\r\n    const [searchInputVal, setSearchInputVal] = useState('');\r\n    const [hints, setHints] = useState([]);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    // const [center, setCenter] = useState({\r\n    //     lat: 59.95,\r\n    //     lng: 30.33\r\n    // });\r\n    const [center, setCenter] = useState([0, 0]);\r\n    // const [isClickingMarker, setIsClickingMarker] = useState(false);\r\n    \r\n    const [searchInputs, setSearchInputs] = useState({\r\n        timeOutID: 0,\r\n        searchValue: '',\r\n        startPoint: 0,\r\n        usernameSearch: true,\r\n        searchType: 'username',\r\n        startPoint: 0,\r\n        numOfRaters: 0,\r\n        bounds: {\r\n            east: 130,\r\n            west: -130,\r\n            north: 50,\r\n            south: -50\r\n        },\r\n        grosers: [],\r\n        items: [],\r\n        userSearch: true,\r\n        companySearchEnabled: false,\r\n        companySearch: {\r\n            searchType: 'username',\r\n            numOfRaters: 0,\r\n            searchValue: ''\r\n        },\r\n        center: {\r\n            lat: 59.95,\r\n            lng: 30.33\r\n        },\r\n        multiplier: 0,\r\n        zoom: 8\r\n    });\r\n\r\n    // let timeOutID = 0;\r\n\r\n\r\n    let userSearchOnly = false;\r\n    if(userData.isShappers){\r\n        userSearchOnly = true;\r\n    }\r\n\r\n    const [options, setOptions] = useState({\r\n        \r\n        \r\n        \r\n        searchValue: '',\r\n        searchType: 'username',\r\n        \r\n        numOfRaters: 0,\r\n        \r\n        \r\n        userSearch: true,\r\n        companySearchEnabled: false,\r\n        isVerifiedRatings: false,\r\n        companySearch: {\r\n            searchType: 'username',\r\n            numOfRaters: 0,\r\n            searchValue: '',\r\n            isVerifiedRatings: false\r\n        },\r\n        otherLabel: 'Item',\r\n        userSearchOnly: userSearchOnly,\r\n        isSearch: true,\r\n        // allSite: false,\r\n        siteUsername: ''\r\n    });\r\n\r\n    function setSearchOptions(optionsModal){\r\n        \r\n        setOptions({\r\n            ...options,\r\n            userSearch: optionsModal.userSearch,\r\n            searchType: optionsModal.searchType,\r\n            numOfRaters: optionsModal.numOfRaters,\r\n            isVerifiedRatings: optionsModal.isVerifiedRatings,\r\n            companySearchEnabled: optionsModal.companyEnabled,\r\n            companySearch: {\r\n                searchType: optionsModal.company.searchType,\r\n                numOfRaters: optionsModal.company.numOfRaters,\r\n                searchValue: optionsModal.company.searchValue,\r\n                isVerifiedRatings: optionsModal.company.isVerifiedRatings\r\n            }\r\n        })      \r\n        \r\n        \r\n    }\r\n\r\n    // function onSearchInputPressed(){\r\n    //     console.log('on search inputs pressed');\r\n    //     if(!isTyping){\r\n    //         setIsTyping(true);         \r\n    //         getHints()\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // function onChangeSearchInput(e){\r\n    //     console.log('on search inputs pressed');\r\n    //     setIsTyping(true);\r\n    //     // setSearchInputs({s, searchValue: text})\r\n    //     setSearchInputVal(e.target.value);\r\n    // }\r\n\r\n    // async function getHints(){\r\n    //     console.log('get hints');\r\n    //     let tags = await getSearchTags(searchInputVal, 0, false);\r\n    //     setHints(tags);\r\n        \r\n    // }\r\n\r\n    // function onPressHint(hint){\r\n    //     console.log('get hints');\r\n    //     setSearchInputVal(hint);\r\n        \r\n    //     setIsTyping(false);\r\n    //     setOptions({...options, searchValue: hint});\r\n    //     // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    // }\r\n\r\n    function search(){\r\n        console.log('search');\r\n        // console.log('search options: ', searchInputs);\r\n        setTimeoutID(funcDelayer(timeoutID, getSearchedUsers, 1));\r\n        // console.log('timeout id: ', timeOutID)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    function onRegionChange(response){\r\n        console.log('ON REGION CHANGE')\r\n        console.log('response: ', response);\r\n        console.log('mapref boundaries: ', );\r\n        // if(!pageInitiated){\r\n        //     return;\r\n        // }\r\n        // if(userData.openingGroserModal){\r\n        //     return;\r\n        // }\r\n        // searchInputs.bounds = {\r\n        //     east: response.longitude + (response.longitudeDelta)/2,\r\n        //     west: response.longitude - (response.longitudeDelta)/2,\r\n        //     north: response.latitude + (response.latitudeDelta)/2,\r\n        //     south: response.latitude - (response.latitudeDelta)/2\r\n        // }\r\n        let multiplier = 0;\r\n        let multiplierFound = false;\r\n        let isPositive = true;\r\n        let east = response.bounds.ne.lng;\r\n        let west = response.bounds.sw.lng;\r\n\r\n        \r\n        if(east < -180 && west < -180){\r\n            isPositive = false;\r\n        }\r\n\r\n        while(!multiplierFound){\r\n            if(isPositive){\r\n                if(east > 180 + (360 * multiplier) && west > 180 + (360 * multiplier)){\r\n                    multiplier = multiplier + 1;\r\n                }else{\r\n                    // multiplier = multiplier - 1;\r\n                    multiplierFound = true;\r\n                }\r\n            }else{\r\n                if(east < -180 + (360 * multiplier) && west < -180 + (360 * multiplier)){\r\n                    \r\n                    multiplier = multiplier - 1;\r\n                }else{\r\n                    // multiplier = multiplier - 1;\r\n                    multiplierFound = true;\r\n                }   \r\n            }\r\n        }\r\n\r\n        // if(multiplier != 0 && !isPositive){\r\n        //     multiplier = multiplier * -1;\r\n        // }\r\n\r\n        // console.log('multiplier: ', multiplier);\r\n\r\n        // searchInputs.bounds = {\r\n        //     east: response.bounds.ne.lng,\r\n        //     west: response.bounds.sw.lng,\r\n        //     north: response.bounds.ne.lat,\r\n        //     south: response.bounds.sw.lat\r\n        // }\r\n\r\n        let bounds = {\r\n            east: response.bounds.ne.lng,\r\n            west: response.bounds.sw.lng,\r\n            north: response.bounds.ne.lat,\r\n            south: response.bounds.sw.lat    \r\n        }\r\n        // let center = {\r\n        //     lat: response.center.lat,\r\n        //     lng: response.center.lng\r\n        // }\r\n        setSearchInputs({...searchInputs, bounds: bounds, multiplier: multiplier})\r\n        // setCenter({\r\n        //     lat: 0,\r\n        //     lng: 0\r\n        // });\r\n        // setCenter([0,0]);\r\n        // searchInputs.multiplier = multiplier;\r\n        // search();\r\n        // setSearchInputs({\r\n        //     ...searchInputs,\r\n        //     bounds: {\r\n                \r\n        //     }\r\n        // })\r\n    }\r\n    \r\n    async function getSearchedUsers(){\r\n        \r\n        // let searchType = 'username';\r\n        // if(!searchInputs.usernameSearch){\r\n        //     searchType = 'description';\r\n        // }\r\n        let userSearch = 0;\r\n        if(options.userSearch){\r\n            userSearch = 1;\r\n        }\r\n        \r\n        let data = {\r\n            east: searchInputs.bounds.east - (360 * searchInputs.multiplier),\r\n            west: searchInputs.bounds.west - (360 * searchInputs.multiplier),\r\n            north: searchInputs.bounds.north,\r\n            south: searchInputs.bounds.south,\r\n            \r\n            searchValue: options.searchValue,\r\n            searchType: options.searchType,\r\n            startPoint: startPt,\r\n            numOfRaters: options.numOfRaters,\r\n            isVerifiedRatings: options.isVerifiedRatings,\r\n            userSearch: userSearch,\r\n            companySearchEnabled: options.companySearchEnabled,\r\n            searchValueCo: options.companySearch.searchValue,\r\n            searchTypeCo: options.companySearch.searchType,\r\n            numOfRatersCo: options.companySearch.numOfRaters,\r\n            isVerifiedRatingsCo: options.companySearch.isVerifiedRatings           \r\n        }\r\n        \r\n        let response = await apiCall(globals.varNames.apiPath + 'map/searchUsers', data);\r\n        // console.log('grosers: ', response.payload);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            let grosersFinal = response.payload;\r\n            if(!userSearch){\r\n                grosersFinal = getGrosers(response.payload);\r\n            }\r\n            console.log('grosers final: ', grosersFinal);\r\n            setSearchInputs({...searchInputs, grosers: grosersFinal, items: response.payload});\r\n            // mapData.grosers = response.payload;\r\n            // forceUpdate();\r\n                    \r\n                    \r\n        }\r\n        \r\n    }\r\n\r\n    function getGrosers(items){\r\n        let grosersInit = {};\r\n        let grosersFinal = [];\r\n        items.forEach((item, ndx) => {\r\n            if(grosersInit[item.userid] == null){\r\n                grosersInit[item.userid] = {\r\n                    itemsNdx: []\r\n                }\r\n            }\r\n\r\n            grosersInit[item.userid].itemsNdx.push(ndx);\r\n\r\n        })\r\n\r\n        console.log('grosers init: ', grosersInit);\r\n        for(let userID in grosersInit){\r\n            grosersFinal.unshift({\r\n                ...items[grosersInit[userID].itemsNdx[0]],\r\n                itemsNdx: grosersInit[userID].itemsNdx  \r\n            })\r\n        }\r\n        console.log('grosers final: ', grosersFinal);\r\n        return grosersFinal;\r\n        \r\n    }\r\n\r\n    function convertToPos(pos){\r\n        return pos / 1000000000000;   \r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getSearchedUsers();\r\n        \r\n        showPageNav(setStartPt);\r\n        // search();\r\n        \r\n        \r\n        setPageInitiated(true);\r\n        return closePageNav\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getSearchedUsers();\r\n        if(pageInitiated){\r\n            getSearchedUsers();\r\n        }\r\n\r\n    }, [startPt]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getSearchedUsers();\r\n        }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        search();\r\n        // if(pageInitiated){\r\n                   \r\n        // }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [searchInputs.bounds]);\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     if(isTyping){\r\n    //         getHints();\r\n    //     }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [searchInputVal]);\r\n    \r\n\r\n    let defaultProps = {\r\n        center: {\r\n            lat: userData.position.lat,\r\n            lng: userData.position.lng\r\n        },\r\n        zoom: 11\r\n    };\r\n\r\n    // let div = <View style={{flex: 1}}>\r\n    //     <View style={{flex: 1}}>\r\n    //         <MapView initialRegion={region} ref={mapRef} style={{flex: 1}} onRegionChange={onRegionChange}>\r\n    //             {searchInputs.grosers.map((groser) => {\r\n    //                 let coordinate = {\r\n    //                     latitude: convertToPos(groser.lat),\r\n    //                     longitude: convertToPos(groser.lng)\r\n    //                 }\r\n    //                 return <Marker onPress={()=>{openGroserModal({groser: groser, items: searchInputs.items})}} key={groser.userid} coordinate={coordinate} />\r\n                    \r\n    //             })}\r\n                \r\n    //         </MapView>\r\n    //     </View>\r\n    //     <PageNav startPt={startPt} setStartPt={setStartPt} isForward={true} getItems={getSearchedUsers} />\r\n    // </View>;\r\n    \r\n    // if(isTyping){\r\n    //     div = <SearchHints hints={hints} onPressHint={onPressHint} isUser={false} />;\r\n    // }\r\n    \r\n    return (\r\n        // <View style={{flex: 1}}>\r\n            \r\n            \r\n            \r\n        //     <View style={{flexDirection: 'row', marginBottom: 2}}>\r\n        //         <Item style={{flex: 1, marginRight: 2}}>\r\n        //             <Input value={searchInputVal} onFocus={onSearchInputPressed} onChangeText={onChangeSearchInput} placeholder=\"Search...\" />\r\n        //             <IconToggle onPress={search} name=\"search\"/>\r\n                    \r\n        //             <IconToggle onPress={()=>openSingleModal('Search Options', {searchOptions: options, setSearchOptions: setSearchOptions})} name=\"more-vert\"/>\r\n                    \r\n        //         </Item>\r\n                \r\n                \r\n                \r\n                \r\n        //     </View>\r\n            \r\n        //     {div}\r\n        // </View>\r\n        \r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column py-2'>\r\n            {/* <div style={{position: 'relative', zIndex: 2}}>\r\n                <Paper style={{width: '100%'}} className='mb-2 d-flex flex-row' component=\"form\">\r\n                    \r\n                    <InputBase\r\n                        value={searchInputVal}\r\n                        onChange={onChangeSearchInput}\r\n                        style={{flex: 1}}\r\n                        className='pl-3'\r\n                        placeholder=\"Search...\"\r\n                        inputProps={{ 'aria-label': 'search google maps' }}\r\n                    />\r\n                    <IconButton type=\"submit\" aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                   \r\n                </Paper>\r\n                <SearchHints hints={hints} onPressHint={onPressHint} isUser={false} />\r\n            </div> */}\r\n            <Search onClickSearch={()=>setOptions({...options, searchValue: searchInputVal})} searchInputVal={searchInputVal} setSearchInputVal={setSearchInputVal} setOptions={setOptions} searchOptions={options} setSearchOptions={setSearchOptions} />\r\n            <div className='px-2 d-flex flex-column' style={{flex: 1, overflow: 'auto'}}>\r\n                <div style={{flex: 1, overflow: 'auto'}}>\r\n                    <GoogleMapReact\r\n                        bootstrapURLKeys={{ key: \"AIzaSyCpkBTMH6jnPgDEljN1vNW6HSofABjyzAk\" }}\r\n                        defaultCenter={defaultProps.center}\r\n                        // center={center}\r\n                        defaultZoom={defaultProps.zoom}\r\n                        onChange={onRegionChange}\r\n                        >\r\n                            {searchInputs.grosers.map((groser, ndx) => {\r\n                                let coordinate = {\r\n                                    latitude: convertToPos(groser.lat),\r\n                                    longitude: convertToPos(groser.lng)\r\n                                }\r\n                                // return <Marker onPress={()=>{openGroserModal({groser: groser, items: searchInputs.items})}} key={groser.userid} coordinate={coordinate} />\r\n                                return <Marker\r\n                                    onClick={()=>{openGroserModal({groser: groser, items: searchInputs.items})}}\r\n                                    key={groser.userid}\r\n                                    lat={coordinate.latitude}\r\n                                    lng={coordinate.longitude}\r\n                                    text={ndx + 1}\r\n                                />\r\n                            })}\r\n                \r\n                    </GoogleMapReact> \r\n                </div>\r\n                            \r\n                {/* <PageNav startPt={startPt} setStartPt={setStartPt} isForward={true} getItems={getSearchedUsers} />         */}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n","\r\nimport React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport Marker from '../HtmlComponents/Marker';\r\n// import { View } from 'react-native';\r\n\r\n// import MapView, { Marker } from 'react-native-maps';\r\n\r\n// import { Button } from 'react-native-material-ui';\r\n// import { Container, Header, Content, Button, Text, Input, Item } from 'native-base';\r\n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nexport default function SetLocation() {\r\n    console.log('MAP SEARCH COMPONENT');\r\n    const {userData, globals, getMsgs, messageData, showToast, apiCall} = useContext(GlobalContext);\r\n    \r\n    const [mapInputs, setMapInputs] = useState({\r\n        latitude: userData.position.lat,\r\n        longitude: userData.position.lng\r\n    });\r\n    \r\n    async function setNewLocation(){\r\n        let data = {\r\n            lat: mapInputs.latitude,\r\n            lng: mapInputs.longitude\r\n        }\r\n        let response = await apiCall(globals.varNames.apiPath + 'user/setLocation', data);  \r\n        console.log('response; ', response);\r\n        if(response.status == 1){\r\n            userData.position.lat = mapInputs.latitude;\r\n            userData.position.lng = mapInputs.longitude;\r\n            showToast('Location changed successfully.', 3, false);      \r\n        }\r\n    }\r\n    \r\n    // let initialRegion = {\r\n    //     latitude: mapInputs.latitude,\r\n    //     longitude: mapInputs.longitude,\r\n    //     latitudeDelta: 50,\r\n    //     longitudeDelta: 0.9,\r\n    // }\r\n\r\n    function mapPressed(response){\r\n        console.log('map pressed');\r\n        console.log('response: ', response);\r\n        \r\n        // setMapInputs({\r\n        //     latitude: response.nativeEvent.coordinate.latitude, \r\n        //     longitude: response.nativeEvent.coordinate.longitude\r\n        // });\r\n        setMapInputs({\r\n            latitude: response.lat, \r\n            longitude: response.lng\r\n        });\r\n    }\r\n\r\n    let defaultProps = {\r\n        center: {\r\n            lat: userData.position.lat,\r\n            lng: userData.position.lng\r\n        },\r\n        zoom: 11\r\n    };\r\n\r\n    function onClickMarker(){\r\n\r\n    }\r\n    \r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        // <View style = {{flex: 1}}>\r\n        //     <MapView initialRegion={initialRegion} style={{flex: 1}} onPress={mapPressed}>\r\n        //         <Marker coordinate={mapInputs} />\r\n        //     </MapView> \r\n\r\n            \r\n        //     <View style={{flexDirection: 'row-reverse', marginTop: 5}}>\r\n        //         <Button raised accent text='Set Location' onPress={setNewLocation} />\r\n        //     </View>\r\n            \r\n            \r\n            \r\n        // </View>\r\n        <div style={{flex: 1}} className='d-flex flex-column mb-1'>\r\n            <div style={{flex: 1}}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyCpkBTMH6jnPgDEljN1vNW6HSofABjyzAk\" }}\r\n                    defaultCenter={defaultProps.center}\r\n                    defaultZoom={defaultProps.zoom}\r\n                    onClick={mapPressed}\r\n                    >\r\n                        <Marker\r\n                            onClick={onClickMarker}\r\n                            // key={groser.userid}\r\n                            lat={mapInputs.latitude}\r\n                            lng={mapInputs.longitude}\r\n                            text={0}\r\n                        />\r\n                        \r\n                \r\n                </GoogleMapReact>\r\n                \r\n            </div>   \r\n            <div className='px-3 d-flex flex-column mt-1'>\r\n                <Button variant=\"contained\" onClick={setNewLocation}>Set Location</Button>\r\n            </div> \r\n            \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'; \r\n// import {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Note({note}) {\r\n\tconsole.log('LIST')\r\n    \r\n\r\n    return (\r\n        <p className='m-0' style={{fontSize: 12}}>Note: {note}</p>\r\n        \r\n        \r\n        // <Text onPress={()=>showOtherUser(username)} style={{...style, color: 'blue', fontWeight: 'bold'}}>@{username}</Text>\r\n    );\r\n}","\r\nimport React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Note from '../common/HtmlComponents/Note';\r\n\r\n\r\nexport default function SetGroserMode() {\r\n    console.log('MAP SEARCH COMPONENT');\r\n    const {userData, globals, appData, getMsgs, messageData, forceUpdate, apiCall, showToast} = useContext(GlobalContext);\r\n    const [mode, setMode] = useState(userData.groserMode);\r\n\r\n    const [settingsInputs, setSettingsInputs] = useState({\r\n        lat: userData.position.lat,\r\n        lng: userData.position.lng\r\n    });\r\n    \r\n    async function setGroserMode(){\r\n        \r\n        let modeFinal = 1;\r\n        if(!mode){\r\n            modeFinal = 0; \r\n            // userData.groserMode = false;   \r\n        }\r\n\r\n        // forceUpdate();\r\n        let data = {\r\n            mode: modeFinal\r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.apiPath + 'user/setGroserMode', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            userData.groserMode = mode;  \r\n            showToast('Mode changed successfully.', 3, false);\r\n                 \r\n        }\r\n        \r\n    } \r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(mode != userData.groserMode){\r\n            setGroserMode();\r\n        }\r\n        \r\n    }, [mode]);\r\n\r\n    let label = 'Shop';\r\n    if(userData.isShappers){\r\n        label = 'Shopper';\r\n    }\r\n    // let label = 'ON';\r\n    // if(!userData.groserMode){\r\n    //     label = 'OFF';\r\n    // }\r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span style={{paddingTop: 9}}>{label} Mode:        </span>\r\n                \r\n                {/* <Button style={{container: {alignSelf: 'flex-start'}}} raised primary text={label} onPress={setGroserMode} /> */}\r\n                <Switch\r\n                    checked={mode}\r\n                    onChange={(e)=>setMode(e.target.checked)}\r\n                    name=\"checkedA\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n                \r\n            \r\n                \r\n                \r\n            </div>\r\n            <Note note={'Turning this on will make your location public.'} />\r\n            {/* <p style={{paddingTop: 9}}>Note: Turning this on will make your location public.</p> */}\r\n        </div>\r\n        \r\n    );\r\n}","import React, {useState, useContext} from 'react'; \r\n// import {GlobalContext} from '../common/Context/GlobalProvider';\r\n// import GoogleMapReact from 'google-map-react';\r\n// import { View } from 'react-native';\r\n\r\n\r\nimport MapSearchComponent from '../Components/MapSearchComponent';\r\nimport InsidePageWrapper from '../common/HtmlComponents/InsidePageWrapper';\r\nimport SetLocation from '../Components/SetLocation'; \r\nimport SetGroserMode from '../Components/SetGroserMode'; \r\n\r\n// import { Container, Header, Content, Button, Text, Input, Item } from 'native-base';\r\n// import Tab from '../HtmlComponents/Tab';\r\n\r\nexport default function MapPage() {\r\n    console.log('MAP PAGE');\r\n    // const {userData} = useContext(GlobalContext);\r\n    const [mapData, setMapData] = useState({\r\n        tab: 'search'\r\n    });\r\n    \r\n    function onChangeTab(page){\r\n        setMapData({...mapData, tab: page});\r\n        \r\n    }\r\n\r\n    let tabPage = <MapSearchComponent/>;\r\n\r\n    \r\n\r\n    if(mapData.tab === 'Settings'){\r\n        tabPage = <div style={{flex: 1}} className='d-flex flex-column p-2'>\r\n            <SetLocation />\r\n            <SetGroserMode />\r\n        </div>;\r\n    }\r\n    \r\n    return (\r\n        // <View style={{flex: 1}}>\r\n        //     <Tab headers={['Search', 'Settings']} onChangeTab={onChangeTab} />\r\n           \r\n        //     {tabPage}\r\n            \r\n        // </View>\r\n        <InsidePageWrapper onChangeTab={onChangeTab} tabs={['Search', 'Settings']} style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            {tabPage}    \r\n        </InsidePageWrapper>\r\n    );\r\n}","\r\nimport React, { useState, useContext, useRef, useEffect } from 'react'; \r\n\r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport {Card, Button, Avatar} from '@material-ui/core';\r\n\r\n\r\n// import ErrorLog from './ErrorLog';\r\n// import * as ImagePicker from 'expo-image-picker';\r\n// import { Text } from 'native-base';\r\n\r\nexport default function UploadPhoto({setImage, image, uploadPhoto, imgURL}) {\r\n    // const {userData, globals, getUserData, changePage} = useContext(GlobalContext);\r\n    // const [error, setError] = useState('');\r\n    \r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         if (Platform.OS !== 'web') {\r\n    //             const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\r\n    //             if (status !== 'granted') {\r\n    //                 alert('Sorry, we need camera roll permissions to make this work!');\r\n    //             }\r\n    //         }\r\n    //     })();\r\n    // }, []);\r\n    const inputRef = useRef(null);\r\n    function onPressChoose(){\r\n        console.log('input ref: ', inputRef);\r\n        inputRef.current.click();\r\n    }\r\n\r\n    function onChangePhoto(e){\r\n        console.log('files: ', e.target.files);\r\n        setImage(e.target.files[0]);\r\n        \r\n    }\r\n\r\n    // function onPressUpload(e){\r\n    //     console.log('files: ', e.target.files);\r\n    //     setImage(e.target.files[0]);\r\n        \r\n    // }\r\n\r\n    // const pickImage = async () => {\r\n    //     console.log('pick image');\r\n    //     let result = await ImagePicker.launchImageLibraryAsync({\r\n    //         mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n    //         allowsEditing: true,\r\n    //         aspect: [4, 3],\r\n    //         quality: 1,\r\n    //     });\r\n\r\n    //     console.log(result);\r\n\r\n    //     if (!result.cancelled) {\r\n    //         let imageInitial = result;\r\n    //         const uri = imageInitial.uri;\r\n    //         const uriParts = uri.split('.');\r\n        \r\n    //         const fileType = uriParts[uriParts.length - 1];\r\n    //         console.log('uri parts: ', uriParts);\r\n    //         const uriParts2 = uri.split('/');\r\n    //         console.log('uri parts2', uriParts2);\r\n            \r\n    //         if(fileType == 'png' || fileType == 'jpg'){\r\n    //             setError('');\r\n    //             setImage({\r\n    //                 uri,\r\n    //                 name: uriParts2[uriParts2.length - 1],\r\n    //                 type: fileType\r\n    //             });\r\n    //         }else{\r\n    //             setError('Image must be a .png or .jpg file.');\r\n    //         }\r\n            \r\n            \r\n    //     }\r\n    // };\r\n\r\n    \r\n    // let photo = null;\r\n    // let uri = null;\r\n\r\n    let imgURI = imgURL;\r\n    if(image != null){\r\n        console.log('image: ', image);\r\n        \r\n        imgURI = URL.createObjectURL(image);\r\n        // if(image != null){\r\n            \r\n        // }\r\n        \r\n        // photo = <Image source={{ uri: image.uri }} style={{ width: '100%', flex: 1 }} />;\r\n        // uri = <Text h4 h4Style={{fontSize: 12}}>{image.name}</Text>\r\n        // photo = <Avatar alt=\"Remy Sharp\" src={imgURI} />\r\n    }\r\n\r\n    return (\r\n        // <View>\r\n        //     <View style={{minHeight: 200, width: '100%', marginBottom: 5, borderWidth: 1}}>\r\n        //         {photo}\r\n        //     </View>\r\n        //     <Text>{uri}</Text>\r\n           \r\n        //     <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n        //         <Button style={{container: {marginRight: 2}}} raised primary text='Select Image' onPress={pickImage} />\r\n        //         <Button raised primary text='Upload' onPress={uploadPhoto} />\r\n        //     </View>\r\n        //     <ErrorLog error={error} />\r\n            \r\n        // </View>\r\n        <div className='d-flex flex-column'>\r\n            <Avatar className='mb-2' variant='square' style={{alignSelf: 'center', height: 100, width: 100}} alt=\"Image\" src={imgURI} />\r\n            <input\r\n                accept=\"image/*\"\r\n                className='d-none'\r\n                id=\"contained-button-file\"\r\n                // single={true}\r\n                type=\"file\"\r\n                onChange={onChangePhoto}\r\n                ref={inputRef}\r\n            />\r\n            <div className='d-flex'>\r\n                <Button className='mr-1' variant=\"contained\" onClick={onPressChoose}>Choose</Button>\r\n                <Button className='' variant=\"contained\" onClick={uploadPhoto}>Upload</Button>\r\n                {/* <Button className='mr-1' onClick={onPressChoose} variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Choose Photo\r\n                </Button> */}\r\n                {/* <Button onClick={uploadPhoto} variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Upload  \r\n                </Button> */}\r\n            </div>\r\n            \r\n            {/* <label htmlFor=\"contained-button-file\">\r\n                \r\n            </label> */}\r\n            \r\n        </div>\r\n    );\r\n}","import Axios from 'axios';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react'; \r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\n\r\nimport UploadPhoto from '../HtmlComponents/UploadPhoto';\r\n// import Title from '../HtmlComponents/Title';\r\n\r\n\r\n\r\n\r\nexport default function UploadProfilePhoto() {\r\n    const {userData, globals, getUserData, appData, randomStr, getApiPath, showToast} = useContext(GlobalContext);\r\n\r\n    let photoURI = '';\r\n    \r\n    \r\n    if(userData.isSosyal){\r\n        if(userData.sosyalData.imgURL != ''){\r\n            photoURI = globals.varNames.imgPathBlags + userData.sosyalData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword;\r\n        }\r\n        \r\n    }else{\r\n        if(userData.imgURL != ''){\r\n            photoURI = globals.varNames.imgPath + userData.imgURL + '/' + userData.userID + '/' + userData.photoPassword;\r\n        }\r\n    }\r\n\r\n    const [image, setImage] = useState(null);\r\n\r\n    // const [image, setImage] = useState({\r\n    //     uri: photoURI\r\n    // })\r\n\r\n    \r\n\r\n    \r\n\r\n    // const uploadPhoto = async () => {\r\n    //     const formData = new FormData();\r\n        \r\n    //     const uri = image.uri;\r\n    //     const uriParts = uri.split('.');\r\n      \r\n    //     const fileType = uriParts[uriParts.length - 1];\r\n    //     console.log('uri parts: ', uriParts);\r\n    //     const uriParts2 = uri.split('/');\r\n    //     console.log('uri parts2', uriParts2);\r\n    //     formData.append('file', {\r\n    //         uri,\r\n    //         name: uriParts2[uriParts2.length - 1],\r\n    //         type: `image/${fileType}`,\r\n    //     });\r\n    //     formData.append('userID', userData.userID);\r\n    //     // data.append('file', photo);\r\n    //     var options = {\r\n    //         method: 'post',\r\n    //         url: getApiPath() + 'user/uploadProfile',\r\n    //         data: formData,\r\n    //         headers: {\r\n    //             'x-access-token': userData.token,\r\n    //             'version': appData.version,\r\n    //             'sosyal-version': appData.versionSosyal,\r\n    //             'photo-token': randomStr(5)\r\n    //         }\r\n    //     }\r\n    //     var response = await Axios(options);\r\n    //     console.log('response: ', response.data);\r\n    //     if(response.status == 1){\r\n\r\n    //     }\r\n    //     // console.log(result);\r\n    \r\n        \r\n    // };\r\n\r\n    async function uploadPhoto(){\r\n        let formData = new FormData();\r\n        formData.append('file', image);\r\n        formData.append('userID', userData.userID);\r\n        let options = {\r\n            method: 'post',\r\n            url: getApiPath() + 'user/uploadProfile',\r\n            data: formData,\r\n            headers: {\r\n                'x-access-token': userData.token,\r\n                'version': appData.version,\r\n                'sosyal-version': appData.versionSosyal,\r\n                'photo-token': randomStr(5)\r\n            }\r\n        }\r\n        let response = await Axios(options);\r\n        console.log('response: ', response.data);\r\n        let isError = false;\r\n        if(response.data.status == 1){\r\n            \r\n            // closeModal();   \r\n        }else{\r\n            isError = true;\r\n            // showToast(response.data.message, 5, false);   \r\n        }\r\n        showToast(response.data.message, 3, isError);\r\n    }\r\n    \r\n    return (\r\n        <div className='d-flex flex-column py-2 border-bottom'>\r\n            {/* <Title title='Upload Photo'/> */}\r\n            <h5 style={{alignSelf: 'flex-end'}}>Upload Photo</h5>\r\n            <UploadPhoto imgURL={photoURI} setImage={setImage} image={image} uploadPhoto={uploadPhoto} />\r\n            \r\n        </div>\r\n    );\r\n}","// import Axios from 'axios';\r\nimport React, {useState, useContext, useRef} from 'react'; \r\n// import {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\n\r\nexport default function ErrorLog({error}) {\r\n    console.log('AppModal');\r\n    console.log('err: ', error);\r\n    // const {userData, globals, getUserData, forceUpdate, appModalData} = useContext(GlobalContext);\r\n    // let bgColor = COLOR.white;\r\n    let text = null;\r\n    if(error != ''){\r\n        // bgColor = COLOR.red300;\r\n        text = <p className='m-0' style={{color: red[500], fontSize: 14}}>{error}</p>;\r\n        \r\n    }\r\n\r\n    // console.log('bg color: ', bgColor);\r\n    return (\r\n        // {div}\r\n        text\r\n       \r\n       \r\n    );\r\n}","import React, {useState, useContext} from 'react'; \r\n\r\n\r\nimport { GlobalContext } from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\nimport ErrorLog from '../HtmlComponents/ErrorLog';\r\n// import Title from '../HtmlComponents/Title';\r\n\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\nexport default function ChangePassword() {\r\n    const {userData, globals, showToast, apiCall, checkPassInput, checkRepeatPassInput} = useContext(GlobalContext);\r\n    const [passInputs, setPassInputs] = useState({\r\n        newPass: '',\r\n        repeatPass: '',\r\n        currentPass: '',\r\n        \r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        \r\n        password: '',\r\n        repeatPass: ''\r\n    });\r\n\r\n    const [error, setError] = useState('');\r\n    \r\n    async function changePass(){\r\n        console.log('change pass');\r\n        // var response = null;\r\n        if(errors.password != '' || errors.repeatPass != '' || passInputs.newPass == '' || passInputs.currentPass == '' || passInputs.repeatPass == ''){\r\n            \r\n            let msg = '';\r\n            if(errors.password != '' || errors.repeatPass != '' ){\r\n                msg = 'Please check errors.';\r\n                \r\n            }else{\r\n                if(passInputs.currentPass == ''){\r\n                    msg = 'Current password cannot be empty.';\r\n                }else if(passInputs.repeatPass == ''){\r\n                    msg = 'Repeat password cannot be empty.';   \r\n                }else{\r\n                    msg = 'New password cannot be empty.';    \r\n                }\r\n                  \r\n            }\r\n\r\n            showToast(msg, 3000);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            newPass: passInputs.newPass,\r\n            oldPass: passInputs.currentPass  \r\n        }\r\n        \r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/changePassword', data);\r\n       \r\n        \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            \r\n             \r\n        }\r\n    }\r\n\r\n\r\n    function onChangePass(e){\r\n        let text = e.target.value;\r\n        setPassInputs({...passInputs, newPass: text});\r\n        // checkInputs(text, passInputs.repeatPass);\r\n        // setError(checkPassInput(text));\r\n        setErrors({...errors, password: checkPassInput(text)});\r\n    }\r\n\r\n    function onChangeRepeatPass(e){\r\n        let text = e.target.value;\r\n        setPassInputs({...passInputs, repeatPass: text});\r\n        // checkInputs(passInputs.newPass, text);\r\n        // setError(checkRepeatPassInput(passInputs.newPass, text));\r\n        setErrors({...errors, repeatPass: checkRepeatPassInput(passInputs.newPass, text)});\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column border-bottom py-2'>\r\n            <h5 style={{alignSelf: 'flex-end'}}>Change Password</h5>\r\n            {/* <Title title='Change Password'/> */}\r\n            {/* <Item>\r\n                <Input onChangeText={onChangePass} placeholder=\"New Password\" />\r\n            </Item> */}\r\n            <TextField type={userData.production? 'password' : 'text'} onChange={onChangePass} id=\"standard-basic\" label=\"New Password\" />\r\n            <ErrorLog error={errors.password} />\r\n            {/* <Item>\r\n                <Input onChangeText={onChangeRepeatPass} placeholder=\"Repeat Password\" />\r\n            </Item> */}\r\n            <TextField type={userData.production? 'password' : 'text'} onChange={onChangeRepeatPass} id=\"standard-basic\" label=\"Repeat Password\" />\r\n            <ErrorLog error={errors.repeatPass} />\r\n            {/* <Item>\r\n                <Input onChangeText={(text)=>setPassInputs({...passInputs, currentPass: text})} placeholder=\"Current Password\" />\r\n            </Item> */}\r\n            <TextField type={userData.production? 'password' : 'text'} onChange={(e)=>setPassInputs({...passInputs, currentPass: e.target.value})} id=\"standard-basic\" label=\"Current Password\" />\r\n            <Button className='mt-3' variant=\"contained\" onClick={changePass}>Change</Button>\r\n            {/* <div style={{flexDirection: 'row', marginTop: 5}}>\r\n                <Button raised primary text='Change' onPress={changePass} />\r\n            </div> */}\r\n            \r\n            \r\n           \r\n        </div>\r\n\r\n    );\r\n}","import React, {useState, useContext} from 'react'; \r\n\r\n\r\nimport { GlobalContext } from '../../Context/GlobalProvider';\r\n\r\n\r\nimport {Button, TextField, InputLabel, FormControl, Select, MenuItem} from '@material-ui/core';\r\n// import ErrorLog from '../HtmlComponents/ErrorLog';\r\nimport Note from '../HtmlComponents/Note';\r\n\r\n\r\n\r\nexport default function EditProfile() {\r\n    const {userData, globals, showToast, apiCall, convertTagsStrToArrayStr, getApiPath, tagsNote, minBidNote, convertTagsToStr, countries, convertNumToStr, convertStrToNum} = useContext(GlobalContext);\r\n\r\n    let name = userData.name;\r\n    let description = userData.description;\r\n    let tags = userData.tags;\r\n    let country = userData.country;\r\n    let bidAmt = convertNumToStr(userData.bidAmt / 1000);\r\n\r\n    if(userData.isSosyal){\r\n        name = userData.sosyalData.name;\r\n        description = userData.sosyalData.description;\r\n        tags = userData.sosyalData.tags;\r\n        country = userData.sosyalData.country;\r\n        bidAmt = convertNumToStr(userData.sosyalData.bidAmt / 1000);\r\n    }\r\n\r\n    let tagsStr = convertTagsToStr(tags);\r\n\r\n    // let tagsArr = JSON.parse(tags);\r\n    // let tagsStr = '';\r\n    // tagsArr.forEach((tag, ndx) => {\r\n    //     tagsStr = tagsStr + tag + ' ';\r\n    // })\r\n\r\n    const [profileInputs, setProfileInputs] = useState({\r\n        name: name,\r\n        description: description,\r\n        tags: tagsStr,\r\n        country: country,\r\n        bidAmt: bidAmt\r\n        \r\n    });\r\n\r\n    // const [error, setError] = useState('');\r\n    \r\n    async function editProfile(){\r\n        console.log('change pass');\r\n        // var response = null;\r\n        if(profileInputs.name == '' || profileInputs.description == ''){\r\n            \r\n            let msg = '';\r\n            \r\n            if(profileInputs.name == ''){\r\n                msg = 'Name cannot be empty.';\r\n            }else if(profileInputs.description == ''){\r\n                msg = 'Description cannot be empty.';   \r\n            }\r\n\r\n            showToast(msg, 3, true);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n        // let tagsArray = profileInputs.tags.split(\" \");\r\n        let arrayStr = convertTagsStrToArrayStr(profileInputs.tags);\r\n        // console.log('wordArray: ', wordArray);\r\n        // tagsArray.forEach((tag) => {\r\n        //     parseInt(tag);\r\n        // })\r\n        let data = {\r\n            name: profileInputs.name,\r\n            description: profileInputs.description,\r\n            tags: arrayStr,\r\n            country: profileInputs.country,\r\n            bidAmt: convertStrToNum(profileInputs.bidAmt)  \r\n        }\r\n\r\n        let response = await apiCall(getApiPath() + 'user/editProfile', data);\r\n       \r\n        \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 3);      \r\n             \r\n        }\r\n    }\r\n\r\n    // function onChangePass(text){\r\n    //     setPassInputs({...passInputs, newPass: text});\r\n    //     // checkInputs(text, passInputs.repeatPass);\r\n    //     setError(checkPassInput(text));\r\n    // }\r\n\r\n    // function onChangeRepeatPass(text){\r\n    //     setPassInputs({...passInputs, repeatPass: text});\r\n    //     // checkInputs(passInputs.newPass, text);\r\n    //     setError(checkRepeatPassInput(passInputs.newPass, text));\r\n    // }\r\n\r\n    return (\r\n        <div className='d-flex flex-column mb-3 py-2'>\r\n            <h5 style={{alignSelf: 'flex-end'}}>Edit Profile</h5>\r\n            {/* <Title title='Edit Profile'/> */}\r\n            {/* <Item>\r\n                <Input value={profileInputs.name} onChangeText={(text)=>setProfileInputs({...profileInputs, name: text})} placeholder=\"Name\" />\r\n            </Item> */}\r\n            <TextField value={profileInputs.name} onChange={(e)=>setProfileInputs({...profileInputs, name: e.target.value})} id=\"standard-basic\" label=\"Name\" />\r\n            {/* <Item>\r\n                <Input value={profileInputs.description} onChangeText={(text)=>setProfileInputs({...profileInputs, description: text})} placeholder=\"Description\" />\r\n            </Item> */}\r\n            <TextField value={profileInputs.description} onChange={(e)=>setProfileInputs({...profileInputs, description: e.target.value})} id=\"standard-basic\" label=\"Description\" />\r\n            {/* <Item>\r\n                <Input value={profileInputs.tags} onChangeText={(text)=>setProfileInputs({...profileInputs, tags: text})} placeholder=\"Tags\" />\r\n            </Item> */}\r\n            <TextField value={profileInputs.tags} onChange={(e)=>setProfileInputs({...profileInputs, tags: e.target.value})} id=\"standard-basic\" label=\"Tags\" />\r\n            <Note note={tagsNote()} />\r\n            {/* <Item>\r\n                <Input value={profileInputs.bidAmt} onChangeText={(text)=>setProfileInputs({...profileInputs, bidAmt: text})} placeholder=\"Bid Amount\" />\r\n            </Item> */}\r\n            <TextField value={profileInputs.bidAmt} onChange={(e)=>setProfileInputs({...profileInputs, bidAmt: e.target.value})} id=\"standard-basic\" label=\"Bid Amount\" />\r\n            <Note note={minBidNote()} />\r\n            <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={profileInputs.country}\r\n                    onChange={(e)=>{setProfileInputs({...profileInputs, country: e.target.value})}}\r\n                >\r\n                    {countries.map((country, id) => {\r\n                        return (\r\n                            // <Picker.Item key={id} label={country} value={id} />\r\n                            <MenuItem key={id} value={id}>{country}</MenuItem>\r\n                        )\r\n                        \r\n                    })}\r\n                {/* <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n            </FormControl>\r\n            {/* <div style={{flexDirection: 'row'}}>\r\n                <Picker\r\n                    note\r\n                    mode=\"dropdown\"\r\n                    // style={{ width: 10 }}\r\n                    selectedValue={profileInputs.country}\r\n                    onValueChange={(value)=>{setProfileInputs({...profileInputs, country: value})}}\r\n                >\r\n\r\n                    {countries.map((country, id) => {\r\n                        return (\r\n                            <Picker.Item key={id} label={country} value={id} />\r\n                        )\r\n                        \r\n                    })}\r\n                    \r\n                </Picker>    \r\n            </div> */}\r\n            \r\n            {/* <ErrorLog error={error} /> */}\r\n            {/* <div style={{flexDirection: 'row', marginTop: 5}}>\r\n                <Button raised primary text='Edit' onPress={editProfile} />\r\n            </div> */}\r\n            <Button className='mt-3' variant=\"contained\" onClick={editProfile}>Edit</Button>\r\n            \r\n           \r\n        </div>\r\n\r\n    );\r\n}","import React, {useState, useContext} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\nimport UploadProfilePhoto from '../Components/UploadProfilePhoto';\r\nimport ChangePassword from '../Components/ChangePassword';\r\nimport EditProfile from '../Components/EditProfile';\r\n\r\nexport default function EditUserPage() {\r\n \r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='px-3 py-2'>\r\n            \r\n            <UploadProfilePhoto />\r\n            <ChangePassword/>\r\n            <EditProfile/>\r\n        </div>\r\n    );\r\n}\r\n\r\n ","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\n\r\n\r\n\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport UserInfoDiv from '../HtmlComponents/UserInfoDiv';\r\nimport UserImg from '../Components/UserImg';\r\nimport Tab from '../HtmlComponents/Tab';\r\nimport MoreInfo from '../HtmlComponents/MoreInfo';\r\nimport UserMoreInfo from '../HtmlComponents/UserMoreInfo';\r\n\r\nexport default function JoinRequestList({ joinRequest }) {\r\n    console.log('ITEM LIST')\r\n    const { globals, userData, showToast, openMsgModal, createUserInfo, apiCall, openYesNoModal, getApiPath } = useContext(GlobalContext);\r\n    \r\n    \r\n    async function acceptUser(){\r\n        \r\n        let response = await apiCall(getApiPath() + 'company/acceptUser', {reqID: joinRequest.id});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('User accepted successfully.', 3, false);\r\n        }\r\n    }\r\n\r\n    async function denyUser(){\r\n        \r\n        let response = await apiCall(getApiPath() + 'company/denyUser', {reqID: joinRequest.id});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('User denied successfully.', 3, false);\r\n        }\r\n    }\r\n    \r\n\r\n    function onButtonsPressed(button){\r\n        console.log('button: ', button);\r\n        if(button == 'Accept'){\r\n            // acceptUser();\r\n            openYesNoModal('Accept user?', acceptUser)\r\n        }else if(button == 'Deny'){\r\n            openYesNoModal('Deny user?', denyUser)\r\n            // denyUser();\r\n        }\r\n    }\r\n\r\n    let photoPassword = userData.photoPassword;\r\n    let imgPath = globals.varNames.imgPath;\r\n    if(userData.isSosyal){\r\n        photoPassword = userData.sosyalData.photoPassword;\r\n        imgPath = globals.varNames.imgPathBlags;\r\n    }\r\n\r\n    let url = 'http';\r\n    \r\n    if(joinRequest.imgurl != ''){\r\n        url = imgPath + joinRequest.imgurl + '/' + userData.userID + '/' + photoPassword\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n\r\n    let userInfo = createUserInfo(joinRequest, false);\r\n\r\n    return (\r\n        <Paper elevation={2} className='px-2'>\r\n            <UserInfoDiv imgPathBegin={imgPath} userInfo={userInfo} photoPassword={photoPassword} />\r\n            {/* <div className='d-flex'>\r\n                <UserImg imgPathBegin={imgPath} imgURL={joinRequest.imgurl} userID={userData.userID} photoPassword={photoPassword} />\r\n                \r\n                <div className='ml-2'>\r\n                    <UserLink verified={joinRequest.verifieduser} username={joinRequest.username} />\r\n                    <h6>{joinRequest.name}</h6>\r\n                    <MoreInfo>\r\n                        <Rating size={17} isVerified={false} rating={joinRequest.rating} numOfRaters={joinRequest.numofraters} />\r\n                        <Rating size={17} isVerified={true} rating={joinRequest.ratingverified} numOfRaters={joinRequest.numofratersverified} />   \r\n                    </MoreInfo>\r\n                    <UserMoreInfo isSosyal={userData.isSosyal} includeCompany={false} user={joinRequest} />\r\n                   \r\n                    <Text>{JSON.stringify(joinRequest)}</Text>\r\n                </div>\r\n                \r\n            </div> */}\r\n            <Tab headers={['Accept', 'Deny']} onChangeTab={onButtonsPressed} />\r\n            \r\n        </Paper>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\nimport PageNav from './PageNav';\r\nimport JoinRequestList from '../List/JoinRequestList';\r\n\r\n\r\n\r\n\r\n\r\nexport default function JoinRequests({coID}) {\r\n    console.log('JOIN REQUESTS');\r\n    const {userData, getApiPath, apiCall, showPageNav, closePageNav} = useContext(GlobalContext);\r\n    // const [startPt, setStartPt] = useState(0);\r\n    const [joinReqs, setJoinReqs] = useState([]);\r\n    \r\n    \r\n    // console.log('msg headers:', messageData.msgHeaders);\r\n\r\n    async function getRequests(startPt){\r\n        let data = {\r\n            coID: coID,\r\n            startPoint: startPt\r\n        }\r\n        let response = await apiCall(getApiPath() + 'company/getJoinRequests', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setJoinReqs(response.payload);\r\n            // setMsgHeaders(response.payload);\r\n            // messageData.msgHeaders = response.payload;\r\n            // console.log('message headers: ', messageData.msgHeaders);\r\n            // forceUpdate();\r\n        }     \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     getRequests();\r\n    // }, []);\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        showPageNav(getRequests);\r\n        getRequests(0);\r\n\r\n        return closePageNav\r\n    }, []);\r\n    \r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-2'>\r\n            \r\n            \r\n            <div style={{flex: 1, overflow: 'auto'}} className='mt-2 px-1'>\r\n                {joinReqs.map((joinReq) => {\r\n                    return <JoinRequestList joinRequest={joinReq} key={joinReq.id}/>\r\n                    \r\n                    \r\n                })}\r\n            </div>\r\n            \r\n            \r\n           \r\n\r\n            \r\n            {/* <div style={{alignItems: 'flex-end'}} className='d-flex flex-column px-3'>\r\n                <PageNav startPt={startPt} getItems={getRequests} setStartPt={setStartPt} isForward={true}/>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\n\r\nimport UserInfoDiv from '../HtmlComponents/UserInfoDiv';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport UserImg from '../Components/UserImg';\r\nimport Tab from '../HtmlComponents/Tab';\r\nimport MoreInfo from '../HtmlComponents/MoreInfo';\r\nimport UserMoreInfo from '../HtmlComponents/UserMoreInfo';\r\n\r\nexport default function MemberList({ member, fromUser }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, createUserInfo, getApiPath, apiCall, openYesNoModal, showToast } = useContext(GlobalContext);\r\n    \r\n    \r\n    async function removeUser(){\r\n        let userID = 0;\r\n        // let userID = member.userid;\r\n        if(member.userid != null){\r\n            userID = member.userid;\r\n        }else{\r\n            userID = member.id;\r\n        }\r\n        let response = await apiCall(getApiPath() + 'company/removeUser', {userID: userID});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('User removed successfully.', 3, false);\r\n        }\r\n    }\r\n    \r\n\r\n    // function onButtonsPressed(button){\r\n    //     console.log('button: ', button);\r\n    //     if(button == 'Accept'){\r\n    //         acceptUser();\r\n    //     }else if(button == 'Message'){\r\n    //         openMsgModal(customer.username);    \r\n    //     }else if(button = 'Cancel'){\r\n    //         openYesNoModal('Are you sure?', cancelHire);\r\n    //         // cancelHire();\r\n    //     }\r\n    // }\r\n    let btns = [];\r\n    if(fromUser){\r\n        btns = ['Remove'];\r\n    }\r\n\r\n    let photoPassword = userData.photoPassword;\r\n    let imgPath = globals.varNames.imgPath;\r\n    if(userData.isSosyal){\r\n        photoPassword = userData.sosyalData.photoPassword;\r\n        imgPath = globals.varNames.imgPathBlags;\r\n    }\r\n\r\n    let url = 'http';\r\n    \r\n    if(member.imgurl != ''){\r\n        url = imgPath + member.imgurl + '/' + userData.userID + '/' + photoPassword\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n    let userInfo = createUserInfo(member, false);\r\n\r\n    return (\r\n        <Paper elevation={2} className='border-bottom p-2 mb-2'>\r\n            <UserInfoDiv imgPathBegin={imgPath} userInfo={userInfo} photoPassword={photoPassword} />\r\n            {/* <div className='d-flex'>\r\n                <UserImg imgPathBegin={imgPath} imgURL={member.imgurl} userID={userData.userID} photoPassword={photoPassword} />\r\n                \r\n                <div className='ml-2 d-flex flex-column'>\r\n                    \r\n                    <UserLink verified={member.verifieduser} username={member.username} />\r\n                    <span>{member.name}</span>\r\n                    <span>{member.description}</span>\r\n                    <UserMoreInfo isSosyal={userData.isSosyal} includeCompany={false} user={member} />\r\n                    <MoreInfo>\r\n                        <span>{member.description}</span>\r\n                        <Rating size={17} isVerified={false} rating={member.rating} numOfRaters={member.numofraters} />\r\n                        <Rating size={17} isVerified={false} rating={member.ratingverified} numOfRaters={member.numofratersverified} />\r\n                    </MoreInfo> \r\n                    \r\n                    \r\n                </div>\r\n                \r\n            </div> */}\r\n\r\n            <Tab headers={btns} onChangeTab={(tab)=>openYesNoModal('Remove user?', removeUser)} />\r\n            \r\n        </Paper>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\n// import PageNav from './PageNav';\r\n\r\n\r\n\r\n\r\nimport MemberList from '../List/MemberList';\r\n\r\n\r\nexport default function Members({coID, fromUser}) {\r\n    console.log('JOIN REQUESTS');\r\n    const {userData, globals, apiCall, getApiPath, showPageNav, closePageNav} = useContext(GlobalContext);\r\n    // const [startPt, setStartPt] = useState(0);\r\n    const [members, setMembers] = useState([]);\r\n    \r\n    \r\n    // console.log('msg headers:', messageData.msgHeaders);\r\n\r\n    async function getMembers(startPt){\r\n        let data = {\r\n            coID: coID,\r\n            startPoint: startPt\r\n        }\r\n        let response = await apiCall(getApiPath() + 'company/getMembers', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setMembers(response.payload);\r\n            // setMsgHeaders(response.payload);\r\n            // messageData.msgHeaders = response.payload;\r\n            // console.log('message headers: ', messageData.msgHeaders);\r\n            // forceUpdate();\r\n        }     \r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        showPageNav(getMembers);\r\n        getMembers(0);\r\n\r\n        return closePageNav\r\n    }, []);\r\n    \r\n    \r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column mt-1 px-2'>\r\n            \r\n            \r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-1'>\r\n                {members.map((member) => {\r\n                    return <MemberList fromUser={fromUser} member={member} key={member.id}/>\r\n                    \r\n                    \r\n                })}\r\n            </div>\r\n            \r\n            \r\n           \r\n            {/* <div style={{alignItems: 'flex-end'}} className='d-flex flex-column px-3'>\r\n                <PageNav startPt={startPt} getItems={getMembers} setStartPt={setStartPt} isForward={true}/>\r\n            </div> */}\r\n            \r\n            \r\n        </div>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport JoinRequests from '../Components/JoinRequests';\r\nimport Members from '../Components/Members';\r\n\r\nimport InsidePageWrapper from '../HtmlComponents/InsidePageWrapper';\r\n\r\nexport default function CompanyPage() {\r\n    console.log('COMPANY PAGE');\r\n    const {userData, globals, apiCall, countries, openSingleModal} = useContext(GlobalContext);\r\n    \r\n    \r\n    const [tab, setTab] = useState('Profile');\r\n    \r\n    // let profile = {\r\n    //     userID: userData.userID,\r\n    //     profileImgUrl: globals.varNames.imgPath + userData.imgURL,\r\n    //     username: userData.username,\r\n    //     name: userData.name,\r\n    //     country: countries[userData.country],\r\n    //     rate: userData.rating / 100\r\n    // }\r\n\r\n    \r\n    \r\n    let page = <JoinRequests coID={userData.userID} />;\r\n    if(tab == 'Members'){\r\n        // reviews, startPt, setStartPt, getReviews\r\n        page = <Members fromUser={true} coID={userData.userID} />;\r\n    }\r\n    // if(tab == '')\r\n    return (\r\n        // <View style={{flex: 1}}>\r\n            \r\n        //     <Tab headers={['Requests', 'Members']} onChangeTab={(tab)=>setTab(tab)}></Tab>\r\n            \r\n        //     {page}\r\n        // </View>\r\n\r\n        <InsidePageWrapper onChangeTab={(tab)=>setTab(tab)} tabs={['Requests', 'Members']}>\r\n            {page}\r\n        </InsidePageWrapper>\r\n    );\r\n}","import React, {useState, useContext, forwardRef, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport Note from '../HtmlComponents/Note';\r\n\r\nexport default function SendMoney() {\r\n    const {userData, globals, changePage, appData, getApiPath, apiCall, showToast} = useContext(GlobalContext);\r\n    const [depositInputs, setDepositInputs] = useState({\r\n        amount: 0,\r\n        address: '',\r\n        password: ''\r\n    });\r\n    \r\n    async function deposit(){\r\n        console.log('send money');\r\n        let data = {\r\n            amount: depositInputs.amount,\r\n            // address: depositInputs.address,\r\n            // password: depositInputs.password\r\n        }\r\n\r\n        \r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.apiPath + 'pay/deposit', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 3);\r\n        }\r\n    }\r\n    \r\n    \r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        <div className='d-flex flex-column px-5'>\r\n            {/* <Item>\r\n                <Input onChangeText={(text)=>setDepositInputs({...depositInputs, amount: text})} placeholder=\"Amount\" />\r\n            </Item> */}\r\n            {/* <Item>\r\n                <Input onChangeText={(text)=>setDepositInputs({...depositInputs, address: text})} placeholder=\"Address\" />\r\n            </Item>\r\n            <Item>\r\n                <Input onChangeText={(text)=>setDepositInputs({...depositInputs, password: text})} placeholder=\"Password\" />\r\n            </Item> */}\r\n            <p>Transfer cash from your Sosyal account.</p>\r\n            <TextField onChange={(e)=>setDepositInputs({...depositInputs, amount: e.target.value})} id=\"standard-basic\" label=\"Amount\" />\r\n            \r\n            <Button className='mt-2' variant=\"contained\" onClick={deposit}>Deposit</Button>\r\n            <Note note={'Deposit Fee is PHP ' + globals.minPayments.depositFee + '.'} />\r\n        </div>\r\n        \r\n    );\r\n}","import React, {useState, useContext, forwardRef, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport Note from '../HtmlComponents/Note';\r\n\r\nexport default function Withdraw() {\r\n    const {userData, globals, changePage, appData, consumptionNote, apiCall, getApiPath, showToast} = useContext(GlobalContext);\r\n    const [withdrawInputs, setWithdrawInputs] = useState({\r\n        amount: 0,\r\n        address: '',\r\n        \r\n    });\r\n    \r\n    async function withdraw(){\r\n        console.log('send money');\r\n        let data = {\r\n            amount: withdrawInputs.amount,\r\n            // address: withdrawInputs.address\r\n        }\r\n\r\n        // let apiPath = globals.varNames.apiPath + 'pay/';\r\n        // if(userData.isSosyal){\r\n        //     apiPath = globals.varNames.blagsApiPath + 'walet/';\r\n        // }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.apiPath + 'pay/withdraw', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 3);    \r\n        }\r\n    }\r\n    console.log('user data token: ', userData.token);\r\n    \r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        <div className='d-flex flex-column px-5'>\r\n            \r\n            \r\n           \r\n            <p>Transfer cash to your Sosyal account.</p>\r\n            <TextField onChange={(e)=>setWithdrawInputs({...withdrawInputs, amount: e.target.value})} id=\"standard-basic\" label=\"Amount\" />\r\n            \r\n            <Button className='mt-2' variant=\"contained\" onClick={withdraw}>Withdraw</Button>\r\n            <Note note={consumptionNote()} />\r\n        </div>\r\n        \r\n    );\r\n}","\r\nimport React, {useState, useContext, forwardRef, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport Note from '../HtmlComponents/Note';\r\n\r\nexport default function SendMoney() {\r\n    const {userData, globals, openHintsModal, consumptionNote, convertEmptyStr, getApiPath, apiCall, openYesNoModal, showToast} = useContext(GlobalContext);\r\n    const [sendInputs, setSendInputs] = useState({\r\n        amount: 0,\r\n        username: ''\r\n    });\r\n    const [isTyping, setIsTyping] = useState(false);\r\n\r\n    // function onChangeSearchInput(e){\r\n    //     console.log('on search inputs pressed');\r\n    //     setIsTyping(true);\r\n    //     // setSearchInputs({s, searchValue: text})\r\n    //     setSendInputs({...sendInputs, username: e.target.value})\r\n    // }\r\n\r\n    async function sendMoney(){\r\n        console.log('send money');\r\n        let usernameCheck = convertEmptyStr(sendInputs.username);\r\n        if(usernameCheck == ''){\r\n            \r\n            let msg = 'Username cannot be empty.';\r\n            \r\n            \r\n            showToast(msg, 3, true);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n\r\n        var data = {\r\n            amount: sendInputs.amount,\r\n            username: sendInputs.username\r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(getApiPath() + 'pay/sendMoney', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Money sent successfully.', 3, false);\r\n        }\r\n    }\r\n    \r\n    function onSearchInputPressed(){\r\n        console.log('on search inputs pressed');\r\n        // if(!isTyping){\r\n        //     setIsTyping(true);         \r\n        //     // getHints()\r\n        // }\r\n\r\n        openHintsModal(sendInputs.username, true, (hint)=>setSendInputs({...sendInputs, username: hint}));\r\n        \r\n    }\r\n\r\n    // function onPressHint(hint){\r\n    //     console.log('get hints');\r\n        \r\n    //     // setSearchInputVal(hint);\r\n        \r\n    //     setIsTyping(false);\r\n    //     setSendInputs({...sendInputs, username: hint})\r\n    //     // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    // }\r\n\r\n    // let searchHints = null;\r\n    // if(isTyping){\r\n    //     searchHints = <SearchHints onPressClosed={()=>setIsTyping(false)} hintVal={sendInputs.username} onPressHint={onPressHint} isUser={true} />;\r\n    // }\r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        <div className='d-flex flex-column py-2 px-5'>\r\n            \r\n            <TextField  onChange={(e)=>setSendInputs({...sendInputs, amount: e.target.value})} id=\"standard-basic\" label=\"Amount\" />\r\n            <div style={{position: 'relative'}} className='d-flex flex-column'>\r\n                <TextField value={sendInputs.username} onClick={onSearchInputPressed} autoComplete='off' id=\"standard-basic\" label=\"Username\" />\r\n                {/* {searchHints} */}\r\n            </div>\r\n            \r\n            \r\n            <Button className='mt-2' variant=\"contained\" onClick={()=>openYesNoModal('Send PHP' + sendInputs.amount + ' to @' + sendInputs.username + '?', sendMoney)}>Send</Button>\r\n            <Note note={consumptionNote()} />\r\n        </div>\r\n        \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport {Link, Paper} from '@material-ui/core';\r\n\r\nexport default function TransactionList({ transaction }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, forceUpdate, dateToStr, openSingleModal, openYesNoModal } = useContext(GlobalContext);\r\n    \r\n\r\n    \r\n    let text = transaction.typeName;\r\n    let userComponent = null;\r\n    if(text == 'Receive'){\r\n        let userText = transaction.sendername;\r\n        text = 'Receive Money From ';\r\n\r\n        if(transaction.sender == userData.userID){\r\n            text = 'Send Money To ';\r\n            userText = transaction.receivername;\r\n        }\r\n        userComponent = <UserLink username={userText} />;\r\n    }else if(text == 'Withdraw Sosyal'){\r\n        if(userData.isSosyal){\r\n            text = 'Transfer from ';\r\n            userComponent = <UserLink username={transaction.sendername} />\r\n        }else{\r\n            text = 'Withdraw(Sosyal)';\r\n        }          \r\n    }else if(text == 'Deposit Sosyal'){\r\n        if(userData.isSosyal){\r\n            text = 'Transfer to ';\r\n            userComponent = <UserLink username={transaction.sendername} />\r\n        }else{\r\n            text = 'Deposit(Sosyal)';\r\n        }     \r\n    }\r\n\r\n    let labelComponent = <h6 style={{fontWeight: 700}}>\r\n        {text}\r\n        {userComponent}\r\n    </h6>\r\n\r\n    return (\r\n        <Paper className='border-bottom py-2 mb-2 px-3 d-flex flex-column'>\r\n            {labelComponent}\r\n            <span style={{fontSize: 14}}>Php {transaction.amount}</span>\r\n            <span style={{fontSize: 12, alignSelf: 'flex-end'}}>{dateToStr(transaction.datecreated)}</span>\r\n            {/* <Text>{JSON.stringify(transaction)}</Text> */}\r\n            {/* <div className='d-flex flex-column'>\r\n                \r\n               \r\n                \r\n            </div> */}\r\n            \r\n            \r\n        </Paper>\r\n        \r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\n\r\n// import PageNav from './PageNav';\r\n\r\n\r\n\r\nimport TransactionList from '../List/TransactionList';\r\n\r\nexport default function Transactions() {\r\n    console.log('MESSAGE HEADERS');\r\n    const {userData, globals, closePageNav, showPageNav, apiCall, messageData, forceUpdate, getApiPath, openMsgModal} = useContext(GlobalContext);\r\n    // const [startPt, setStartPt] = useState(0);\r\n    const [transactions, setTransactions] = useState([]);\r\n    \r\n    \r\n    // console.log('msg headers:', messageData.msgHeaders);\r\n\r\n    async function getTransactions(startPt){\r\n        let response = await apiCall(getApiPath() + 'pay/getTxs', {startPoint: startPt});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setTransactions(response.payload);\r\n            // messageData.msgHeaders = response.payload;\r\n            // console.log('message headers: ', messageData.msgHeaders);\r\n            // forceUpdate();\r\n        }     \r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getTransactions();\r\n        showPageNav(getTransactions); \r\n        getTransactions(0); \r\n        return closePageNav\r\n    }, []);\r\n    \r\n    // let modal = null;\r\n    // if(newMsgModal){\r\n    //     modal = <NewMsgModal closeModal={()=>setNewMsgModal(false)}/>\r\n    // }\r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n           \r\n            <h5 style={{alignSelf: 'flex-end'}} className='mb-3 mr-2'>Transactions</h5>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-2'>\r\n                {transactions.map((transaction) => {\r\n                    return <TransactionList transaction={transaction} key={transaction.id}/>\r\n                    \r\n                    \r\n                })}\r\n            </div>\r\n            \r\n            \r\n           \r\n            {/* <div className='border-top'>\r\n                <PageNav startPt={startPt} getItems={getTransactions} setStartPt={setStartPt} isForward={true}/>\r\n            </div> */}\r\n            \r\n            \r\n        </div>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport Deposit from '../Components/Deposit';\r\nimport Withdraw from '../Components/Withdraw';\r\nimport SendMoney from '../Components/SendMoney';\r\nimport Transactions from '../Components/Transactions';\r\n\r\nimport InsidePageWrapper from '../HtmlComponents/InsidePageWrapper';\r\n\r\nexport default function WalletPage() {\r\n    const {userData, globals, apiCall, countries} = useContext(GlobalContext);\r\n    \r\n    let balance = userData.balance;\r\n    if(userData.isSosyal){\r\n        balance = userData.sosyalData.balance;\r\n    }\r\n    const [tab, setTab] = useState('Profile');\r\n\r\n    \r\n    \r\n    let page = <SendMoney />;\r\n    if(tab == 'Deposit'){\r\n        // reviews, startPt, setStartPt, getReviews\r\n        page = <Deposit />;\r\n    }else if(tab == 'Withdraw'){\r\n        page = <Withdraw/>\r\n    }else if(tab == 'Transactions'){\r\n        page = <Transactions/>\r\n    }\r\n\r\n    let tabs = ['Send', 'Transactions'];\r\n    let sosyalBalLabel = null;\r\n    let moreTabs = [];\r\n    if(!userData.isSosyal){\r\n        tabs.push('More');\r\n        moreTabs = ['Deposit', 'Withdraw'];\r\n        // tabs.splice(1, 0, 'Deposit');\r\n        // tabs.splice(2, 0, 'Withdraw');\r\n        if(tab == 'Deposit' || tab == 'Withdraw'){\r\n            sosyalBalLabel = <h5>Sosyal Balance: {userData.sosyalData.balance / 100}</h5>;\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    // if(tab == '')\r\n    return (\r\n        // <View style={{flex: 1}}>\r\n        //     <Tab headers={['Send', 'Deposit', 'More']} moreTabs={['Withdraw', 'Txs']} onChangeTab={(tab)=>setTab(tab)}></Tab>\r\n        //     <Text style={{fontSize: 20, margin: 5}}>Balance: {balance/100}</Text>\r\n        //     {page}\r\n        // </View>\r\n\r\n        <InsidePageWrapper onChangeTab={(tab)=>setTab(tab)} tabs={tabs} moreTabs={moreTabs}>\r\n            <div className='px-3 mt-3'>\r\n                <h5>Balance: {balance / 100}</h5>\r\n                {sosyalBalLabel}\r\n            </div>\r\n            \r\n            {page}\r\n        </InsidePageWrapper>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport Tab from '../common/HtmlComponents/Tab';\r\nimport UserInfoDiv from '../common/HtmlComponents/UserInfoDiv';\r\nimport DetailsDiv from '../common/Components/DetailsDiv';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\n\r\nexport default function ShapperList({ shapper }) {\r\n    console.log('ITEM LIST')\r\n    const { showOtherUser, userData, openMsgModal, apiCall, showToast, globals, openYesNoModal, createUserInfo, openSingleModal } = useContext(GlobalContext);\r\n    \r\n    \r\n\r\n    async function cancelHire(){\r\n        let data = {\r\n            type: 'shapper',\r\n            userID: shapper.userid   \r\n        }\r\n        let response = await apiCall(globals.varNames.apiPath + 'map/cancelHire', data); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 3, false);\r\n        }        \r\n    }\r\n\r\n    let imgPathBegin = globals.varNames.imgPath;\r\n    let photoPassword = userData.photoPassword;\r\n\r\n    let details = <DetailsDiv info={shapper} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />;\r\n\r\n    function onButtonsPressed(button){\r\n        console.log('button: ', button);\r\n        if(button == 'Message'){\r\n            // username, msg, msgID, headerID\r\n            openMsgModal(shapper.username, '', 0, 0);\r\n        }else if(button == 'Cancel'){\r\n            openYesNoModal('Cancel the services of this user.', cancelHire);\r\n            // cancelHire();\r\n        }else if(button == 'More Info'){\r\n            openSingleModal('Details', {div: details});\r\n            // cancelHire();\r\n        }\r\n    }\r\n\r\n    let url = 'http';\r\n    if(shapper.imgurl != ''){\r\n        url = globals.varNames.imgPath + shapper.imgurl + '/' + userData.userID + '/' + userData.photoPassword\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n\r\n    let userInfo = createUserInfo(shapper, false);\r\n    \r\n    return (\r\n        <Paper elevation={2} className='d-flex flex-column p-2'>\r\n            <div>\r\n                <UserInfoDiv userInfo={userInfo} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />\r\n                \r\n            </div>\r\n            \r\n            {/* <div className='d-flex'>\r\n                <UserImg imgPathBegin={imgPathBegin} imgURL={shapper.imgurl} userID={userData.userID} photoPassword={photoPassword} />\r\n                \r\n                <div className='d-flex flex-column ml-2'>\r\n                    <span>@{shapper.username}</span>\r\n                    \r\n                </div>\r\n            </div> */}\r\n            <Tab headers={['Message', 'Cancel', 'More Info']} onChangeTab={onButtonsPressed} moreTabs={[]} />\r\n        </Paper>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\n\r\nimport ShapperList from '../List/ShapperList';\r\n// import PageNav from '../common/Components/PageNav';\r\n\r\nexport default function ShappersDiv() {\r\n    console.log('other profile page');\r\n    const {userData, globals, apiCall, showPageNav, closePageNav} = useContext(GlobalContext);\r\n    const [startPt, setStartPt] = useState(0);\r\n    const [shappersData, setShappersData] = useState({\r\n        shappers: []\r\n    })\r\n\r\n    \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getShappers();\r\n        showPageNav(getShappers); \r\n        getShappers(0); \r\n        return closePageNav\r\n    }, []);\r\n    \r\n\r\n    async function getShappers(startPt){\r\n        // let data = {\r\n        //     headerID: headerID,\r\n        //     startPoint: startPoint\r\n        // }\r\n\r\n        // var response = await apiCall(state.globals.varNames.blagsApiPath + 'message/showMessages', data);\r\n        var data = {\r\n            \r\n            startPoint: startPt,\r\n            type: 'hiree'\r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.apiPath + 'map/getShappers', data);\r\n        if(response.status == 1){\r\n            setShappersData({...shappersData, shappers: response.payload});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-2 py-1'>\r\n                {shappersData.shappers.map((shapper) => {\r\n                    return (\r\n                        <ShapperList shapper={shapper} key={shapper.id}/>\r\n                        // <Card key={shapper.userid}>\r\n                        //     <Text>{JSON.stringify(shapper)}</Text>\r\n                        // </Card>\r\n                    )\r\n                    \r\n                })}\r\n            </div>\r\n            \r\n            {/* <PageNav startPt={startPt} getItems={getShappers} setStartPt={setStartPt} isForward={true}/> */}\r\n        </div>    \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport Tab from '../common/HtmlComponents/Tab';\r\nimport UserInfoDiv from '../common/HtmlComponents/UserInfoDiv';\r\nimport DetailsDiv from '../common/Components/DetailsDiv';\r\n// import ListCard from '../HtmlComponents/ListCard';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\n\r\nexport default function CustomerList({ customer }) {\r\n    console.log('ITEM LIST')\r\n    const { showOtherUserList, globals, userData, createUserInfo, openSingleModal, openMsgModal, cancelShapper, openYesNoModal } = useContext(GlobalContext);\r\n    \r\n    \r\n    function cancelHire(){\r\n        cancelShapper(customer.userid, 'customer');\r\n    }\r\n\r\n    let imgPathBegin = globals.varNames.imgPath;\r\n    let photoPassword = userData.photoPassword;\r\n\r\n    let details = <DetailsDiv info={customer} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />;\r\n    function onButtonsPressed(button){\r\n        console.log('button: ', button);\r\n        if(button == 'Items'){\r\n            showOtherUserList(customer.userid);\r\n        }else if(button == 'Message'){\r\n            // openMsgModal(customer.username);    \r\n            openMsgModal(customer.username, '', 0, 0);\r\n        }else if(button == 'Cancel'){\r\n            openYesNoModal('Cancel user?', cancelHire);\r\n            // cancelHire();\r\n        }else if(button == 'More Info'){\r\n            openSingleModal('Details', {div: details});\r\n            // cancelHire();\r\n        }\r\n    }\r\n\r\n    let url = 'http';\r\n    if(customer.imgurl != ''){\r\n        url = globals.varNames.imgPath + customer.imgurl + '/' + userData.userID + '/' + userData.photoPassword\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n\r\n    // let verifiedIcon = null;\r\n    // if(customer.verifieduser == 1){\r\n    //     verifiedIcon = <Icon name='check' color='green' />;\r\n    // }\r\n\r\n    \r\n\r\n    let userInfo = createUserInfo(customer, false);\r\n    return (\r\n        <Paper elevation={2} className='mb-2 p-2 d-flex flex-column'>\r\n            <div>\r\n                <UserInfoDiv userInfo={userInfo} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />\r\n                {/* <div className='d-flex'>\r\n                    <UserImg imgPathBegin={imgPathBegin} imgURL={customer.imgurl} userID={userData.userID} photoPassword={photoPassword} />\r\n                   \r\n                    <div className='d-flex flex-column'>\r\n                        \r\n                        <span>@{customer.username}</span>\r\n                        \r\n                        \r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            \r\n            <Tab headers={['Message', 'Cancel', 'More']} onChangeTab={onButtonsPressed} moreTabs={['Items', 'More Info']} />\r\n            {/* <Text>{JSON.stringify(customer)}</Text> */}\r\n        </Paper>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\nimport CustomerList from '../List/CustomerList';\r\n// import PageNav from '../common/Components/PageNav';\r\n\r\nexport default function CustomersDiv() {\r\n    console.log('other profile page');\r\n    const {userData, globals, apiCall, showPageNav, closePageNav} = useContext(GlobalContext);\r\n    // const [startPt, setStartPt] = useState(0);\r\n    const [customersData, setCustomersData] = useState({\r\n        customers: []\r\n    })\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getCustomers();\r\n        showPageNav(getCustomers); \r\n        getCustomers(0); \r\n        return closePageNav\r\n    }, []);\r\n    \r\n\r\n    async function getCustomers(startPt){\r\n        // let data = {\r\n        //     headerID: headerID,\r\n        //     startPoint: startPoint\r\n        // }\r\n\r\n        // var response = await apiCall(state.globals.varNames.blagsApiPath + 'message/showMessages', data);\r\n        var data = {\r\n            \r\n            startPoint: startPt,\r\n            type: 'hirer'\r\n        }\r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.apiPath + 'map/getShappers', data);\r\n        if(response.status == 1){\r\n            setCustomersData({...customersData, customers: response.payload});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-2 py-1'>\r\n                {customersData.customers.map((customer) => {\r\n                    return (\r\n                        <CustomerList customer={customer} key={customer.id}/>\r\n                        // <ListCard buttons={['Message', 'Cancel', 'Items']} onButtonsPressed={onButtonsPressed} >\r\n                        //     <Text>{JSON.stringify(customer)}</Text>\r\n                        // </ListCard>\r\n                        \r\n                    )\r\n                    \r\n                })}\r\n            </div>\r\n            \r\n            {/* <PageNav startPt={startPt} getItems={getCustomers} setStartPt={setStartPt} isForward={true}/> */}\r\n        </div>    \r\n    );\r\n}","import React, {useState, useContext} from 'react'; \r\n// import {GlobalContext} from '../Context/GlobalProvider';\r\n// import Tab from '../HtmlComponents/Tab';\r\nimport InsidePageWrapper from '../common/HtmlComponents/InsidePageWrapper';\r\nimport ShappersDiv from '../Components/ShappersDiv';\r\nimport CustomersDiv from '../Components/CustomersDiv';\r\n// import OtherProfilePage from './OtherProfilePage';\r\n\r\n\r\n\r\n\r\n\r\nexport default function ShappersPage() {\r\n    console.log('MESSAGES PAGE');\r\n    // const {userData, showToast} = useContext(GlobalContext);\r\n    const [viewingMsgs, setViewingMsgs] = useState(false);\r\n    const [page, setPage] = useState('Shoppers');\r\n    const [otherUser, setOtherUser] = useState({\r\n        isOpen: false,\r\n        username: ''\r\n    })\r\n\r\n    \r\n    let div = <ShappersDiv goToUserPage={(username)=>setOtherUser({isOpen: true, username: username})} />;\r\n    if(page == 'Customers'){\r\n        div = <CustomersDiv/>\r\n        // page = <ChatPage onPressBack={()=>setViewingMsgs(false)} headerID={chatData.id} />;\r\n    }\r\n\r\n    // let otherUserPage = null;\r\n    // if(otherUser.isOpen){\r\n    //     otherUserPage = <OtherProfilePage onPressBack={()=>setOtherUser({...otherUser, isOpen: false})} username={otherUser.username} />\r\n    // }\r\n    \r\n    return (\r\n        // <div style={{flex: 1}}>\r\n        //     <Tab onChangeTab={(header)=>setPage(header)} headers={['Shappers', 'Customers']} />\r\n        //     {otherUserPage}\r\n        //     {div}\r\n        // </div>\r\n        <InsidePageWrapper onChangeTab={(tab)=>setPage(tab)} tabs={['Shoppers', 'Customers']} moreTabs={[]}>\r\n            {div}\r\n        </InsidePageWrapper>\r\n    );\r\n}\r\n","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport PostsDiv from '../Components/PostsDiv';\r\n\r\n\r\nexport default function HomePage() {\r\n    const {userData, globals, apiCall, countries} = useContext(GlobalContext);\r\n    \r\n    \r\n    const [tab, setTab] = useState('Profile');\r\n    \r\n    \r\n    console.log('HOME PAGE');\r\n\r\n    \r\n    // if(tab == '')\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            {/* Home Page */}\r\n            {/* <View style={{flexDirection: 'row', padding: 50}}>\r\n                <TouchableOpacity onPress={example} style={{alignItems: 'center', elevation: 2, backgroundColor: COLOR.amber100}}>\r\n                    <Text style={{padding: 3}}>I'm TouchableOpacity!</Text>\r\n                </TouchableOpacity>\r\n            </View> */}\r\n            \r\n            <PostsDiv isProfilePage={false} userViewedID={userData.userID} isPostResult={false} postResult={null} />\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport {Link, Card, Paper} from '@material-ui/core';\r\n\r\nimport MoreInfo from '../HtmlComponents/MoreInfo';\r\n\r\n// import UserInfoDiv from '../HtmlComponents/UserInfoDiv';\r\n// import UserMoreInfo from '../HtmlComponents/UserMoreInfo';\r\n// import ExpandableDiv from '../HtmlComponents/ExpandableDiv';\r\n// import UserRatings from '../Components/UserRatings';\r\nimport UserImg from '../Components/UserImg';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\nimport DetailsDiv from '../Components/DetailsDiv';\r\n\r\nexport default function UserList({ user }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, forceUpdate, openSingleModal, showOtherPost } = useContext(GlobalContext);\r\n\r\n    // let url = 'http';\r\n    // const [showMoreInfo, setShowMoreInfo] = useState(false);\r\n    \r\n\r\n\r\n    \r\n\r\n    // let photoPassword = '';\r\n    // let imgPathBegin = '';\r\n    \r\n    let imgPathBegin = globals.varNames.imgPathBlags;\r\n    let photoPassword = userData.sosyalData.photoPassword;\r\n\r\n    if(!userData.isSosyal){\r\n        imgPathBegin = globals.varNames.imgPath;\r\n        photoPassword = userData.photoPassword;  \r\n    }\r\n\r\n    let moreInfo = <div>\r\n        <DetailsDiv info={user} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />    \r\n    </div>\r\n\r\n    return (\r\n       \r\n        <Paper elevation={2} className='d-flex flex-column mb-2 px-2'>\r\n            <div className='d-flex'>\r\n                <UserImg imgPathBegin={imgPathBegin} imgURL={user.imgurl} userID={userData.userID} photoPassword={photoPassword} />    \r\n                <div className='d-flex flex-column ml-2'>\r\n                    <UserLink verified={user.verifieduser} username={user.username} />\r\n                    <span style={styles.span}>{user.name}</span>\r\n                    <span style={styles.span}>{user.description}</span>\r\n                    <MoreInfo div={moreInfo} />  \r\n                </div>\r\n            </div>\r\n            \r\n            {/* <ExpandableDiv height={75}>\r\n                <div className='d-flex'>\r\n                    <UserImg imgPathBegin={imgPathBegin} imgURL={user.imgurl} userID={userData.userID} photoPassword={photoPassword} />\r\n                    <div className='d-flex flex-column ml-2'>\r\n                        <h6>{user.username}</h6>\r\n                        <UserLink verified={user.verifieduser} username={user.username} />\r\n                        <span style={styles.span}>{user.name}</span>\r\n                        <span style={styles.span}>{user.description}</span>\r\n                        <UserMoreInfo isSosyal={userData.isSosyal} user={user} />\r\n                        \r\n                        <MoreInfo>\r\n                            <Rating size={17} isVerified={false} rating={user.rating} numOfRaters={user.numofraters} />\r\n                            <Rating size={17} isVerified={true} rating={user.ratingverified} numOfRaters={user.numofratersverified} />    \r\n                            <span>@{user.companyusername}</span>\r\n                            <Rating size={17} isVerified={false} rating={user.companyrating} numOfRaters={user.companynumofraters} />\r\n                            <Rating size={17} isVerified={true} rating={user.companyratingverified} numOfRaters={user.companynumofratersverified} />    \r\n                        </MoreInfo>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n                <UserInfoDiv userInfo={user} imgPathBegin={imgPathBegin} photoPassword={photoPassword} includeCompany={true} />\r\n                \r\n            </ExpandableDiv> */}\r\n            \r\n            \r\n            {/* <Text>{user.id}</Text> */}\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    span: {\r\n        fontSize: 14\r\n    }   \r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Link, Button, Card, Paper} from '@material-ui/core';\r\n\r\nimport UserMoreInfo from '../HtmlComponents/UserMoreInfo';\r\n\r\n// import UserRatings from '../Components/UserRatings';\r\n// import UserImg from '../Components/UserImg';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\n// import Rating from '../HtmlComponents/Rating';\r\nimport Tab from '../HtmlComponents/Tab';\r\nimport SiteSpan from '../HtmlComponents/SiteSpan';\r\nimport MoreInfo from '../HtmlComponents/MoreInfo';\r\nimport DetailsDiv from '../Components/DetailsDiv';\r\n\r\nexport default function SerchItemList({ item, isUser }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, showToast, apiCall, openSingleModal, openYesNoModal, createUserInfo, convertTagsToStr } = useContext(GlobalContext);\r\n    const [showMoreInfo, setShowMoreInfo] = useState(false);\r\n\r\n    console.log('item: ', item);\r\n    console.log('item img: ', globals.varNames.itemsImgPath + item.imgurl);\r\n\r\n    async function deleteItem() {\r\n        console.log('DELETE ITEM')\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'serch/deleteItem', {itemID: item.id});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 5);\r\n        }\r\n        \r\n    }\r\n\r\n    function onButtonsPressed(button){\r\n        if(button == 'Edit'){\r\n            // [tags, description, name, id, siteUsername, bidAmt]\r\n            openSingleModal('New Serch Item', {name: item.name, description: item.description, link: item.link, id: item.id, tags: item.tags, siteUsername: item.siteusername, bidAmt: item.bidamt});   \r\n        // }else if(button == 'Delete'){\r\n        //     openSingleModal('Upload Item Photo', item);   \r\n        }else if(button == 'Delete'){\r\n            openYesNoModal('Delete this item?', deleteItem);   \r\n        }else if(button == 'Bid'){\r\n            openSingleModal('Bid', {bidAmt: item.bidamt, itemName: 'Serch Item', id: item.id, bidBal: item.bidbal});      \r\n        }\r\n    }\r\n\r\n    // let label = 'More Info';\r\n    // if(showMoreInfo){\r\n    //     label = 'Less Info';\r\n    // }\r\n    \r\n\r\n    let itemName = item.name;\r\n    let itemDescription = item.description;\r\n    let buttons = ['Edit', 'Delete', 'Bid'];\r\n    let moreInfoBtn = null;\r\n\r\n    let tagsStr = convertTagsToStr(item.tags);\r\n    let userText = null;\r\n    // let moreInfoLink = null;\r\n    // let tagsText = <span style={{color: 'blue'}}>{tagsStr}</span>;\r\n    let bidDiv = <div className='d-flex flex-column'>\r\n        <span>Bid Amount: {item.bidamt / 1000}</span>\r\n        <span>Bid Balance: {item.bidbal / 1000}</span>\r\n        <span>Search Tags: {convertTagsToStr(item.tags)}</span>   \r\n    </div>;\r\n\r\n    let ratingsDiv = null;\r\n    let borderTop = 'border-top';\r\n\r\n    \r\n    if(!isUser){\r\n        // username, rating, ratingVerified, numOfRaters, numOfRatersVerified, imgURL\r\n        let photoPassword = userData.sosyalData.photoPassword;\r\n        let imgPathBegin = globals.varNames.imgPathBlags;\r\n        \r\n        borderTop = '';\r\n        itemName = item.itemname;\r\n        itemDescription = item.itemdescription;\r\n        // let userInfo = createUserInfo(item.username, item.rating, item.ratingverified, item.numofraters, item.numofratersverified, item.imgurl);\r\n        // let companyInfo = createUserInfo(item.companyusername, item.companyrating, item.companyratingverified, item.companynumofraters, item.companynumofratersverified, item.companyimgurl);\r\n        // <Button variant=\"contained\" onClick={()=>openYesNoModal('Send PHP' + sendInputs.amount + ' to @' + sendInputs.username + '?', sendMoney)}>Send</Button>\r\n        buttons = [];\r\n        // moreInfoBtn = <Button onPress={()=>openSingleModal('Details', {info: item, imgPathBegin, photoPassword })} primary text=\"More Info\" />;\r\n        moreInfoBtn = <Button variant=\"contained\" onClick={()=>openSingleModal('Details', {info: item, imgPathBegin, photoPassword })}>More Info</Button>\r\n        userText = <UserLink verified={item.verifieduser} username={item.username} />;\r\n        // tagsText = null;\r\n        bidDiv = null;\r\n\r\n        // ratingsDiv = <div>\r\n        //     <Rating size={17} isVerified={false} rating={item.rating} numOfRaters={item.numofraters} />\r\n        //     <Rating size={17} isVerified={true} rating={item.ratingverified} numOfRaters={item.numofratersverified} />    \r\n        //     <span>@{item.companyusername}</span>\r\n        //     <Rating size={17} isVerified={false} rating={item.companyrating} numOfRaters={item.companynumofraters} />\r\n        //     <Rating size={17} isVerified={true} rating={item.companyratingverified} numOfRaters={item.companynumofratersverified} />        \r\n        // </div>\r\n\r\n        // ratingsDiv = <UserMoreInfo includeCompany={true} isSosyal={userData.isSosyal} user={item} />\r\n    }\r\n\r\n\r\n    let siteLabel = '';\r\n    if(item.siteusername != null){\r\n        siteLabel = '@' + item.siteusername;\r\n    }\r\n\r\n    let siteDiv = null;\r\n    if(item.siteusername != null){\r\n        siteDiv = <SiteSpan username={item.siteusername} />;\r\n    }\r\n\r\n    let mainDiv = <div className='d-flex flex-column'>\r\n        <Link style={{fontSize: 17, fontWeight: 600}} target='_blank' href={item.link}>{itemName}</Link>\r\n        <span style={styles.span}>{itemDescription}</span>\r\n        <span style={styles.span}>{item.link}</span>   \r\n        {siteDiv}\r\n    </div>\r\n\r\n    let imgPathBegin = globals.varNames.imgPathBlags;\r\n    let photoPassword = userData.sosyalData.photoPassword;\r\n    let details = <div className='d-flex flex-column'>\r\n        {mainDiv}\r\n        <DetailsDiv info={item} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />\r\n    </div>\r\n    let moreInfoLink = null;\r\n    if(!isUser){\r\n        moreInfoLink = <MoreInfo div={details} />\r\n    }\r\n    \r\n    return (\r\n        // <ListCard style={{padding: 5}} buttons={buttons} onButtonsPressed={onButtonsPressed}>\r\n           \r\n        //     <View>\r\n        //         <Text onPress={()=>Linking.openURL(item.link)} style={{fontSize: 20, fontWeight: 'bold'}}>{item.name}</Text> \r\n        //         <Text>{item.description}</Text>\r\n        //         <Text style={{color: 'blue'}}>{item.link}</Text>\r\n                \r\n        //         {tagsText}\r\n        //         {userText}\r\n        //         {bidDiv}\r\n                \r\n        //         <Text style={{color: 'blue'}}>{siteLabel}</Text>\r\n                \r\n        //         {moreInfoBtn}\r\n               \r\n        //     </View>\r\n        // </ListCard>\r\n        <Paper elevation={2} className='d-flex flex-column py-2 px-2 mb-2'>\r\n            <div height={90}>\r\n                <div className='d-flex flex-column'>\r\n                    {/* <Link style={{fontSize: 17, fontWeight: 600}} target='_blank' href={item.link}>{itemName}</Link>\r\n                    <span style={styles.span}>{itemDescription}</span>\r\n                    <span style={styles.span}>{item.link}</span> */}\r\n                    {mainDiv}\r\n                    {userText}\r\n                    {/* {siteDiv} */}\r\n                    {bidDiv}\r\n                    {moreInfoLink}\r\n                    \r\n                    \r\n                    {/* {ratingsDiv} */}\r\n                    {/* <div className='d-flex flex-column'>\r\n                        {tagsText}\r\n                        \r\n                    </div> */}\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className={borderTop}>\r\n                <Tab headers={buttons} onChangeTab={onButtonsPressed} moreTabs={[]} />\r\n            </div>\r\n            \r\n            {/* <p>{JSON.stringify(item)}</p>    */}\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    span: {\r\n        fontSize: 14\r\n    }   \r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n// import { View, ScrollView } from 'react-native';\r\n\r\n// import { Container, Header, Content, Button, Text, Input, Item } from 'native-base';\r\n// import SearchList from '../List/SearchList';\r\nimport UserList from '../List/UserList';\r\nimport SerchItemList from '../List/SerchItemList';\r\nimport PostList from '../List/PostList';\r\nimport ItemList from '../../List/ItemList';\r\n// import SearchHints from '../HtmlComponents/SearchHints';\r\n\r\n\r\n\r\n// import PageNav from '../Components/PageNav';\r\nimport Search from '../HtmlComponents/Search';\r\n// import Title from '../HtmlComponents/Title';\r\n\r\n// import { IconToggle } from 'react-native-material-ui';\r\n\r\n\r\n\r\nexport default function SearchDiv({isSearch}) {\r\n\tconsole.log('LIST')\r\n\tconst { userData, globals, funcDelayer, apiCall, openSingleModal, getApiPath, getSearchTags, showPageNav, closePageNav, convertStrToNum } = useContext(GlobalContext);\r\n    // const [startPoint, setStartPoint] = useState(0)\r\n    const [pageInitiated, setPageInitiated] = useState(false);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [timeOutID, setTimeOutID] = useState(0);\r\n    const [searchInputVal, setSearchInputVal] = useState('');\r\n    const [hints, setHints] = useState([]);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    // let timeOutID = 0;\r\n    let otherLabel = 'Item';\r\n    if(userData.isSosyal){\r\n        otherLabel = 'Posts';\r\n    }\r\n\r\n    let userSearchOnly = false;\r\n    if((!userData.isSosyal && userData.isShappers) || !isSearch){\r\n        userSearchOnly = true;\r\n    }\r\n\r\n    const [searchInputs, setSearchInputs] = useState({\r\n        // timeOutID: 0,\r\n        searchValue: '',\r\n        startPoint: 0,\r\n        usernameSearch: true,\r\n        searchType: 'username',\r\n        startPoint: 0,\r\n        numOfRaters: 0,\r\n        \r\n        \r\n        userSearch: true,\r\n        companySearchEnabled: false,\r\n        companySearch: {\r\n            searchType: 'username',\r\n            numOfRaters: 0,\r\n            searchValue: ''\r\n        },\r\n        otherLabel: otherLabel,\r\n        searchResults: [],\r\n        hints: []\r\n        \r\n    });\r\n\r\n    const [options, setOptions] = useState({\r\n        \r\n        \r\n        \r\n        \r\n        searchType: 'username',\r\n        \r\n        numOfRaters: 0,\r\n        searchValue: '',\r\n        \r\n        userSearch: true,\r\n        companySearchEnabled: false,\r\n        isVerifiedRatings: false,\r\n        companySearch: {\r\n            searchType: 'username',\r\n            numOfRaters: 0,\r\n            searchValue: '',\r\n            isVerifiedRatings: false,\r\n        },\r\n        otherLabel: otherLabel,\r\n        userSearchOnly: userSearchOnly,\r\n        isSearch: isSearch,\r\n        // allSite: false,\r\n        siteUsername: '' \r\n        \r\n    });\r\n\r\n    \r\n    \r\n    const [startPt, setStartPt] = useState(0);\r\n    // useEffect(() => { getItems() }, [])\r\n\r\n\r\n    \r\n    \r\n    function setSearchOptions(optionsModal){\r\n        \r\n        setOptions({\r\n            ...options,\r\n            userSearch: optionsModal.userSearch,\r\n            searchType: optionsModal.searchType,\r\n            numOfRaters: convertStrToNum(optionsModal.numOfRaters),\r\n            companySearchEnabled: optionsModal.companyEnabled,\r\n            isVerifiedRatings: optionsModal.isVerifiedRatings,\r\n            companySearch: {\r\n                searchType: optionsModal.company.searchType,\r\n                numOfRaters: convertStrToNum(optionsModal.company.numOfRaters),\r\n                searchValue: optionsModal.company.searchValue,\r\n                isVerifiedRatings: optionsModal.company.isVerifiedRatings,\r\n            },\r\n            siteUsername: optionsModal.siteUsername\r\n        })      \r\n        \r\n        setSearchResults([]);\r\n    }\r\n\r\n    // function onSearchInputPressed(){\r\n    //     console.log('on search inputs pressed');\r\n    //     if(!isTyping){\r\n    //         setIsTyping(true);         \r\n    //         getHints()\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // function onChangeSearchInput(text){\r\n    //     console.log('on search inputs pressed');\r\n    //     setIsTyping(true);\r\n    //     // setSearchInputs({s, searchValue: text})\r\n    //     setSearchInputVal(text);\r\n    // }\r\n\r\n    // async function getHints(){\r\n    //     console.log('get hints');\r\n    //     let tags = await getSearchTags(searchInputVal, 0, false);\r\n    //     setHints(tags);\r\n        \r\n    // }\r\n\r\n    // function onPressHint(hint){\r\n    //     console.log('get hints');\r\n    //     setSearchInputVal(hint);\r\n        \r\n    //     setIsTyping(false);\r\n    //     setOptions({...options, searchValue: hint});\r\n    //     // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    // }\r\n\r\n    async function search(){\r\n        console.log('search');\r\n        console.log('search options: ', searchInputs);\r\n        // timeOutID = getDelayer(timeOutID, getSearchedUsers);\r\n        // console.log('timeout id: ', timeOutID)\r\n        \r\n\r\n        \r\n\r\n        let userSearch = 0;\r\n        if(options.userSearch){\r\n            userSearch = 1;\r\n        }\r\n\r\n        let isVerifiedRatings = 0;\r\n        if(options.isVerifiedRatings){\r\n            isVerifiedRatings = 1;\r\n\r\n        }\r\n\r\n        let isVerifiedRatingsCo = 0;\r\n        if(options.companySearch.isVerifiedRatings){\r\n            isVerifiedRatingsCo = 1;\r\n        }\r\n        let data = {\r\n            \r\n            \r\n            searchValue: options.searchValue,\r\n            searchType: options.searchType,\r\n            startPoint: startPt,\r\n            numOfRaters: options.numOfRaters,\r\n            userSearch: userSearch,\r\n            isVerifiedRatings: isVerifiedRatings,\r\n            companySearchEnabled: options.companySearchEnabled,\r\n            searchValueCo: options.companySearch.searchValue,\r\n            searchTypeCo: options.companySearch.searchType,\r\n            numOfRatersCo: options.companySearch.numOfRaters,\r\n            isVerifiedRatingsCo: isVerifiedRatingsCo,\r\n            siteUsername: options.siteUsername           \r\n        }\r\n        \r\n        let path = globals.varNames.blagsApiPath + 'serch/search';\r\n        if(isSearch){\r\n            path = getApiPath() + 'item/search';\r\n            if(userData.isSosyal){\r\n                path = getApiPath() + 'blog/search';\r\n            }\r\n        }\r\n        \r\n\r\n        let response = await apiCall(path, data);\r\n        // console.log('grosers: ', response.payload);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // setSearchInputs({...searchInputs, searchResults: response.payload});\r\n            setSearchResults(response.payload);\r\n            // mapData.grosers = response.payload;\r\n            // forceUpdate();\r\n                    \r\n                    \r\n        }else{\r\n            // this.$store.dispatch('error', response.data);\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        showPageNav(setStartPt);\r\n        search();\r\n        setPageInitiated(true);\r\n        return closePageNav\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            search();\r\n        }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            search();\r\n        }\r\n        \r\n        // setPageInitiated(true);\r\n    }, [startPt]);\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     if(isTyping){\r\n    //         getHints();\r\n    //     }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [searchInputVal]);\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     if(!isTyping && pageInitiated){\r\n    //         // setTimeOutID(funcDelayer(timeOutID, search, 1));\r\n    //         search();\r\n    //     }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [isTyping]);\r\n\r\n    // let div = <View style={{flex: 1}}>\r\n    //     <View style={{flex: 1}}>\r\n    //         <Title title='Results'/>\r\n    //         <ScrollView>\r\n    //             {searchResults.map((item, idx) => {\r\n    //                 if(isSearch){\r\n    //                     return <SearchList key={item.id} searchItem = {item} userSearch={options.userSearch} />\r\n    //                 }else{\r\n    //                     return <SerchItemList key={item.id} item = {item} />\r\n    //                 }\r\n                    \r\n    //             })} \r\n    //         </ScrollView>\r\n                \r\n    //     </View>\r\n\r\n    //     <PageNav isForward={true} getItems={search} startPt={startPt} setStartPt={setStartPt} />   \r\n    // </View>;\r\n    \r\n    // if(isTyping){\r\n    //     div = <SearchHints hints={hints} onPressHint={onPressHint} isUser={false} />;\r\n    // }\r\n\r\n    return (\r\n        // <View style={{flex: 1}}>\r\n            \r\n            \r\n        //     <View style={{flexDirection: 'row', marginBottom: 2}}>\r\n        //         <Item style={{flex: 1, marginRight: 2}}>\r\n        //             <Input value={searchInputVal} onFocus={onSearchInputPressed} onChangeText={onChangeSearchInput} placeholder=\"Search...\" />\r\n        //             <IconToggle onPress={()=>setOptions({...options, searchValue: searchInputVal})} name=\"search\"/>\r\n                    \r\n        //             <IconToggle onPress={()=>openSingleModal('Search Options', {searchOptions: options, setSearchOptions: setSearchOptions})} name=\"more-vert\"/>\r\n                    \r\n        //         </Item>\r\n                \r\n                \r\n                \r\n                \r\n        //     </View>\r\n\r\n           \r\n        //     {div}\r\n        // </View>\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <Search onClickSearch={()=>setOptions({...options, searchValue: searchInputVal})} searchInputVal={searchInputVal} setSearchInputVal={setSearchInputVal} setOptions={setOptions} searchOptions={options} setSearchOptions={setSearchOptions} />\r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-1'>\r\n                {searchResults.map((item, idx) => {\r\n                    if(isSearch){\r\n                        \r\n                        if(options.userSearch){\r\n                            return <UserList key={item.id} user = {item} />  \r\n                        }else{\r\n                            if(userData.isSosyal){\r\n                                return <PostList isAsc={false} sortType={'Last Update'} sequence={1} post={item} key={item.id + '_' + 1 + '_' + 0}/>;\r\n                            }else{\r\n                                return <ItemList isSearch={true} isUser={false} item={item} key={item.id}/>;    \r\n                            }\r\n                        }\r\n                        \r\n                    }else{\r\n                        return <SerchItemList key={item.id} item = {item} />\r\n                    }\r\n                    \r\n                })}\r\n            </div>\r\n            {/* <div style={{alignItems: 'flex-end'}} className='d-flex flex-column'>\r\n                <PageNav isForward={true} getItems={search} startPt={startPt} setStartPt={setStartPt} />  \r\n            </div> */}\r\n            \r\n        </div>\r\n\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport SearchDiv from '../Components/SearchDiv';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function SearchPage() {\r\n\tconsole.log('LIST')\r\n\tconst { userData, globals, getTimeOut, apiCall, openSingleModal, getApiPath } = useContext(GlobalContext);\r\n   \r\n\r\n   \r\n    \r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <SearchDiv isSearch={true} />\r\n        </div>\r\n        \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\nimport SerchItemList from '../List/SerchItemList'\r\n\r\n\r\nimport {Button, TextField} from '@material-ui/core';\r\n// import PageNav from '../Components/PageNav';\r\n// import Title from '../HtmlComponents/Title';\r\n\r\n\r\n\r\n\r\n\r\nexport default function SerchItemsDiv() {\r\n\tconsole.log('LIST')\r\n\tconst { userData, globals, getTimeOut, apiCall, openSingleModal, showPageNav, closePageNav, getApiPath } = useContext(GlobalContext);\r\n    const [tag, setTag] = useState('');\r\n    // const [startPt, setStartPt] = useState(0);\r\n    const [items, setItems] = useState([]);\r\n\r\n    async function getItems(startPt){\r\n        console.log('search');\r\n        // console.log('search options: ', searchInputs);\r\n        // timeOutID = getDelayer(timeOutID, getSearchedUsers);\r\n        // console.log('timeout id: ', timeOutID)\r\n        \r\n        let data = {\r\n            \r\n            startPoint: startPt,\r\n            // email: userInputs.email    \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'serch/getItemsByUser', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setItems(response.payload);\r\n           \r\n        } \r\n        \r\n\r\n        \r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getItems();\r\n        showPageNav(getItems);\r\n        getItems(0);\r\n\r\n        return closePageNav\r\n    }, []);\r\n    \r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-2'>\r\n            {/* <div style={{flexDirection: 'row'}}>\r\n                <Button raised onPress={()=>openSingleModal('New Serch Item', {name: '', description: '', link: '', id: 0, tags: JSON.stringify([]), siteUsername: '', bidAmt: 0})} primary text=\"New\" />\r\n            </div> */}\r\n            <div className='d-flex mb-2 py-2' style={{justifyContent: 'flex-end'}}>\r\n                <Button variant=\"contained\" onClick={()=>openSingleModal('New Serch Item', {name: '', description: '', link: '', id: 0, tags: JSON.stringify([]), siteUsername: '', bidAmt: 0})}>New</Button>\r\n            </div>\r\n            \r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-1'>\r\n                {items.map((item) => {\r\n                    return <SerchItemList isUser={true} item={item} key={item.id}/>\r\n                    \r\n                    \r\n                })}    \r\n            </div>\r\n            {/* <div style={{alignItems: 'flex-end'}} className='d-flex flex-column'>\r\n                <PageNav startPt={startPt} getItems={getItems} setStartPt={setStartPt} isForward={true}/>\r\n            </div> */}\r\n            \r\n            \r\n            \r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n// import { View, ScrollView } from 'react-native';\r\n\r\n// import { Container, Header, Content, Button, Text, Input, Item } from 'native-base';\r\n// import SearchList from '../List/SearchList'\r\n\r\n\r\nimport InsidePageWrapper from '../HtmlComponents/InsidePageWrapper';\r\n// import PageNav from '../Components/PageNav';\r\nimport SearchDiv from '../Components/SearchDiv';\r\nimport SerchItemsDiv from '../Components/SerchItemsDiv';\r\n\r\n// import Title from '../HtmlComponents/Title';\r\n// import Tab from '../HtmlComponents/Tab';\r\n\r\n// import { IconToggle } from 'react-native-material-ui';\r\n\r\n\r\n\r\nexport default function SerchPage() {\r\n\tconsole.log('LIST')\r\n\t// const { userData, globals, getTimeOut, apiCall, openSingleModal, getApiPath } = useContext(GlobalContext);\r\n    const [tab, setTab] = useState('Search');\r\n    // const [startPoint, setStartPoint] = useState(0)\r\n    function onChangeTab(page){\r\n        setTab(page);\r\n        \r\n    }\r\n\r\n    let page = <SearchDiv isSearch={false} />;\r\n    if(tab == 'Items'){\r\n        // reviews, startPt, setStartPt, getReviews\r\n        page = <SerchItemsDiv />;\r\n    }\r\n    \r\n    return (\r\n        // <View style={{flex: 1}}>\r\n        //     <Tab headers={['Search', 'Items']} moreTabs={[]} onChangeTab={(tab)=>setTab(tab)}></Tab>\r\n            \r\n            \r\n\r\n            \r\n        // </View>\r\n        <InsidePageWrapper onChangeTab={onChangeTab} tabs={['Search', 'Items']}>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column pt-1'>\r\n                {page}\r\n            </div>\r\n             \r\n        </InsidePageWrapper>\r\n    );\r\n}","import React, {useState, useContext, forwardRef, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, TextField, InputLabel, FormControl, Select, MenuItem} from '@material-ui/core';\r\n\r\nexport default function VerifyAccount({name, address, birthdate, isMale, country, setIsEditing, isEditing}) {\r\n    const {userData, globals, changePage, countries, getApiPath, apiCall} = useContext(GlobalContext);\r\n\r\n    let currentDate = new Date().getTime();\r\n    if(birthdate != 0){\r\n        currentDate = birthdate * 1000;\r\n    }\r\n\r\n    \r\n\r\n    const [verifyInputs, setVerifyInputs] = useState({\r\n        name: name,\r\n        address: address,\r\n        birthdate: currentDate,\r\n        gender: convertIsMaleToGender(isMale),\r\n        country: country\r\n    });\r\n    \r\n    function getGender(){\r\n        let male = 1;\r\n        if(verifyInputs.gender == 'Female'){\r\n            male = 0;\r\n        }  \r\n        \r\n        return male;\r\n    }\r\n\r\n    function convertIsMaleToGender(){\r\n        let gender = 'Male';\r\n        if(isMale == 0){\r\n            gender = 'Female';\r\n        }\r\n         \r\n        \r\n        return gender;\r\n    }\r\n\r\n    async function verifyAccount(){\r\n        console.log('send money');\r\n\r\n        var data = {\r\n            name: verifyInputs.name,\r\n            address: verifyInputs.address,\r\n            isMale: getGender(),\r\n            birthdate: (verifyInputs.birthdate / 1000),\r\n            country: verifyInputs.country\r\n        }\r\n        let path = 'user/verifyAccount';\r\n        if(userData.verifiedDataSet){\r\n            path = 'user/editVerifiedData';\r\n        }\r\n        \r\n        // console.log('options: ', options);\r\n        let response = await apiCall(globals.varNames.blagsApiPath + path, data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    async function setDate(response){\r\n        console.log('send money');\r\n        console.log('response: ', response.target.value);\r\n        let date = new Date(response.target.value).getTime();\r\n        // console.log('date: ', date);\r\n        // let dateStr = new Date(date);\r\n        // console.log('dateStr: ', dateStr);\r\n        setVerifyInputs({...verifyInputs, birthdate: date});\r\n    }\r\n    \r\n    let dateToConvert = new Date(verifyInputs.birthdate);\r\n    console.log('date to convert', dateToConvert);\r\n    let month = dateToConvert.getMonth() + 1;\r\n    let day = dateToConvert.getDate();\r\n    let monthFinal = month;\r\n    let dayFinal = day;\r\n\r\n    if(month < 10){\r\n        monthFinal = '0' + month;\r\n    } \r\n\r\n    if(day < 10){\r\n        dayFinal = '0' + day;\r\n    }\r\n\r\n    // let dateStr = currentDate.getFullYear() + '-0' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\n    let dateStr = dateToConvert.getFullYear() + '-' + monthFinal + '-' + dayFinal;\r\n    \r\n    console.log('datestr: ', dateStr);\r\n    let pickerOptions = ['Male', 'Female'];\r\n    // let defaultDate = new Date();\r\n    console.log('current date: ', currentDate);\r\n    // console.log('user inputs: ', userInputs);\r\n    return (\r\n        <div className='d-flex flex-column py-5 px-2'>\r\n            {/* <Item>\r\n                <Input value={verifyInputs.name} onChangeText={(text)=>setVerifyInputs({...verifyInputs, name: text})} placeholder=\"Name\" />\r\n            </Item> */}\r\n            <TextField value={verifyInputs.name} onChange={(e)=>setVerifyInputs({...verifyInputs, name: e.target.value})} id=\"standard-basic\" label=\"Name\" />\r\n            {/* <Item>\r\n                <Input value={verifyInputs.address} onChangeText={(text)=>setVerifyInputs({...verifyInputs, address: text})} placeholder=\"Address\" />\r\n            </Item> */}\r\n            <TextField value={verifyInputs.address} onChange={(e)=>setVerifyInputs({...verifyInputs, address: e.target.value})} id=\"standard-basic\" label=\"Address\" />\r\n\r\n            {/* <DatePicker\r\n                defaultDate={verifyInputs.birthdate * 1000}\r\n                minimumDate={new Date(1900, 1, 1)}\r\n                maximumDate={currentDate}\r\n                locale={\"en\"}\r\n                timeZoneOffsetInMinutes={undefined}\r\n                modalTransparent={false}\r\n                animationType={\"fade\"}\r\n                androidMode={\"default\"}\r\n                placeHolderText={verifyInputs.birthdate + ''}\r\n                textStyle={{ color: \"green\" }}\r\n                placeHolderTextStyle={{ color: \"#d3d3d3\" }}\r\n                onDateChange={setDate}\r\n                disabled={false}\r\n            /> */}\r\n            <form className='d-flex flex-column' noValidate>\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Birthday\"\r\n                    type=\"date\"\r\n                    onChange={setDate}\r\n                    // defaultValue=\"2017-05-24\"\r\n                    // defaultValue={dateStr}\r\n                    value={dateStr}\r\n                    // className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n            </form>\r\n\r\n            <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={verifyInputs.gender}\r\n                    onChange={(e)=>{setVerifyInputs({...verifyInputs, gender: e.target.value})}}\r\n                >\r\n                    {/* {countries.map((country, id) => {\r\n                        return (\r\n                            // <Picker.Item key={id} label={country} value={id} />\r\n                            <MenuItem key={id} value={id}>{country}</MenuItem>\r\n                        )\r\n                        \r\n                    })} */}\r\n\r\n                    {pickerOptions.map((option, id) => {\r\n                        return (\r\n                            // <Picker.Item key={id} label={option} value={option} />\r\n                            <MenuItem key={id} value={option}>{option}</MenuItem>\r\n                        )\r\n                        \r\n                    })}\r\n                {/* <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={verifyInputs.country}\r\n                    onChange={(e)=>{setVerifyInputs({...verifyInputs, country: e.target.value})}}\r\n                >\r\n                    {countries.map((country, id) => {\r\n                        return (\r\n                            // <Picker.Item key={id} label={country} value={id} />\r\n                            <MenuItem key={id} value={id}>{country}</MenuItem>\r\n                        )\r\n                        \r\n                    })}\r\n\r\n                    \r\n                {/* <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {/* <div style={{flexDirection: 'row'}}>\r\n                <Picker\r\n                    note\r\n                    mode=\"dropdown\"\r\n                    // style={{ width: 120 }}\r\n                    selectedValue={verifyInputs.gender}\r\n                    onValueChange={(value)=>{setVerifyInputs({...verifyInputs, gender: value})}}\r\n                >\r\n\r\n                    {pickerOptions.map((option, id) => {\r\n                        return (\r\n                            <Picker.Item key={id} label={option} value={option} />\r\n                        )\r\n                        \r\n                    })}\r\n                    \r\n                </Picker>    \r\n            </div>\r\n\r\n            <div style={{flexDirection: 'row'}}>\r\n                <Picker\r\n                    note\r\n                    mode=\"dropdown\"\r\n                    // style={{ width: 120 }}\r\n                    selectedValue={verifyInputs.country}\r\n                    onValueChange={(value)=>{setVerifyInputs({...verifyInputs, country: value})}}\r\n                >\r\n\r\n                    {countries.map((country, id) => {\r\n                        return (\r\n                            <Picker.Item key={id} label={country} value={id} />\r\n                        )\r\n                        \r\n                    })}\r\n                    \r\n                </Picker>    \r\n            </div> */}\r\n            \r\n            {/* <Button raised primary text=\"Submit\" onPress={verifyAccount} /> */}\r\n            <Button className='mt-2' variant=\"contained\" onClick={verifyAccount}>Submit</Button>\r\n            \r\n        </div>\r\n        \r\n    );\r\n}","import React, {useState, useContext, forwardRef, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport Axios from 'axios';\r\nimport {Button, TextField, Avatar, FormControl, Select, MenuItem} from '@material-ui/core';\r\nimport UserImg from '../Components/UserImg'\r\nexport default function EditVerifyAccount({setIsEditing}) {\r\n    const {userData, appData, randomStr, showToast, globals, openSingleModal, datePickerStr, getApiPath, countries} = useContext(GlobalContext);\r\n    \r\n    \r\n    // async function editAccount(){\r\n    //     console.log('send money');\r\n    //     var data = {\r\n    //         name: verifyInputs.name,\r\n    //         username: verifyInputs.address\r\n    //     }\r\n    //     // console.log('options: ', options);\r\n    //     let response = await apiCall(globals.varNames.blagsApiPath + 'user/verifyAccount', data);\r\n    //     console.log('response: ', response);\r\n    //     if(response.status == 1){\r\n            \r\n    //     }\r\n    // }\r\n\r\n    async function uploadPhoto(image){\r\n        let formData = new FormData();\r\n        formData.append('file', image);\r\n        // formData.append('userID', userData.userID);\r\n        formData.append('userID', userData.userID);\r\n        let options = {\r\n            method: 'post',\r\n            url: globals.varNames.blagsApiPath + 'user/uploadVerifiedPhoto',\r\n            data: formData,\r\n            headers: {\r\n                'x-access-token': userData.token,\r\n                'version': appData.version,\r\n                'sosyal-version': appData.versionSosyal,\r\n                'photo-token': randomStr(5),\r\n                \r\n            }\r\n        }\r\n\r\n        let response = await Axios(options);\r\n        console.log('response: ', response.data);\r\n        if(response.data.status == 1){\r\n            showToast(response.data.message, 5, false);\r\n            // closeModal();   \r\n        }\r\n    }\r\n    \r\n    let url = 'http';\r\n    if(userData.verifiedData.imgURL != ''){\r\n        url = globals.varNames.verifiedPhotoPath + userData.verifiedData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword;\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n\r\n    console.log('url: ', url);\r\n    let gender = 'Male';\r\n    if(userData.verifiedData.isMale == 0){\r\n        gender = 'Female';\r\n    }\r\n    \r\n    return (\r\n        <div className='d-flex flex-column'>\r\n            {/* <Image style={{width: 100, height: 100, backgroundColor: 'blue', alignSelf: 'center'}} source={{uri: url}}/>\r\n            <Avatar alt=\"Remy Sharp\" src={imgURI} /> */}\r\n            <div className='d-flex flex-column mb-2 border-bottom py-2' style={{alignItems: 'center'}}>\r\n                <UserImg size={120} imgPathBegin={globals.varNames.verifiedPhotoPath} imgURL={userData.verifiedData.imgURL} userID={userData.userID} photoPassword={userData.sosyalData.photoPassword} />\r\n                {/* <Button raised primary text=\"Submit\" onPress={()=>openSingleModal('Upload Verified Photo', '')} /> */}\r\n                <Button className='mt-2' style={{width: '70%'}} variant=\"contained\" onClick={()=>openSingleModal('Upload Verified Photo', '')}>Upload Photo</Button>\r\n            </div>\r\n            <div className='d-flex flex-column mb-2 border-bottom py-2'>\r\n                <div><span style={styles.label}>Name: </span><span style={styles.value}>{userData.verifiedData.name}</span></div>\r\n                <div><span style={styles.label}>Address: </span><span style={styles.value}>{userData.verifiedData.address}</span></div>\r\n                <div><span style={styles.label}>Birthdate: </span><span style={styles.value}>{datePickerStr(userData.verifiedData.birthdate * 1000)}</span></div>\r\n                <div><span style={styles.label}>Country: </span><span style={styles.value}>{countries[userData.verifiedData.country]}</span></div>\r\n                <div><span style={styles.label}>Gender: </span><span style={styles.value}>{gender}</span></div>\r\n                {/* <span>Address: {userData.verifiedData.address}</span>\r\n                <span>Birthdate: {datePickerStr(userData.verifiedData.birthdate * 1000)}</span>\r\n                <span>Country: {countries[userData.verifiedData.country]}</span>\r\n                <span>Gender: {gender}</span> */}\r\n                \r\n                {/* <Button raised primary text=\"Edit\" onPress={()=>setIsEditing(true)} /> */}\r\n                <Button className='mt-3' style={{width: '70%', alignSelf: 'center'}} variant=\"contained\" onClick={()=>setIsEditing(true)}>Edit</Button>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: 15\r\n    },\r\n    value: {\r\n        fontSize: 15,\r\n        fontWeight: 700\r\n    }\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\nimport VerifyAccount from '../Components/VerifyAccount';\r\nimport EditVerifyAccount from '../Components/EditVerifyAccount';\r\n\r\nexport default function VerifyAccountPage() {\r\n    const {userData, globals, apiCall, openSingleModal, getApiPath} = useContext(GlobalContext);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    console.log('verify data set: ', userData.verifiedDataSet);\r\n\r\n    let name = '';\r\n    let address = '';\r\n    let country = 147;\r\n    let birthdate = 0;\r\n    let isMale = 1;\r\n\r\n    if(userData.verifiedDataSet){\r\n        name = userData.verifiedData.name;\r\n        address = userData.verifiedData.address;\r\n        country = userData.verifiedData.country;\r\n        birthdate = userData.verifiedData.birthdate;\r\n        isMale = userData.verifiedData.isMale;\r\n    }\r\n    \r\n    let page = <VerifyAccount name={name} address={address} country={country} birthdate={birthdate} isMale={isMale} setIsEditing={setIsEditing} isEditing={isEditing} />;\r\n    if(userData.verifiedDataSet && !isEditing){\r\n        page = <EditVerifyAccount setIsEditing={setIsEditing} />\r\n    }\r\n\r\n    console.log('verified data set: ', userData.verifiedDataSet);\r\n\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-4 p-2'>\r\n            \r\n            {page}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport {Link, Paper} from '@material-ui/core';\r\n\r\n// import ListCard from '../HtmlComponents/ListCard';\r\n\r\nexport default function SearchTagList({ tag }) {\r\n    console.log('ITEM LIST')\r\n    const { userData, globals, forceUpdate, apiCall, openSingleModal, openYesNoModal } = useContext(GlobalContext);\r\n    \r\n    // console.log('item: ', item);\r\n    // console.log('item img: ', globals.varNames.itemsImgPath + item.imgurl);\r\n\r\n    // async function deleteItem() {\r\n    //     console.log('DELETE ITEM')\r\n    //     let response = await apiCall(globals.varNames.apiPath + 'item/deleteItem', {itemID: item.id});\r\n    //     console.log('response: ', response);\r\n    //     if(response.status == 1){\r\n\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // function onButtonsPressed(button){\r\n    //     if(button == 'Edit'){\r\n    //         openSingleModal('Edit Item', item);   \r\n    //     }else if(button == 'Upload'){\r\n    //         openSingleModal('Upload Item Photo', item);   \r\n    //     }else if(button == 'Delete'){\r\n    //         openYesNoModal('Are you sure?', deleteItem);   \r\n    //     }\r\n    // }\r\n\r\n    // let buttons = [];\r\n    // if(isUser){\r\n        \r\n    //     buttons = ['Edit', 'Delete', 'Upload'];\r\n    // }\r\n\r\n    // let url = 'http';\r\n    // if(item.imgurl != ''){\r\n    //     url = globals.varNames.itemsImgPath + item.imgurl + '/' + userData.userID + '/' + userData.photoPassword;\r\n    // }\r\n    // console.log('item img url: ', url);\r\n    return (\r\n        <Paper className='mb-2 d-flex px-2 py-2'>\r\n            <span className='mr-2'>{tag.id}</span>\r\n            \r\n            <span className='' style={{whiteSpace: 'pre', fontWeight: 600}}>{tag.tag}</span>\r\n        </Paper>\r\n        \r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\nimport SearchTagList from '../List/SearchTagList'\r\n\r\n\r\n\r\n// import PageNav from '../Components/PageNav';\r\n// import Title from '../HtmlComponents/Title';\r\n\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nexport default function SearchTagsPage() {\r\n\tconsole.log('LIST')\r\n\tconst { userData, globals, getTimeOut, closePageNav, showPageNav, apiCall, openSingleModal, getApiPath, funcDelayer } = useContext(GlobalContext);\r\n    const [tag, setTag] = useState('');\r\n    const [pageInitiated, setPageInitiated] = useState(false);\r\n    const [startPt, setStartPt] = useState(0);\r\n    const [tags, setTags] = useState([]);\r\n    const [timeOutID, setTimeOutID] = useState(0);\r\n\r\n    async function getTags(){\r\n        console.log('search');\r\n        // console.log('search options: ', searchInputs);\r\n        \r\n        let data = {\r\n            tag: tag,\r\n            startPoint: startPt,\r\n            // email: userInputs.email    \r\n        }\r\n\r\n        let response = await apiCall(getApiPath() + 'user/getSearchTags', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setTags(response.payload);\r\n            \r\n        } \r\n\r\n        \r\n\r\n        \r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // getTags();\r\n        \r\n        showPageNav(setStartPt);\r\n        getTags();\r\n        setPageInitiated(true);\r\n        return closePageNav\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            setTimeOutID(funcDelayer(timeOutID, getTags, 0.1));        \r\n        }\r\n    }, [tag]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(pageInitiated){\r\n            getTags();       \r\n        }\r\n    }, [startPt]);\r\n    \r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            {/* <div style={{flexDirection: 'row'}}>\r\n                <Button raised onPress={()=>openSingleModal('New Tag', '')} primary text=\"New\" />\r\n            </div> */}\r\n            <div style={{justifyContent: 'flex-end'}} className='d-flex mb-2'>\r\n                <Button variant=\"contained\" onClick={()=>openSingleModal('New Tag', '')}>New</Button>\r\n            </div>\r\n            \r\n            {/* <div className='d-flex flex-row'>\r\n                <Item style={{flex: 1, marginRight: 2}}>\r\n                    <Input onChangeText={(text) => {setTag(text)}} placeholder=\"Search...\" />\r\n                    <IconToggle onPress={getTags} name=\"search\"/>\r\n                    \r\n                   \r\n                    \r\n                </Item>\r\n            </div> */}\r\n            {/* <div style={{flex: 1, overflow: 'auto'}} className='px-2 d-flex flex-column'>\r\n                \r\n            </div> */}\r\n\r\n            <div className=''>\r\n                <Paper style={{width: '100%'}} className='mb-2 d-flex py-2' component=\"form\">\r\n                    \r\n                    <InputBase\r\n                        // value={searchInputVal}\r\n                        onChange={(e) => {setTag(e.target.value)}}\r\n                        \r\n                        style={{flex: 1}}\r\n                        className='px-2'\r\n                        placeholder=\"Search...\"\r\n                        inputProps={{ 'aria-label': 'search google maps' }}\r\n                    />\r\n                    \r\n                    {/* <IconButton onClick={getTags} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton> */}\r\n                \r\n                    \r\n                    \r\n                </Paper>\r\n            </div>\r\n            {/* <h4 className='mb-1 mr-2' style={{alignSelf: 'flex-end'}}>Tags</h4> */}\r\n            <div style={{flex: 1, overflow: 'auto'}} className='px-1'>\r\n                {tags.map((tag) => {\r\n                    return <SearchTagList tag={tag} key={tag.id}/>\r\n                    \r\n                    \r\n                })}    \r\n            </div>\r\n            \r\n            {/* <div style={{alignItems: 'flex-end'}} className='d-flex flex-column px-3'>\r\n                <PageNav startPt={startPt} getItems={getTags} setStartPt={setStartPt} isForward={true}/>\r\n            </div> */}\r\n            \r\n        </div>\r\n    );\r\n}","\r\nimport React, { useState, useContext, useRef } from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {List, ListItem, ListItemText, Link} from '@material-ui/core';\r\n\r\nimport UserImg from './UserImg';\r\nimport UserLink from '../HtmlComponents/UserLink';\r\n\r\n \r\nexport default function SideNav({closeDrawer}) {\r\n    const {userData, appData, globals, changePage, logout, forceUpdate} = useContext(GlobalContext);\r\n    \r\n    // const exampleImageUri = Image.resolveAssetSource(require('../assets/soy.png')).uri;\r\n\r\n    function navigate(page){\r\n        console.log('Pressed')\r\n        closeDrawer();\r\n        changePage(page);\r\n    }\r\n\r\n    function changeSite(){\r\n        console.log('Pressed')\r\n        userData.isSosyal = !userData.isSosyal;\r\n        userData.pageNum ++;\r\n        forceUpdate();\r\n    }\r\n\r\n    let siteLabel = appData.sosyalName;\r\n    let menus = ['Home', 'Profile', 'Messages', 'Company', 'Search', 'Web Search', 'Search Tags', 'Data', 'Wallet', 'Verify Account'];\r\n\r\n    let addtlMenus = ['Shoppers', 'Map', 'List'];\r\n    if(!userData.isShappers){\r\n        addtlMenus.splice(0, 1);    \r\n    }\r\n\r\n    if(!userData.isSosyal){\r\n        siteLabel = appData.name;\r\n        // menus.splice(4, 1);\r\n        addtlMenus.forEach((addtlMenu) => {\r\n            // menus.push(addtlMenu);\r\n            menus.splice(2, 0, addtlMenu);\r\n        })\r\n        \r\n    }\r\n\r\n    let imgPathBegin = globals.varNames.imgPathBlags;\r\n    let photoPassword = userData.sosyalData.photoPassword;\r\n    let imgURL = userData.sosyalData.imgURL;\r\n    if(!userData.isSosyal){\r\n        imgPathBegin = globals.varNames.imgPath;\r\n        photoPassword = userData.photoPassword;  \r\n        imgURL = userData.imgURL;\r\n    }\r\n\r\n    let menuFin = '';\r\n    return (\r\n        <div className='' style={{width:  250}}>\r\n            <div className='d-flex border-bottom pt-2 pb-4 px-2 mt-2'>\r\n                <UserImg imgPathBegin={imgPathBegin} imgURL={imgURL} userID={userData.userID} photoPassword={photoPassword} />\r\n                <div className='d-flex flex-column ml-2'>\r\n                    <UserLink verified={0} username={userData.username} />  \r\n                    <span>{userData.name}</span> \r\n                    <span>{userData.description}</span> \r\n                </div>\r\n            </div>\r\n            <List className='px-4'>\r\n                <div className='d-flex flex-column mb-2'>\r\n                    <Link style={{fontWeight: 700, fontSize: 17}} href=\"#\" onClick={(e)=>{e.preventDefault(); changeSite()}}>\r\n                        {siteLabel}\r\n                        \r\n                    </Link>\r\n                </div>\r\n                \r\n                {/* <ListItem className='border-bottom' button onClick={() => changeSite()}>\r\n                    <UserLink username={'ha'} />\r\n                    <ListItemText primary={siteLabel} /> \r\n                </ListItem> */}\r\n                {menus.map((menu, ndx) => {\r\n                    menuFin = menu;\r\n                    if(menu == 'List' && !userData.isShappers){\r\n                        menuFin = 'Items'\r\n                    }\r\n                    return <ListItem className='px-0' button key={ndx} onClick={() => navigate(menu)}>\r\n                        <span style={styles.menuSpans}>{menuFin}</span>\r\n                        {/* <ListItemText style={{fontSize: 12}} primary={menuFin} />    */}\r\n                    </ListItem>;\r\n                    \r\n                })} \r\n                <ListItem className='px-0' button onClick={() => logout()}>\r\n                    <span style={styles.menuSpans}>Logout</span>\r\n                    {/* <ListItemText primary='Logout' />  */}\r\n                </ListItem>   \r\n            </List>\r\n            <div className='p-2 d-flex flex-column'>\r\n                <span style={{fontSize: 14, fontWeight: 300, alignSelf: 'center'}}>{appData.sosyalName} {appData.name}</span> \r\n            </div>\r\n        </div>\r\n        // <View style={{flex: 1, backgroundColor: 'white', paddingTop: 50}}>\r\n        //     <ScrollView>\r\n        //         <View style={{borderBottomWidth: 1, padding: 10, flexDirection: 'row'}}>\r\n        //             <View style={{width: 70, height: 70, borderWidth: 1, marginRight: 10}}></View>    \r\n        //             <Text>{userData.username}</Text>\r\n                    \r\n        //         </View>\r\n        //         <Content>\r\n\r\n        //             <Separator>\r\n        //                 <Text>MENU</Text>\r\n        //             </Separator>\r\n        //             <List>\r\n        //                 <ListItem noIndent onPress={() => changeSite()}>\r\n        //                     <Text>{siteLabel}</Text>\r\n        //                 </ListItem>\r\n        //                 {menus.map((menu, ndx) => {\r\n        //                     return <ListItem key={ndx} noIndent onPress={() => navigate(menu)}>\r\n        //                         <Text>{menu}</Text>\r\n        //                     </ListItem>;\r\n                            \r\n        //                 })}\r\n                        \r\n        //                 <ListItem noIndent onPress={() => logout()}>\r\n        //                     <Text>Logout</Text>\r\n        //                 </ListItem>\r\n                           \r\n        //             </List>\r\n        //             <Separator>\r\n        //                 <Text style={{alignSelf: 'center'}}>Shappers Co. 2020</Text>\r\n        //             </Separator>\r\n        //         </Content>\r\n        //         <View>\r\n                    \r\n                \r\n                    \r\n        //         </View>\r\n                \r\n        //     </ScrollView>\r\n        // </View>\r\n        \r\n        \r\n        \r\n    );\r\n}\r\n\r\nconst styles = {\r\n    menuSpans: {\r\n        fontWeight: 500\r\n    }\r\n}\r\n","import React, { useState, useContext, useRef } from 'react'; \r\nimport {GlobalContext} from '../common/Context/GlobalProvider';\r\n// import {CommonContext} from '../common/Context/GlobalProvider';\r\nimport ProfilePage from '../common/Views/ProfilePage';\r\nimport MessagesPage from '../common/Views/MessagesPage';\r\nimport ListPage from '../Views/ListPage';\r\nimport DataPage from '../common/Views/DataPage';\r\nimport MapPage from '../Views/MapPage';\r\nimport EditUserPage from '../common/Views/EditUserPage';\r\nimport CompanyPage from '../common/Views/CompanyPage';\r\nimport WalletPage from '../common/Views/WalletPage';\r\nimport ShappersPage from '../Views/ShappersPage';\r\nimport HomePage from '../common/Views/HomePage';\r\nimport SearchPage from '../common/Views/SearchPage';\r\nimport SerchPage from '../common/Views/SerchPage';\r\n\r\nimport VerifyAccountPage from '../common/Views/VerifyAccountPage';\r\nimport SearchTagsPage from '../common/Views/SearchTagsPage';\r\nimport SideNav from '../common/Components/SideNav';\r\nimport AdsDiv from '../common/Components/AdsDiv';\r\nimport PageNav from '../common/Components/PageNav';\r\n\r\n\r\nimport {Drawer, TextField, AppBar, Toolbar, Button, IconButton, Typography} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function InsidePages() {\r\n    // const {userData, globals, appData, forceUpdate, toastData, singleModalData, otherPageData} = useContext(CommonContext);\r\n    const {userData, pageNavData, globals, appData, forceUpdate} = useContext(GlobalContext);\r\n    const [toggleMenu, setToggleMenu] = useState(false);\r\n\r\n    // const drawerRef = useRef(null);\r\n\r\n    // function openDrawer(){\r\n    //     // console.log('drawer: ', drawerRef);\r\n    //     drawerRef.current._root.open();\r\n    // }\r\n\r\n    function closeDrawer(){\r\n        // console.log('drawer: ', drawerRef);\r\n        setToggleMenu(false);\r\n    }\r\n\r\n    function toggleDrawer(){\r\n        // console.log('drawer: ', drawerRef);\r\n        setToggleMenu(!toggleMenu)\r\n    }\r\n  \r\n    let page = <ProfilePage/>, title = 'Profile'\r\n    \r\n    if(userData.currentPage.back === 'Messages'){\r\n        page = <MessagesPage /> \r\n        title = 'Messages'\r\n    }else if(userData.currentPage.back === 'List'){\r\n        page = <ListPage />\r\n        title = 'List';\r\n        if(!userData.isShappers){\r\n            title = 'Items';\r\n        }\r\n    }else if(userData.currentPage.back === 'Data'){\r\n        page = <DataPage />\r\n        title = 'Data'\r\n    }else if(userData.currentPage.back === 'Map'){\r\n        page = <MapPage />\r\n        title = 'Map'\r\n    }else if(userData.currentPage.back === 'Wallet'){\r\n        page = <WalletPage />\r\n        title = 'Wallet'\r\n    }else if(userData.currentPage.back === 'Edit Profile'){\r\n        page = <EditUserPage />\r\n        title = 'Edit Profile';\r\n    }else if(userData.currentPage.back === 'Company'){\r\n        page = <CompanyPage />\r\n        title = 'Company';\r\n    }else if(userData.currentPage.back === 'Home'){\r\n        page = <HomePage />\r\n        title = 'Home';\r\n    }else if(userData.currentPage.back === 'Search'){\r\n        page = <SearchPage />\r\n        title = 'Search';\r\n    }else if(userData.currentPage.back === 'Web Search'){\r\n        page = <SerchPage />\r\n        title = 'Serch';\r\n    }else if(userData.currentPage.back === 'Search Tags'){\r\n        page = <SearchTagsPage />\r\n        title = 'Search Tags';\r\n    }else if(userData.currentPage.back === 'Verify Account'){\r\n        page = <VerifyAccountPage />\r\n        title = 'Verify Account';\r\n    }else if(userData.currentPage.back === 'Shoppers'){\r\n        page = <ShappersPage />\r\n        title = 'Shoppers';\r\n    }\r\n\r\n    let sideNav = null;\r\n    if(userData.windowSize == 'lg'){\r\n        sideNav = <SideNav closeDrawer={closeDrawer} />\r\n    }\r\n    \r\n    let pageWidth = {width: 350};\r\n    if(userData.windowSize == 'sm' || userData.windowSize == 'xm'){\r\n        pageWidth = {flex: 1}\r\n    }\r\n\r\n    // let pageNav = null;\r\n    // if(userData.showingPageNav){\r\n    //     pageNav = <PageNav key={pageNavData.key} isForward={true} onChangeStartPt={(startPt)=>pageNavData.callbackFunc(startPt)} />\r\n    // }\r\n\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <AppBar style={{zIndex: 1}} position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton onClick={toggleDrawer} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer anchor='left' open={toggleMenu} onClose={()=>toggleDrawer()}>\r\n               \r\n                <SideNav closeDrawer={closeDrawer} />\r\n            </Drawer>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n                {/* <AdsDiv isRight={false} />\r\n                {sideNav} */}\r\n                <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column pt-1'>\r\n                    {page} \r\n                </div>\r\n                {/* {pageNav} */}\r\n                {/* <AdsDiv isRight={true} />      */}\r\n                \r\n                \r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n","\r\nimport React, {useState, useContext, useRef} from 'react'; \r\n\r\n// import {GlobalContext} from '../Context/GlobalProvider';\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n// import { View } from 'react-native';\r\n// import { Text, Input, Item } from 'native-base';\r\n// import { Button } from 'react-native-material-ui';\r\n\r\nexport default function Login() {\r\n    console.log('LOGIN');\r\n    const {userData, globals, getUserData, forceUpdate, appData, changeOutsidePage, apiCall} = useContext(GlobalContext);\r\n    // const fbRef = useRef(null);\r\n    // console.log('context: ', context);\r\n    // const [amount, setAmount] = useState(5);\r\n    const [userInputs, setUserInputs] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n\r\n    async function login(){\r\n        console.log('login');\r\n        \r\n        let data = {\r\n            username: userInputs.username,\r\n            password: userInputs.password,\r\n            siteID: appData.siteID   \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/login', data);\r\n        \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // userData.token = response.data.payload;\r\n            // AsyncStorage.setItem('userData', JSON.stringify({token: userData.token}));\r\n            if(response.code == 0){\r\n                getUserData(response.payload);  \r\n            }else{\r\n                // userData.verification.email = '';\r\n                userData.currentPage.front = 'Verification';\r\n                userData.verification.email = response.payload;\r\n                forceUpdate();\r\n            }\r\n              \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div style={{flex: 1, marginTop: 50}} className='d-flex flex-column'>\r\n            <div style={{flex: 1}} className='d-flex flex-column'>\r\n                <div style={{alignItems: 'center'}} className='d-flex flex-column'>\r\n                    <h3 style={{fontWeight: 700, fontSize: 20}} className=''>{appData.sosyalName}</h3>\r\n                    <h1 style={{fontWeight: 700}}>{appData.name}</h1>\r\n                </div>\r\n                \r\n                <div className='d-flex flex-column mb-2'>\r\n                    <TextField onChange={(e)=>setUserInputs({...userInputs, username: e.target.value})} id=\"standard-basic\" label=\"Username\" />\r\n                    <TextField type={userData.production? 'password' : 'text'} onChange={(e)=>setUserInputs({...userInputs, password: e.target.value})} id=\"standard-basic\" label=\"Password\" />\r\n                    <Button className='mt-2' variant=\"contained\" onClick={login}>Login</Button>\r\n                </div>\r\n                <div className='d-flex flex-row' style={{justifyContent: 'space-between'}}>\r\n                    {/* <Text style={{fontSize: 30, alignSelf: 'center'}}>Sosyal Shaps</Text> */}\r\n                    <Link className='mb-1 border-bottom' noIndent onClick={(e) => {e.preventDefault(); changeOutsidePage('Register')}}>\r\n                        Create Account\r\n                    </Link>\r\n                    <Link className='mb-1 border-bottom' noIndent onClick={(e) => {e.preventDefault(); changeOutsidePage('ForgotPass')}}>\r\n                        Forgot Password?\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            \r\n            <div style={{alignItems: 'center'}} className='d-flex flex-column'>\r\n                {/* <h3 style={{fontWeight: 700, fontSize: 20}} className=''>{appData.sosyalName}</h3> */}\r\n                <span style={{fontSize: 14, fontWeight: 300}}>{appData.name} {appData.sosyalName}</span>\r\n            </div>\r\n            {/* <Item>\r\n                <Input onChangeText={(text)=>setUserInputs({...userInputs, username: text})} placeholder=\"Username\" />\r\n            </Item>\r\n            <Item>\r\n                <Input onChangeText={(text)=>setUserInputs({...userInputs, password: text})} placeholder=\"Password\" />\r\n            </Item>\r\n            \r\n            <Button style={{container: {marginVertical: 14}}} raised onPress={login} primary text=\"Login\" /> */}\r\n            {/* <div style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                \r\n                <Button onPress={()=>changeOutsidePage('Register')} primary text=\"Create Account\" />\r\n                <Button onPress={()=>changeOutsidePage('ForgotPass')} primary text=\"Forgot Password\" />\r\n            </div> */}\r\n           \r\n        </div>\r\n\r\n        \r\n        \r\n    );\r\n}\r\n","import React, {useState, useContext} from 'react'; \r\n\r\nimport { GlobalContext } from '../../Context/GlobalProvider';\r\n\r\n// import Title from '../HtmlComponents/Title';\r\n\r\n\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\nexport default function VerificationPage() {\r\n    const {userData, globals, getUserData, appData, changeOutsidePage, apiCall, showToast} = useContext(GlobalContext);\r\n    const [code, setCode] = useState('');\r\n\r\n    async function verify(){\r\n        console.log('register');\r\n        \r\n        let data = {\r\n            emailCode: code,\r\n            email: userData.verification.email,\r\n            siteID: appData.siteID\r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/confirmRegister', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // userData.token = response.data.payload;\r\n\r\n            // AsyncStorage.setItem('userData', JSON.stringify({token: userData.token}));\r\n            getUserData(response.payload);    \r\n        }\r\n    }\r\n\r\n    async function resendCode(e){\r\n        console.log('register');\r\n        e.preventDefault();\r\n        let data = {\r\n            \r\n            email: userData.verification.email,\r\n            \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/resendCode', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Code sent successfully.', 3, false);\r\n            // userData.token = response.data.payload;\r\n\r\n            // AsyncStorage.setItem('userData', JSON.stringify({token: userData.token}));\r\n            // getUserData(response.payload);    \r\n        }else{\r\n            showToast(response.message, 3, true);    \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n       \r\n        <div className='d-flex flex-column pt-5'>\r\n            <h4 style={{alignSelf: 'flex-end'}}>Confirm Account</h4>\r\n            {/* <Title title='Verify'/> */}\r\n            {/* <Item>\r\n                <Input onChangeText={(text)=>setCode(text)} placeholder=\"Code\" />\r\n            </Item> */}\r\n            <p className='mt-5' style={{fontSize: 18}}>A confirmation code has been sent to your email. Enter the code below to confirm your account.</p>\r\n            <TextField onChange={(e)=>setCode(e.target.value)} id=\"standard-basic\" label=\"Code\" />\r\n           \r\n            {/* <Button style = {{container: {marginVertical: 10}}} raised onPress={verify} primary text=\"Verify\" /> */}\r\n            <Button className='mt-4' variant=\"contained\" onClick={verify}>Verify</Button>\r\n            <div className='d-flex mt-3' style={{justifyContent: 'space-between'}}>\r\n                \r\n                {/* <Button onPress={()=>changeOutsidePage('Login')} primary text=\"Login\" /> */}\r\n                <Link className='mb-1 border-bottom' noIndent onClick={(e) => {e.preventDefault(); changeOutsidePage('Login')}}>\r\n                    Login\r\n                </Link>\r\n                {/* <Button onPress={resendCode} primary text=\"Resend Code\" /> */}\r\n                <Link className='mb-1 border-bottom' noIndent onClick={resendCode}>\r\n                    Resend Code\r\n                </Link>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import React, {useState, useContext} from 'react'; \r\n\r\nimport { GlobalContext } from '../../Context/GlobalProvider';\r\nimport ErrorLog from '../HtmlComponents/ErrorLog';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ForgotPass({setForgotPassInputs}) {\r\n    const {userData, globals, checkPassInput, checkRepeatPassInput, showToast, apiCall} = useContext(GlobalContext);\r\n    const [passInputs, setPassInputs] = useState({\r\n        newPass: '',\r\n        repeatPass: '',\r\n        email: '',\r\n        username: ''\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        \r\n        password: '',\r\n        repeatPass: ''\r\n    });\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    async function changePass(){\r\n        console.log('change pass');\r\n\r\n        if(errors.password != '' || errors.repeatPass != '' || passInputs.username == '' || passInputs.newPass == '' || passInputs.email == '' || passInputs.repeatPass == ''){\r\n            \r\n            let msg = '';\r\n            if(errors.password != '' || errors.repeatPass != ''){\r\n                msg = 'Please check errors.';\r\n                \r\n            }else{\r\n                if(passInputs.username == ''){\r\n                    msg = 'Username cannot be blank.';\r\n                     \r\n                }else if(passInputs.newPass == ''){\r\n                    msg = 'Password cannot be blank.';\r\n                }else if(passInputs.repeatPass == ''){\r\n                    msg = 'Repeat password cannot be blank.';    \r\n                }else{\r\n                    msg = 'Email cannot be blank.';   \r\n                }\r\n                  \r\n            }\r\n\r\n            showToast(msg, true, 3);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n        \r\n        let data = {\r\n            password: passInputs.newPass,\r\n            email: passInputs.email,\r\n            username: passInputs.username\r\n            \r\n            \r\n        }\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/forgotPassword', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setForgotPassInputs({\r\n                userID: response.payload.userID,\r\n                reqCode: response.payload.reqCode,\r\n                confirmingForgotPass: true\r\n            })\r\n              \r\n        }\r\n    }\r\n    \r\n    function onChangePass(e){\r\n        let text = e.target.value;\r\n        setPassInputs({...passInputs, newPass: text});\r\n        // checkInputs(text, passInputs.repeatPass);\r\n        // setError(checkPassInput(text));\r\n        setErrors({...errors, password: checkPassInput(text)});\r\n    }\r\n\r\n    function onChangeRepeatPass(e){\r\n        let text = e.target.value;\r\n        setPassInputs({...passInputs, repeatPass: text});\r\n        // checkInputs(passInputs.newPass, text);\r\n        setErrors({...errors, repeatPass: checkRepeatPassInput(passInputs.newPass, text)});\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column pt-5 mb-2'>\r\n            <h4 style={{alignSelf: 'flex-end'}}>Forgot Password</h4>\r\n            {/* <Item>\r\n                <Input onChangeText={text => setPassInputs({...passInputs, username: text})} placeholder='Username'/>\r\n            </Item> */}\r\n            <TextField onChange={(e)=>setPassInputs({...passInputs, username: e.target.value})} id=\"standard-basic\" label=\"Username\" />\r\n            {/* <Item>\r\n                <Input onChangeText={text => setPassInputs({...passInputs, email: text})} placeholder='Email'/>\r\n            </Item> */}\r\n            <TextField onChange={(e)=>setPassInputs({...passInputs, email: e.target.value})} id=\"standard-basic\" label=\"Email\" />\r\n            {/* <Item>\r\n                <Input onChangeText={onChangePass} placeholder='New Password'/>\r\n            </Item> */}\r\n            <TextField type={userData.production? 'password' : 'text'} onChange={onChangePass} id=\"standard-basic\" label=\"New Password\" />\r\n            <ErrorLog error={errors.password} />\r\n            {/* <Item>\r\n                <Input onChangeText={onChangeRepeatPass} placeholder='Repeat Password'/>\r\n            </Item> */}\r\n            <TextField type={userData.production? 'password' : 'text'} onChange={onChangeRepeatPass} id=\"standard-basic\" label=\"Repeat Password\" />\r\n            <ErrorLog error={errors.repeatPass} />\r\n            {/* <Button raised onPress={changePass} primary text=\"Change\" /> */}\r\n            <Button className='mt-2' variant=\"contained\" onClick={changePass}>Change</Button>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n","import React, {useState, useContext} from 'react'; \r\n\r\nimport { GlobalContext } from '../../Context/GlobalProvider';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ConfirmForgotPass({userID, reqCode}) {\r\n    const {userData, globals, showToast, changeOutsidePage, apiCall} = useContext(GlobalContext);\r\n    const [code, setCode] = useState('');\r\n\r\n    async function confirmChangePass(){\r\n        console.log('confirm change pass');\r\n        if(code == ''){\r\n            \r\n            let msg = 'Code cannot be empty.';\r\n            \r\n            showToast(msg, true, 3);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n        // var response = null;\r\n        // let options = {\r\n        //     method: 'post',\r\n        //     url: globals.varNames.blagsApiPath + 'user/confirmForgotPassword',\r\n        //     data: {\r\n        //         code: code,\r\n        //         reqCode: reqCode,\r\n        //         userID: userID\r\n                \r\n                \r\n        //     }\r\n        // }\r\n        // if(userData.usingSample){\r\n            \r\n        //     response = Samples.confirmRegister(options);\r\n        // }else{\r\n            \r\n        // }\r\n        let data = {\r\n            code: code,\r\n            reqCode: reqCode,\r\n            userID: userID\r\n            \r\n            \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/confirmForgotPassword', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            changeOutsidePage('Login')\r\n            // userData.currentPage.front = 'Login';\r\n            // forceUpdate();\r\n            // userData.token = response.data.payload;\r\n\r\n            // AsyncStorage.setItem('userData', JSON.stringify({token: userData.token}));\r\n            // getUserData(response.data.payload);    \r\n        }\r\n    }\r\n    \r\n    // async function resendCode(){\r\n    //     console.log('confirm change pass');\r\n        \r\n    //     let data = {\r\n            \r\n    //         userID: userID\r\n            \r\n            \r\n    //     }\r\n\r\n    //     let response = await apiCall(globals.varNames.blagsApiPath + 'user/resendCodeForgotPass', data);\r\n    //     console.log('response: ', response);\r\n    //     if(response.status == 1){\r\n    //         // userData.currentPage.front = 'Login';\r\n    //         // forceUpdate();\r\n    //         // userData.token = response.data.payload;\r\n\r\n    //         // AsyncStorage.setItem('userData', JSON.stringify({token: userData.token}));\r\n    //         // getUserData(response.data.payload);    \r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className='d-flex flex-column pt-5 pb-1'>\r\n            <h5 style={{alignSelf: 'flex-end'}}>Confirm Password Change</h5>\r\n            \r\n            {/* <Item>\r\n                <Input onChangeText={text => setCode(text)} placeholder='Code'/>\r\n            </Item> */}\r\n            <p className='mt-5' style={{fontSize: 18}}>A confirmation code has been sent to your email. Enter the code below to confirm password change.</p>\r\n            <TextField onChange={(e)=>setCode(e.target.value)} id=\"standard-basic\" label=\"Code\" />\r\n            {/* <Button style={{container: {marginTop: 10}}} raised onPress={confirmChangePass} primary text=\"Confirm\" /> */}\r\n            <Button className='mt-2' variant=\"contained\" onClick={confirmChangePass}>Confirm</Button>\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n","import React, {useState, useContext} from 'react'; \r\n\r\n\r\nimport { GlobalContext } from '../../Context/GlobalProvider';\r\n\r\nimport ForgotPass from '../Components/ForgotPass';\r\nimport ConfirmForgotPass from '../Components/ConfirmForgotPass';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n// import Title from '../HtmlComponents/Title';\r\n\r\n\r\n\r\nexport default function ForgotPassPage() {\r\n    const {changeOutsidePage, apiCall, globals, showToast} = useContext(GlobalContext);\r\n    const [forgotPassInputs, setForgotPassInputs] = useState({\r\n        \r\n        userID: 0,\r\n        reqCode: '',\r\n        confirmingForgotPass: false\r\n    });\r\n\r\n    async function resendCode(e){\r\n        e.preventDefault();\r\n        console.log('confirm change pass');\r\n        \r\n        let data = {\r\n            \r\n            userID: forgotPassInputs.userID\r\n            \r\n            \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/resendCodeForgotPass', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Code sent successfully.', 3, false);\r\n            // userData.token = response.data.payload;\r\n\r\n            // AsyncStorage.setItem('userData', JSON.stringify({token: userData.token}));\r\n            // getUserData(response.payload);    \r\n        }\r\n        // else{\r\n        //     showToast(response.message, 3, true);    \r\n        // }\r\n    }\r\n    \r\n    let div = <ForgotPass setForgotPassInputs={setForgotPassInputs}/>;\r\n    let resendBtn = null;\r\n    if(forgotPassInputs.confirmingForgotPass){\r\n        div = <ConfirmForgotPass userID={forgotPassInputs.userID} reqCode={forgotPassInputs.reqCode}/>;\r\n        // resendBtn = <Button onPress={resendCode} primary text=\"Resend Code\" />;\r\n        resendBtn = <Link className='mb-1 border-bottom' noIndent onClick={resendCode}>\r\n            Resend Code\r\n        </Link>\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='d-flex flex-column'>\r\n            {/* <Title title='Forgot Password'/> */}\r\n            {div}\r\n            <div style={{justifyContent: 'space-between'}} className='d-flex flex-row'>\r\n                \r\n                <Link className='mb-1 border-bottom' noIndent onClick={(e) => {e.preventDefault(); changeOutsidePage('Login')}}>\r\n                    Login\r\n                </Link>\r\n                {/* <Button onPress={()=>changeOutsidePage('Login')} primary text=\"Login\" /> */}\r\n                {resendBtn}\r\n            </div>\r\n             \r\n        </div>\r\n\r\n    );\r\n}","\r\nimport React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport ErrorLog from '../HtmlComponents/ErrorLog';\r\n// import Title from '../HtmlComponents/Title';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\nexport default function Register() {\r\n    console.log('REGISTER');\r\n    const {userData, globals, apiCall, forceUpdate, changeOutsidePage, checkUsernameInput, checkRepeatPassInput, checkPassInput, showToast} = useContext(GlobalContext);\r\n    const [userInputs, setUserInputs] = useState({\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        confirmingRegister: false,\r\n        repeatPass: '',\r\n        code: ''   \r\n    })\r\n\r\n    // const [error, setError] = useState('');\r\n    const [errors, setErrors] = useState({\r\n        username: '',\r\n        password: '',\r\n        repeatPass: ''\r\n    });\r\n    \r\n    async function register(){\r\n        console.log('register');\r\n        // var response = null;\r\n        console.log('user inputs: ', userInputs);\r\n        if(errors.username != ''|| errors.password != '' || errors.repeatPass != '' || userInputs.username == '' || userInputs.password == '' || userInputs.email == '' || userInputs.repeatPass == ''){\r\n            let toastObj = {\r\n                text: '',\r\n                buttonText: 'Okay',\r\n                duration: 3000\r\n            }\r\n\r\n            if(errors.username != ''|| errors.password != '' || errors.repeatPass != ''){\r\n                toastObj.text = 'Please check errors.';\r\n                \r\n            }else{\r\n                if(userInputs.username == ''){\r\n                    toastObj.text = 'Username cannot be blank.';\r\n                     \r\n                }else if(userInputs.password == ''){\r\n                    toastObj.text = 'Password cannot be blank.'; \r\n                }else if(userInputs.repeatPass == ''){\r\n                    toastObj.text = 'Repeat password cannot be blank.';    \r\n                }else{\r\n                    toastObj.text = 'Email cannot be blank.';   \r\n                }\r\n                  \r\n            }\r\n            showToast(toastObj.text, 3, true);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            method: 'post',\r\n            url: globals.varNames.blagsApiPath + 'user/register',\r\n            data: {\r\n                username: userInputs.username,\r\n                password: userInputs.password,\r\n                email: userInputs.email\r\n            }\r\n        }\r\n\r\n        console.log('options: ', options);\r\n        // if(userData.usingSample){\r\n            \r\n        //     response = Samples.register(options);\r\n        // }else{\r\n            \r\n        // }\r\n        let data = {\r\n            username: userInputs.username,\r\n            password: userInputs.password,\r\n            email: userInputs.email    \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/register', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // userData.verification.userID = response.payload;\r\n            userData.verification.email = userInputs.email;\r\n            userData.currentPage.front = 'Verification';\r\n            forceUpdate();\r\n            // userInputs.code = response.data.payload.code;\r\n            // userInputs.confirmingRegister = true;\r\n            // setUserInputs({...userInputs});\r\n        }\r\n    }\r\n    \r\n    function onChangePassword(e){\r\n        let text = e.target.value;\r\n        setUserInputs({...userInputs, password: text});\r\n        setErrors({...errors, password: checkPassInput(text)});\r\n        // checkPassInput(text);\r\n        // checkInputs(userInputs.username, text, userInputs.repeatPass);\r\n        // setError(checkPassInput(text));\r\n    }\r\n\r\n    \r\n\r\n    function onRepeatPasswordChange(e){\r\n        let text = e.target.value;\r\n        setUserInputs({...userInputs, repeatPass: text});\r\n        setErrors({...errors, repeatPass: checkRepeatPassInput(userInputs.password, text)});\r\n        // checkInputs(userInputs.username, userInputs.password, text);\r\n        // setError(checkRepeatPassInput(userInputs.password, text));\r\n    }\r\n\r\n    function onChangeUsername(e){\r\n        \r\n        let text = e.target.value;\r\n\r\n        setUserInputs({...userInputs, username: text});\r\n        setErrors({...errors, username: checkUsernameInput(text)});\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column py-5'>\r\n            {/* <Title title='Create Account'/> */}\r\n            {/* <Item>\r\n                <Input onChangeText={onChangeUsername} placeholder=\"Username\" />\r\n            </Item> */}\r\n            <h4 style={{alignSelf: 'flex-end'}}>Create Account</h4>\r\n            <TextField onChange={onChangeUsername} id=\"standard-basic\" label=\"Username\" />\r\n            <ErrorLog error={errors.username} />\r\n            {/* <Item>\r\n                <Input onChangeText={onChangePassword} placeholder=\"Password\" />\r\n            </Item> */}\r\n            <TextField type={userData.production? 'password' : 'text'} onChange={onChangePassword} id=\"standard-basic\" label=\"Password\" />\r\n            <ErrorLog error={errors.password} />\r\n            {/* <Item>\r\n                <Input onChangeText={onRepeatPasswordChange} placeholder=\"Repeat Password\" />\r\n            </Item> */}\r\n            <TextField type={userData.production? 'password' : 'text'} onChange={onRepeatPasswordChange} id=\"standard-basic\" label=\"Repeat Password\" />\r\n            <ErrorLog error={errors.repeatPass} />\r\n            {/* <Item>\r\n                <Input onChangeText={(text)=>setUserInputs({...userInputs, email: text})} placeholder=\"Email\" />\r\n            </Item> */}\r\n            <TextField onChange={(e)=>setUserInputs({...userInputs, email: e.target.value})} id=\"standard-basic\" label=\"Email\" />\r\n            {/* <Button style={{container: {marginVertical: 10}}} raised onPress={register} primary text=\"Create\" /> */}\r\n            <Button className='mt-2' variant=\"contained\" onClick={register}>Create</Button>\r\n            <div className='d-flex flex-row mt-2' style={{justifyContent: 'space-between'}}>\r\n                {/* <Text style={{fontSize: 30, alignSelf: 'center'}}>Sosyal Shaps</Text> */}\r\n                <Link className='mb-1 border-bottom' noIndent onClick={(e) => {e.preventDefault(); changeOutsidePage('Login')}}>\r\n                    Login\r\n                </Link>\r\n                \r\n            </div>\r\n            {/* <div style={{flexDirection: 'row'}}>\r\n               \r\n                <Button onPress={()=>changeOutsidePage('Login')} primary text=\"Login\" />\r\n            </div> */}\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useContext} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport LoginPage from '../Views/LoginPage';\r\nimport VerificationPage from '../Views/VerificationPage';\r\nimport ForgotPassPage from '../Views/ForgotPassPage';\r\nimport RegisterPage from '../Views/RegisterPage';\r\n\r\n\r\nexport default function OutsidePages() {\r\n\tconst {userData} = useContext(GlobalContext);\r\n\tlet page = <LoginPage/>\r\n    if(userData.currentPage.front == 'Verification'){\r\n\t\tpage = <VerificationPage/>;\r\n\t}else if(userData.currentPage.front == 'ForgotPass'){\r\n\t\tpage = <ForgotPassPage/>;\r\n\t}else if(userData.currentPage.front == 'Register'){\r\n\t\tpage = <RegisterPage/>;\r\n\t}\r\n    return (\r\n        <div style={{flex: 1}} className='px-3 py-2 d-flex flex-column'>\r\n            {page}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport default function CustomToast({closeToast, message, duration, isError}) {\r\n    console.log('AppModal');\r\n    // const {userData, globals, getUserData, forceUpdate, toastData} = useContext(GlobalContext);\r\n    setTimeout(()=>{\r\n        closeToast();\r\n    }, duration * 1000);\r\n\r\n    function handleClose(){\r\n        closeToast();\r\n    }\r\n\r\n    let severity = 'success';\r\n    if(isError){\r\n        severity = 'error';\r\n    }\r\n    // let text = <View style={{flexDirection: 'row'}}>\r\n    //     <Text>{message}</Text>\r\n    //     {/* <View style={{flexDirection: 'row'}}>\r\n    //         <Button onPress={closeToast} text=\"Close\"/>\r\n    //     </View> */}\r\n        \r\n    // </View>;\r\n    // let text = <Text>{message}<Button onPress={closeToast} text=\"Close\"/></Text>;\r\n    // <Button style={{container: {marginVertical: 10}}} raised onPress={register} primary text=\"Create\" />\r\n    return (\r\n        \r\n        // <Snackbar onRequestClose={closeToast} timeout={duration} visible={true} message={text} />\r\n        // <ModalBase styleView={{}} style={{position: 'absolute', bottom: 50, right: 5, left: 5, zIndex: 3, elevation: 2}}>\r\n        //     <View style={{backgroundColor: 'black', padding: 5}}>\r\n        //         <Text style={{fontSize: 12, color: 'white', marginBottom: 10}}>{message}</Text>\r\n        //         <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n        //             <Button primary onPress={closeToast} text=\"Close\"/>\r\n        //         </View>\r\n                \r\n        //     </View>  \r\n        // </ModalBase>\r\n        <div style={{position: 'absolute', backgroundColor: 'white', right: 5, left: 5, bottom: 50, zIndex: 5}}>\r\n            <Alert variant=\"filled\" onClose={handleClose} severity={severity}>\r\n                {message}\r\n            </Alert>\r\n        </div>\r\n                 \r\n        \r\n        \r\n       \r\n    );\r\n}","\r\nimport React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n// import ModalBase from '../HtmlComponents/ModalBase';\r\nimport Tab from './Tab';\r\nimport {Card, Button} from '@material-ui/core';\r\nimport Note from './Note';\r\n// import { View, Modal, ScrollView } from 'react-native';\r\n// import { Text } from 'native-base';\r\n// import { Button } from 'react-native-material-ui';\r\n\r\n\r\n\r\nexport default function AppModal({children, closeModal, buttons, onButtonsPressed, consumptionShow = false}) {\r\n    console.log('AppModal');\r\n    // buttons.push('Less');\r\n    const {consumptionNote} = useContext(GlobalContext);\r\n    let note = null;\r\n    if(consumptionShow){\r\n        note = <Note note={consumptionNote()} />;\r\n    }\r\n    return (\r\n        // <ModalBase styleView={{paddingVertical: 15, paddingHorizontal: 5}} style={{position: 'absolute', top: 110, right: 5, left: 5, backgroundColor: 'white', zIndex: 2, elevation: 2}}>\r\n        //     <View>\r\n        //         <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n        //             <Button primary text='Close' onPress={closeModal} transparent />\r\n                          \r\n        //         </View>\r\n        //         <ScrollView style={{height: 300, marginVertical: 10}}>\r\n        //             <View style={{paddingVertical: 30}}>\r\n        //                 {children}\r\n        //             </View>\r\n                    \r\n                    \r\n        //         </ScrollView>\r\n                \r\n               \r\n        //         <View style={{flexDirection: 'row'}}>\r\n        //         {buttons.map((button, id) => {\r\n        //             return (\r\n        //                 <Button style={{container: {marginRight: 3}}} raised key={id} primary text={button} onPress={()=>onButtonsPressed(button)} />\r\n                        \r\n        //             )\r\n                    \r\n        //         })}   \r\n\r\n        //         </View>\r\n        //     </View>\r\n            \r\n        // </ModalBase>\r\n        <div className='shadow-lg d-flex flex-column p-3 rounded' style={{position: 'absolute', backgroundColor: 'white', top: 70, right: 15, left: 15, bottom: 50, zIndex: 3}}>\r\n            <div className='d-flex flex-row mb-3' style={{justifyContent: 'flex-end'}}>\r\n                <Button onClick={closeModal}>Close</Button>\r\n            </div>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column mb-3 pb-4 px-3'>\r\n                {/* <div style={{height: 10000}}></div> */}\r\n                {children}\r\n                {note}\r\n            </div>\r\n            \r\n            <Tab moreTabs={['haha']} headers={buttons} isBtn={true} onChangeTab={onButtonsPressed} />\r\n            {/* <div style={{flex: 1, overflow: 'auto'}} className='p-3 d-flex flex-column'>\r\n                \r\n            </div> */}\r\n        </div>\r\n        \r\n       \r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useContext, useRef} from 'react'; \r\n\r\nimport {AppBar, Button, TextField, InputLabel, FormControl, Select, MenuItem} from '@material-ui/core';\r\n\r\n// import {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\n// [post, tags, blogID, replyID]\r\nexport default function InsertComponent({setPost, post}) {\r\n    console.log('NewItemModal');\r\n    // const {userData, globals, getUserData, singleModalData, apiCall, showToast, getSiteID} = useContext(GlobalContext);\r\n    \r\n    \r\n    const [insertType, setInsertType] = useState('none');\r\n    const [insertValue, setInsertValue] = useState('');\r\n\r\n    \r\n    \r\n    // var startPoint = 0\r\n    \r\n\r\n    // function onChangeInsertPicker(value){\r\n    //     console.log('SUBMIT NEW ITEM');\r\n    //     if(value == 'link'){\r\n\r\n    //     }\r\n        \r\n    // } \r\n\r\n    function onClickInsert(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        \r\n        if(insertType == 'link'){\r\n            let newPost = post + '[link]' + insertValue + '[/link]';\r\n            setPost(newPost);\r\n        }\r\n        \r\n    } \r\n\r\n    let insertInput = null;\r\n    let insertBtn = null;\r\n    if(insertType != 'none'){\r\n        if(insertType == 'link'){\r\n            // insertInput = <Item>\r\n            //     <Input onChangeText={(text)=>setInsertValue(text)} placeholder={insertType.charAt(0).toUpperCase() + insertType.substring(1)} />\r\n            // </Item>; \r\n            insertInput = <TextField onChange={(e)=>setInsertValue(e.target.value)} label={insertType.charAt(0).toUpperCase() + insertType.substring(1)} id=\"standard-basic\" />    \r\n        }\r\n\r\n        // insertBtn = <Button primary text='Insert' onPress={onClickInsert} raised />\r\n        // <Button className='mt-2' variant=\"contained\" onClick={login}>Login</Button>\r\n        insertBtn = <Button onClick={onClickInsert} variant=\"contained\">Insert</Button>\r\n    }\r\n    \r\n    \r\n    let pickerOptionsFinal = ['none', 'link'];\r\n    \r\n    return (\r\n       \r\n        <div className='d-flex flex-column'>\r\n            \r\n            {/* <Picker\r\n                note\r\n                mode=\"dropdown\"\r\n                // style={{ width: 120 }}\r\n                selectedValue={insertType}\r\n                onValueChange={(value)=>setInsertType(value)}\r\n            >\r\n                \r\n                {pickerOptionsFinal.map((option, id) => {\r\n                    return (\r\n                        <Picker.Item key={id} label={option.charAt(0).toUpperCase() + option.substring(1)} value={option} />\r\n                    )\r\n                    \r\n                })}\r\n                \r\n            </Picker> */}\r\n\r\n            <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">Insert Type</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={insertType}\r\n                    onChange={(e)=>{setInsertType(e.target.value)}}\r\n                >\r\n                   \r\n\r\n                    {pickerOptionsFinal.map((option, id) => {\r\n                        return (\r\n                            // <Picker.Item key={id} label={option} value={option} />\r\n                            <MenuItem key={id} value={option}>{option.charAt(0).toUpperCase() + option.substring(1)}</MenuItem>\r\n                        )\r\n                        \r\n                    })}\r\n                \r\n                </Select>\r\n            </FormControl>\r\n            {insertInput}\r\n            {insertBtn}\r\n        </div>\r\n            \r\n            \r\n        \r\n    );\r\n}","\r\nimport React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n// import { View, Image } from 'react-native';\r\n\r\n// import { Input, Item } from 'native-base';\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport InsertComponent from '../HtmlComponents/InsertComponent';\r\nimport Note from '../HtmlComponents/Note';\r\nimport SearchHints from '../HtmlComponents/SearchHints';\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\n\r\nexport default function NewMsgModal() {\r\n    console.log('NewMsgModal');\r\n    const {userData, globals, msgModalData, forceUpdate, apiCall, getSiteID, consumptionNote, showToast, openHintsModal, convertEmptyStr} = useContext(GlobalContext);\r\n    \r\n    const [username, setUsername] = useState(msgModalData.username);\r\n    // const [msgInputs, setMsgInputs] = useState({\r\n    //     username: msgModalData.username,\r\n    //     msg: msgModalData.msg\r\n    // });\r\n\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [msg, setMsg] = useState(msgModalData.msg);\r\n    const [hints, setHints] = useState([]);\r\n    \r\n\r\n    async function sendMsg(){\r\n        let usernameInit = convertEmptyStr(username);\r\n        if((usernameInit == '' && msgModalData.headerID == 0) || msg == ''){\r\n            let error = '';\r\n            if(usernameInit == '' && msgModalData.headerID == 0){\r\n            \r\n                error = 'Username cannot be empty.';\r\n                \r\n                \r\n            }else if(msg == ''){\r\n                error = 'Message cannot be empty.';\r\n                \r\n            }\r\n\r\n            showToast(error, 3, true);\r\n            return;\r\n        }\r\n        \r\n\r\n        let data = {\r\n            username: username,\r\n            message: msg,\r\n            siteID: getSiteID()\r\n        }\r\n\r\n        let path = 'message/newMessage';\r\n\r\n        if(msgModalData.msgID != 0){\r\n            \r\n            data = {\r\n                \r\n                msg: msg,\r\n                msgID: msgModalData.msgID\r\n            }\r\n\r\n            path = 'message/editMessage';\r\n        }else if(msgModalData.headerID != 0){\r\n\r\n            data = {\r\n                msgHeaderID: msgModalData.headerID,\r\n                post: msg\r\n            }\r\n            // console.log('options: ', options);\r\n            path = 'message/replyMessage';\r\n            // apiCall(globals.varNames.blagsApiPath + 'message/replyMessage', data);    \r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + path, data);\r\n        console.log('result: ', response);\r\n        if(response.status == 1){\r\n            showToast('Message submitted successfully.', 3, false);\r\n            closeModal();\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    // async function getHints(){\r\n    //     console.log('get hints');\r\n    //     let tags = await getSearchTags(username, 0, true);\r\n    //     setHints(tags);\r\n        \r\n    // }\r\n\r\n    function onSearchInputPressed(){\r\n        console.log('on search inputs pressed');\r\n        // if(!isTyping){\r\n        //     setIsTyping(true);         \r\n        //     // getHints();\r\n        // }\r\n\r\n        openHintsModal(username, true, setUsername);\r\n        \r\n    }\r\n\r\n    // function onChangeSearchInput(e){\r\n    //     console.log('on search inputs pressed');\r\n    //     setIsTyping(true);\r\n    //     // setSearchInputs({s, searchValue: text})\r\n    //     setUsername(e.target.value);\r\n    // }\r\n    \r\n    function closeModal(){\r\n        userData.openingMsgModal = false;\r\n        forceUpdate();\r\n    }\r\n\r\n    // function onPressHint(hint){\r\n    //     console.log('get hints');\r\n    //     setUsername(hint);\r\n        \r\n    //     setIsTyping(false);\r\n    //     // setOptions({...options, searchValue: hint});\r\n    //     // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    // }\r\n\r\n    // let usernameInput = <Item>\r\n    //     <Input value={username} onFocus={onSearchInputPressed} onChangeText={onChangeSearchInput} placeholder=\"Username\" />\r\n    // </Item>\r\n    let usernameInput = <TextField autoComplete='off' onClick={onSearchInputPressed} value={username} id=\"standard-basic\" label='Username' />\r\n    if(msgModalData.msgID != 0 || msgModalData.headerID != 0){\r\n        usernameInput = null;\r\n    }\r\n\r\n    // let div = <View>\r\n        \r\n    //     <Item>\r\n    //         <Input value={msg} onChangeText={(text)=>setMsg(text)} placeholder=\"Message\" />\r\n    //     </Item>\r\n    //     <InsertComponent post={msg} setPost={setMsg} />    \r\n    // </View>;\r\n\r\n    // if(isTyping){\r\n    //     div = <SearchHints hints={hints} onPressHint={onPressHint} isUser={true} />;\r\n    // }\r\n\r\n    let btn = 'Send';\r\n    if(msgModalData.msgID != 0){\r\n        btn = 'Edit';\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n    //     if(isTyping){\r\n    //         getHints();\r\n    //     }\r\n        \r\n    //     // setPageInitiated(true);\r\n    // }, [username]);\r\n\r\n    // let searchHints = null;\r\n    // if(isTyping){\r\n    //     searchHints = <SearchHints onPressClosed={()=>setIsTyping(false)} hintVal={username} onPressHint={onPressHint} isUser={true} />\r\n    // }\r\n    \r\n    return (\r\n        \r\n        <AppModal consumptionShow={true} buttons={[btn]} onButtonsPressed={sendMsg} closeModal={closeModal}>\r\n            \r\n            <div style={{position: 'relative'}} className='d-flex flex-column'>\r\n                {usernameInput}\r\n                {/* {searchHints}   */}\r\n            </div>\r\n            \r\n            {/* <Item>\r\n                <Input value={msg} onChangeText={(text)=>setMsg(text)} placeholder=\"Message\" />\r\n            </Item> */}\r\n            <TextField value={msg} onChange={(e)=>setMsg(e.target.value)} id=\"standard-basic\" label='Message' />\r\n            <InsertComponent post={msg} setPost={setMsg} />    \r\n            {/* <Note note={consumptionNote()} /> */}\r\n            {/* {div} */}\r\n            {/* <div>\r\n                \r\n            </div> */}\r\n            \r\n        </AppModal>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n ","\r\nimport React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\n\r\nimport {TextField} from '@material-ui/core';\r\n\r\n\r\nexport default function StartPointModal() {\r\n    console.log('NewMsgModal');\r\n    const {userData, globals, startPtModalData, forceUpdate} = useContext(GlobalContext);\r\n    \r\n    const [point, setPoint] = useState(startPtModalData.value);\r\n    \r\n    function changeStartPt(){\r\n        let value = parseInt(point);\r\n\r\n        if(!isNaN(value)){\r\n            startPtModalData.callbackFunc(value);\r\n        }\r\n        \r\n        closeModal();\r\n    }\r\n    \r\n    \r\n    function closeModal(){\r\n        userData.openingStartPtModal = false;\r\n        forceUpdate();\r\n    }\r\n\r\n    return (\r\n        \r\n        <AppModal buttons={['Ok']} onButtonsPressed={changeStartPt} closeModal={closeModal}>\r\n            {/* <Item>\r\n                <Input value={point + ''} onChangeText={(text)=>{setPoint(text)}} placeholder=\"Number\" />\r\n            </Item> */}\r\n            <TextField onChange={(e)=>setPoint(e.target.value)} id=\"standard-basic\" label=\"Number\" />\r\n            \r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport {Card, Button} from '@material-ui/core';\r\n\r\n\r\nexport default function YesNoModal() {\r\n    console.log('Yes No Modal');\r\n    const { userData, forceUpdate, yesNoModalData } = useContext(GlobalContext);\r\n\r\n    function onPressedNo(){\r\n        userData.openingYesNoModal = false;\r\n        forceUpdate();\r\n    }\r\n\r\n    function onPressedYes(){\r\n        yesNoModalData.callbackFunc();\r\n        onPressedNo();\r\n    }\r\n\r\n    return (\r\n        // <ModalBase styleView={{}} style={{position: 'absolute', top: 250, backgroundColor: 'white', elevation: 2, right: 5, left: 5}}>\r\n        //     <View style={{padding: 5, marginTop: 10}}>\r\n                \r\n        //         <View style={{marginBottom: 5, padding: 10}}>\r\n        //             <Text style={{fontSize: 15}}>\r\n        //                 {yesNoModalData.question}\r\n        //             </Text>\r\n                    \r\n                    \r\n        //         </View>\r\n                \r\n               \r\n        //         <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n        //             <Button style={{container:{marginRight: 5}}} primary text='Yes' onPress={onPressedYes} />\r\n        //             <Button primary text='No' onPress={onPressedNo} />\r\n                  \r\n\r\n        //         </View>\r\n        //     </View>\r\n            \r\n        // </ModalBase>\r\n        <div className='shadow-lg d-flex flex-column px-3 pt-3 rounded' style={{position: 'absolute', backgroundColor: 'white', top: 100, right: 5, left: 5, zIndex: 2}}>\r\n            \r\n            <p className='' style={{fontWeight: 500}}>{yesNoModalData.question}</p>\r\n            <div className='d-flex m-0' style={{justifyContent: 'flex-end'}}>\r\n                <Button className='' onClick={onPressedNo} color=\"primary\">No</Button>\r\n                <Button className='' onClick={onPressedYes} color=\"primary\">Yes</Button>   \r\n            </div>\r\n        </div>\r\n       \r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n// import ModalBase from '../HtmlComponents/ModalBase';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\n\r\nexport default function MoreOptionsModal() {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, moreOptionsModalData, forceUpdate, showToast, getSiteID} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    const [error, setError] = useState('');\r\n    \r\n    // const [postInputs, setPostInputs] = useState({\r\n    //     post: singleModalData.data.post,\r\n        \r\n    // });\r\n    \r\n    // var startPoint = 0\r\n    // console.log('single modal data: ', singleModalData);\r\n    function onPressClosed(){\r\n        userData.openingMoreOptionsModal = false;\r\n        forceUpdate();       \r\n    }\r\n\r\n    function onPressOption(option){\r\n        moreOptionsModalData.onClickOptionFunc(option);\r\n        onPressClosed();\r\n    }\r\n    \r\n    return (\r\n        // <ModalBase styleView={{}} style={{position: 'absolute', top: 110, right: 5, left: 5, backgroundColor: 'white', zIndex: 2, elevation: 2}}>\r\n        //     <View style={{flexDirection: 'row', justifyContent: 'flex-end', marginTop: 10}}>\r\n        //         <Button primary text='Close' onPress={onPressClosed} transparent />\r\n                        \r\n        //     </View>\r\n        //     <View style={{padding: 5, marginTop: 10, paddingBottom: 30}}>\r\n        //         <Divider />\r\n        //         {moreOptionsModalData.options.map((option) => {\r\n        //             return (\r\n                        \r\n        //                 <ListItem\r\n        //                     divider\r\n        //                     centerElement={{\r\n        //                         primaryText: option,\r\n        //                     }}\r\n        //                     onPress={()=>onPressOption(option)}\r\n                            \r\n        //                 />\r\n                            \r\n        //             )\r\n                    \r\n        //         })}\r\n                                      \r\n                    \r\n        //     </View>\r\n            \r\n        // </ModalBase>\r\n\r\n        <div className='shadow-lg d-flex flex-column p-3' style={{position: 'absolute', backgroundColor: 'white', top: 70, right: 50, left: 50, bottom: 50, zIndex: 2}}>\r\n            <div className='d-flex flex-row mb-3' style={{justifyContent: 'flex-end'}}>\r\n                <Button onClick={onPressClosed}>Close</Button>\r\n            </div>\r\n            <div className='d-flex flex-column px-2 py-3'>\r\n                {moreOptionsModalData.options.map((option) => {\r\n                    return (\r\n                        \r\n                        // <ListItem\r\n                        //     divider\r\n                        //     centerElement={{\r\n                        //         primaryText: option,\r\n                        //     }}\r\n                        //     onPress={()=>onPressOption(option)}\r\n                            \r\n                        // />\r\n\r\n                        <Link style={{fontSize: 20, fontWeight: 600}} className='mb-2 pb-1 border-bottom pl-2' href=\"#\" onClick={(e)=>{e.preventDefault(); onPressOption(option)}}>\r\n                            {option}\r\n                        </Link>\r\n                            \r\n                    )\r\n                    \r\n                })}\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n    );\r\n}","import React, {useState, useContext, useRef, useEffect} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n// import ModalBase from '../HtmlComponents/ModalBase';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchHints from '../HtmlComponents/SearchHints';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nexport default function HintsModal() {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, hintsModalData, forceUpdate, showToast, getSiteID} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    // const [error, setError] = useState('');\r\n    // const [hints, setHints] = useState([]);\r\n    const {callbackFunc, isUserSearch, hint} = hintsModalData;\r\n    const [searchInputVal, setSearchInputVal] = useState(hint);\r\n    // const [isTyping, setIsTyping] = useState(false);\r\n    const inputRef = useRef(null);\r\n    // const [postInputs, setPostInputs] = useState({\r\n    //     post: singleModalData.data.post,\r\n        \r\n    // });\r\n    function onChangeSearchInput(e){\r\n        console.log('on search inputs pressed');\r\n        // setIsTyping(true);\r\n        // setSearchInputs({s, searchValue: text})\r\n        setSearchInputVal(e.target.value);\r\n    }\r\n\r\n    // function onSearchInputPressed(){\r\n    //     console.log('on search inputs pressed');\r\n    //     if(!isTyping){\r\n    //         setIsTyping(true);         \r\n    //         // getHints()\r\n    //     }\r\n        \r\n    // }\r\n\r\n    function onPressHint(hint){\r\n        console.log('get hints');\r\n        \r\n        // setSearchInputVal(hint);\r\n        \r\n        // setIsTyping(false);\r\n        callbackFunc(hint);\r\n        onPressClosed();\r\n        // setOptions({...searchOptions, searchValue: hint});\r\n        // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    }\r\n\r\n    function onClickOk(){\r\n        console.log('get hints');\r\n        \r\n        // setSearchInputVal(hint);\r\n        \r\n        // setIsTyping(false);\r\n        callbackFunc(searchInputVal)\r\n        onPressClosed();\r\n        // setOptions({...searchOptions, searchValue: hint});\r\n        // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    }\r\n    \r\n    // var startPoint = 0\r\n    // console.log('single modal data: ', singleModalData);\r\n    function onPressClosed(){\r\n        userData.openingHintsModal = false;\r\n        forceUpdate();       \r\n    }\r\n\r\n    // function onPressHint(hint){\r\n    //     console.log('get hints');\r\n        \r\n    //     setSearchInputVal(hint);\r\n        \r\n    //     setIsTyping(false);\r\n    //     setOptions({...searchOptions, searchValue: hint});\r\n    //     // setSearchInputs({...searchInputs, searchValue: hint});\r\n        \r\n        \r\n    // }\r\n\r\n    // function onPressOption(option){\r\n    //     moreOptionsModalData.onClickOptionFunc(option);\r\n    //     onPressClosed();\r\n    // }\r\n    useEffect(() => { \r\n        // getItems() \r\n\r\n        console.log('input ref: ', inputRef);\r\n        inputRef.current.click();\r\n    }, [inputRef])\r\n\r\n    let searchHints = <SearchHints hintVal={searchInputVal} onPressHint={onPressHint} isUser={isUserSearch} />;\r\n    // if(isTyping){\r\n        \r\n    // }\r\n    \r\n    return (\r\n        \r\n\r\n        <div className='shadow-lg d-flex flex-column py-2' style={{position: 'absolute', backgroundColor: 'white', top: 0, right: 0, left: 0, bottom: 0, zIndex: 4}}>\r\n            <div className='d-flex flex-row mb-1' style={{justifyContent: 'flex-end'}}>\r\n                <Button onClick={onPressClosed}>Close</Button>\r\n            </div>\r\n            <Paper style={{width: '100%'}} className='mb-1 d-flex flex-row' component=\"form\">\r\n                \r\n                <InputBase\r\n                    value={searchInputVal}\r\n                    onChange={onChangeSearchInput}\r\n                    // onClick={onSearchInputPressed}\r\n                    style={{flex: 1}}\r\n                    className='pl-3'\r\n                    placeholder=\"Search...\"\r\n                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                    ref={inputRef}\r\n                />\r\n                \r\n                <IconButton onClick={onClickOk} aria-label=\"search\">\r\n                    {/* <SearchIcon /> */}\r\n                    <CheckIcon />\r\n                </IconButton>\r\n                {/* <IconButton onClick={()=>openSingleModal('Search Options', {searchOptions: searchOptions, setSearchOptions: setSearchOptions})} aria-label=\"menu\">\r\n                    <MoreVertIcon />\r\n                </IconButton> */}\r\n                {/* <Divider orientation=\"vertical\" /> */}\r\n                \r\n            </Paper>\r\n            {searchHints}\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\n// import {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n// import { View, Text } from 'react-native';\r\n// import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport InsidePages from '../../MainViews/InsidePages';\r\n// import InsidePages from './InsidePages';\r\nimport OutsidePages from './OutsidePages';\r\n\r\n// import TestPage from './TestPage';\r\n// import * as Font from 'expo-font';\r\n// import { AppLoading } from 'expo';\r\n\r\n// import OtherProfilePage from '../Views/OtherProfilePage';\r\n// import OtherUserList from '../Views/OtherUserList';\r\n// import OtherPostPage from '../Views/OtherPostPage';\r\nimport CustomToast from '../HtmlComponents/CustomToast';\r\nimport PageNav from '../Components/PageNav';\r\nimport NewMsgModal from '../Modals/NewMsgModal';\r\nimport StartPointModal from '../Modals/StartPointModal';\r\nimport YesNoModal from '../Modals/YesNoModal';\r\nimport MoreOptionsModal from '../Modals/MoreOptionsModal';\r\nimport HintsModal from '../Modals/HintsModal';\r\n\r\n// import NewItemModal from '../Modals/NewItemModal';\r\n// // import EditMsgModal from '../Modals/EditMsgModal';\r\n// // import HirerModal from '../Modals/HirerModal';\r\n// // import HireeModal from '../Modals/HireeModal';\r\n// // import ShapModal from '../Modals/ShapModal';\r\n// import ReviewModal from '../Modals/ReviewModal';\r\n// // import EditItemModal from '../Modals/EditItemModal';\r\n// import BuyDataModal from '../Modals/BuyDataModal';\r\n// import ImageModal from '../Modals/ImageModal';\r\n// import UploadItemPhotoModal from '../Modals/UploadItemPhotoModal';\r\n// import SearchOptionsModal from '../Modals/SearchOptionsModal';\r\n// import NewPostModal from '../Modals/NewPostModal';\r\n// import PostOptionsModal from '../Modals/PostOptionsModal';\r\n// import UploadVerifiedPhotoModal from '../Modals/UploadVerifiedPhotoModal';\r\n// // import EditVerifiedAccountModal from '../Modals/EditVerifiedAccountModal';\r\n// import NewTagModal from '../Modals/NewTagModal';\r\n// import NewSerchItemModal from '../Modals/NewSerchItemModal';\r\n// // import InfoModal from '../Modals/InfoModal';\r\n// import BidModal from '../Modals/BidModal';\r\n// import DetailsModal from '../Modals/DetailsModal';\r\n// import GroserModal from '../Modals/GroserModal';\r\n\r\n// import { Ionicons } from '@expo/vector-icons';\r\n// import { Snackbar, Subheader, Card, COLOR, ListItem } from 'react-native-material-ui';\r\n// import { Button, Icon } from 'native-base';\r\n// import io from 'socket.io-client';\r\n\r\n\r\n\r\nexport default function Pages({otherPage, singleModalInit, groserModal}) {\r\n    console.log('PAGES COM');\r\n    // const {getUserData} = useContext(GlobalContext);\r\n    const {userData, getUserData, globals, appData, pageNavData, forceUpdate, toastData, initiateGlobals, apiCall} = useContext(GlobalContext);\r\n    \r\n    console.log('singleModalInit: ', singleModalInit);\r\n    async function getUserToken(){\r\n        console.log('get user token');\r\n        // console.log('asyn storage: ', AsyncStorage);\r\n        let value = localStorage.getItem('userData');\r\n        console.log('value: ', value);\r\n        let userDataStorage = JSON.parse(value); \r\n        \r\n        if(userDataStorage != null){\r\n            console.log('userdata storage: ', userDataStorage);\r\n            // userData.token = userDataStorage.token;\r\n            getUserData(userDataStorage.token);\r\n            \r\n            \r\n            \r\n        }else{\r\n            userData.gotUserData = true;\r\n            userData.loggedIn = false;\r\n            forceUpdate();\r\n        }   \r\n        \r\n    }\r\n\r\n    function initiateVariables(){\r\n        let beginPath = globals.varNames.beginPathProduction;\r\n        if(!userData.production){\r\n            beginPath = globals.varNames.beginPath;\r\n        }\r\n\r\n        let path = beginPath + ':' + globals.varNames.shappersPort;\r\n        let pathBlags = beginPath + ':' + globals.varNames.blagsPort;\r\n\r\n        appData.siteID = globals.varNames.shappersSiteID;\r\n        appData.name = globals.varNames.shappersName;\r\n\r\n        if(!userData.isShappers){\r\n\r\n            path = beginPath + ':' + globals.varNames.shapsPort;    \r\n            appData.siteID = globals.varNames.shapsSiteID;\r\n            appData.name = globals.varNames.shapsName;\r\n\r\n        }\r\n        \r\n        globals.varNames.apiPath = path + '/api/';\r\n        globals.varNames.blagsApiPath = pathBlags + '/api/';\r\n        globals.varNames.blagsServerPath = path;\r\n        globals.varNames.imgPath = path + '/upload/profile/';\r\n        globals.varNames.itemsImgPath = path + '/upload/item/';\r\n        globals.varNames.imgPathBlags = pathBlags + '/upload/profile/';\r\n        globals.varNames.verifiedPhotoPath = pathBlags + '/upload/verifiedPhoto/';\r\n\r\n        getWindowSize();\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n        // appData.siteID = globals.varNames.shappersSiteID;\r\n        // if(!userData.production){\r\n        //     globals.varNames.apiPath = globals.varNames.devApi;\r\n        // }    \r\n    }\r\n\r\n    // async function loadFont(){\r\n    //     await Font.loadAsync({\r\n    //         Roboto: require('native-base/Fonts/Roboto.ttf'),\r\n    //         Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\r\n    //         ...Ionicons.font,\r\n            \r\n    //     });\r\n    //     setFontLoaded(true);\r\n    // }\r\n\r\n    function getWindowSize(){\r\n        let width = window.innerWidth;\r\n        let size = 'lg';\r\n        if(width >= 769 && width < 980){\r\n            size = 'md';\r\n        }else if(width >= 480 && width < 769){\r\n            size = 'sm';\r\n        }else if(width < 480){\r\n            size = 'xm';   \r\n        }\r\n\r\n        return size;\r\n    }\r\n    \r\n    function closeToast(){\r\n        userData.showingToast = false;\r\n        forceUpdate();\r\n    }\r\n\r\n    // function closeOtherPage(){\r\n    //     userData.showingOtherPage = false;\r\n    //     forceUpdate();\r\n    // }\r\n\r\n    // function closeSingleModal(){\r\n    //     userData.openingSingleModal = false;\r\n    //     forceUpdate();\r\n    // }\r\n\r\n    function updateDimensions(){\r\n        console.log('UPDATE DIMENSIONS');\r\n        let SIZE = getWindowSize();\r\n        \r\n        if(userData.windowSize != SIZE){\r\n            userData.windowSize = SIZE\r\n            forceUpdate();\r\n        }\r\n    }\r\n\r\n    async function pageLoad(){\r\n        initiateVariables();\r\n        // loadFont();\r\n        // await getGlobals();\r\n        getUserToken();\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Update the document title using the browser API\r\n        \r\n    //     pageLoad();\r\n    //     // await getUserToken(userData, getUserData);\r\n    // }, []);\r\n    \r\n    let page = <OutsidePages key={userData.pageNum}/>\r\n    if(userData.loggedIn){\r\n        page = <InsidePages key={userData.pageNum}/>\r\n    }\r\n\r\n    let finalPage = page;\r\n    if(userData.showingOtherPage){\r\n        finalPage = otherPage;\r\n        // if(otherPageData.name == 'Other List'){\r\n        //     finalPage = <OtherUserList key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n        // }else if(otherPageData.name == 'Other Post'){\r\n        //     finalPage = <OtherPostPage key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n        // }\r\n    }\r\n\r\n    \r\n\r\n    let toast = null;\r\n    if(userData.showingToast){\r\n        toast = <CustomToast isError={toastData.isError} closeToast={closeToast} message={toastData.message} duration={toastData.duration} />\r\n    }\r\n\r\n    let msgModal = null;\r\n    if(userData.openingMsgModal){\r\n        msgModal = <NewMsgModal/>\r\n    }\r\n\r\n    let startPtModal = null;\r\n    if(userData.openingStartPtModal){\r\n        startPtModal = <StartPointModal />\r\n    }\r\n\r\n    let hintsModal = null;\r\n    if(userData.openingHintsModal){\r\n        hintsModal = <HintsModal />\r\n    }\r\n\r\n    // let groserModal = null;\r\n    // if(groserModa){\r\n    //     groserModal = <GroserModal />\r\n    // }\r\n\r\n    let singleModal = null;\r\n    if(userData.openingSingleModal){\r\n        singleModal = singleModalInit;\r\n        // singleModal = <NewItemModal closeModal={closeSingleModal}/>;\r\n        // if(singleModalData.name == 'Review'){\r\n        //     singleModal = <ReviewModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'New Item'){\r\n        //     singleModal = <NewItemModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Upload Item Photo'){\r\n        //     singleModal = <UploadItemPhotoModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Image'){\r\n        //     singleModal = <ImageModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Buy Data'){\r\n        //     singleModal = <BuyDataModal closeModal={closeSingleModal}/>;\r\n        // // }else if(singleModalData.name == 'Edit Msg'){\r\n        // //     singleModal = <EditMsgModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Post Options'){\r\n        //     singleModal = <PostOptionsModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Upload Verified Photo'){\r\n        //     singleModal = <UploadVerifiedPhotoModal closeModal={closeSingleModal}/>;\r\n        // // }else if(singleModalData.name == 'Edit Verified Account'){\r\n        // //     singleModal = <EditVerifiedAccountModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'New Tag'){\r\n        //     singleModal = <NewTagModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'New Serch Item'){\r\n        //     singleModal = <NewSerchItemModal closeModal={closeSingleModal}/>;\r\n        // // }else if(singleModalData.name == 'Info'){\r\n        // //     singleModal = <InfoModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Bid'){\r\n        //     singleModal = <BidModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Details'){\r\n        //     singleModal = <DetailsModal closeModal={closeSingleModal}/>;\r\n        \r\n        // }else if(singleModalData.name == 'New Post'){\r\n        //     singleModal = <NewPostModal closeModal={closeSingleModal}/>;    \r\n        // }else if(singleModalData.name == 'Search Options'){\r\n        //     singleModal = <SearchOptionsModal closeModal={closeSingleModal}/>;  \r\n        // }      \r\n    }\r\n\r\n    let yesNoModal = null;\r\n    if(userData.openingYesNoModal){\r\n        yesNoModal = <YesNoModal/>\r\n    }\r\n\r\n    let moreOptionsModal = null;\r\n    if(userData.openingMoreOptionsModal){\r\n        moreOptionsModal = <MoreOptionsModal />\r\n    }\r\n\r\n    let pageNav = null;\r\n    if(userData.showingPageNav){\r\n        pageNav = <div className='d-flex flex-column pr-3 py-2 border-top' style = {{alignItems: 'flex-end'}}>\r\n            <PageNav key={pageNavData.key} isForward={true} onChangeStartPt={(startPt)=>pageNavData.callbackFunc(startPt)} />\r\n        </div>\r\n        \r\n    }\r\n\r\n    let app = null;\r\n    if(userData.gotUserData){\r\n        app = <div style={{height: '100vh'}} className='d-flex flex-column'>\r\n\t\t\t{/* {otherUserList}\r\n\t\t\t{otherUser} */}\r\n            \r\n            \r\n            {finalPage}\r\n            {pageNav}\r\n            {groserModal}\r\n            {singleModal}\r\n            {startPtModal}\r\n            {msgModal}\r\n            {yesNoModal}\r\n            {moreOptionsModal}\r\n            {hintsModal}\r\n            {toast}\r\n        </div>;\r\n        \r\n        // app = <TestPage/>\r\n    }\r\n    return (\r\n        // <div style={{height: '100vh',padding: 25}} className='d-flex flex-column'>\r\n        //     <div style={{flex: 1, backgroundColor: 'red', display: 'flex'}}>\r\n        //         <div style={{flex: 1, backgroundColor: 'yellow'}}></div>\r\n        //         <div style={{flex: 1, backgroundColor: 'black'}}></div>\r\n        //     </div>\r\n        //     {/* <div style={{flex: 1, backgroundColor: 'blue'}}></div> */}\r\n        //     <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n        //         <div style={{flex: 1, overflow: 'auto'}}>\r\n                    \r\n        //             <div >\r\n        //                 <div style={{height: 500 }}>\r\n        //                     a\r\n        //                 </div> \r\n        //             </div> \r\n        //             {/* <div style={{height: 500 }}>\r\n        //                 a\r\n        //             </div>  */}\r\n        //         </div>\r\n        //         <div style={{flex: 1, backgroundColor: 'red'}}>\r\n                   \r\n        //         </div>\r\n                   \r\n        //     </div>\r\n        // </div>\r\n        app\r\n        \r\n        \r\n\r\n        \r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\nimport ItemList from '../List/ItemList';\r\n\r\n// import PageNav from '../common/Components/PageNav';\r\n\r\nexport default function OtherUserList({userID}) {\r\n    console.log('LIST')\r\n\tconst { userData, globals, apiCall, showPageNav, closePageNav, funcDelayer } = useContext(GlobalContext);\r\n    // const [startPoint, setStartPoint] = useState(0)\r\n    let timeOutID = 0;\r\n    \r\n    // let timeOutID = 0;\r\n    const [itemsData, setItemsData] = useState({\r\n        items: [],\r\n        startPt: 0\r\n    });\r\n\r\n    const [toastData, setToastData] = useState({\r\n        isOpen: false,\r\n        message: '',\r\n        duration: 0\r\n    });\r\n\r\n    \r\n    \r\n    const [startPt, setStartPt] = useState(0);\r\n    useEffect(() => { \r\n        // timeOutID = funcDelayer(timeOutID, getItems, 1000);\r\n        // getItems(); \r\n        showPageNav(getItems); \r\n        getItems(0); \r\n        return closePageNav\r\n    }, [])\r\n\r\n\r\n    async function getItems(startPt) {\r\n        console.log('GET DATA')\r\n        // getTimeOut(timeOutID, )\r\n        // timeOutID = getTimeOut(timeOutID, async ()=>{\r\n            \r\n        // })\r\n        // hirerID: req.body.hirerID,\r\n        // startPoint: req.body.startPoint\r\n        console.log('user id: ', userID)\r\n        let route = 'item/getShapItems';\r\n        let data = {\r\n            startPoint: startPt,\r\n            shapID: userID\r\n        }\r\n\r\n        if(userData.isShappers){\r\n            route = 'item/getHirerItems';\r\n            data = {\r\n                startPoint: startPt,\r\n                hirerID: userID\r\n            }\r\n        }\r\n        let response = await apiCall(globals.varNames.apiPath + route, data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // items = response.payload;\r\n            setItemsData({...itemsData, items: response.payload});\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <div style={{flex: 1, overflow: 'auto'}}>\r\n                {itemsData.items.map((item, idx) => \r\n                    <ItemList isUser={false} key={item.id} item = {item} />\r\n                )}  \r\n            </div>\r\n            \r\n\r\n\r\n            {/* <PageNav isForward={true} getItems={getItems} startPt={startPt} setStartPt={setStartPt} /> */}\r\n        </div> \r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport {AppBar, Toolbar, IconButton} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport AdsDiv from '../Components/AdsDiv';\r\n\r\n// import CustomToast from './CustomToast';\r\n\r\nexport default function OtherPage({onPressBack, children}) {\r\n    console.log('other profile page');\r\n    const {userData, globals, appData, forceUpdate} = useContext(GlobalContext);\r\n    let pageWidth = {width: 350};\r\n    if(userData.windowSize == 'sm' || userData.windowSize == 'xm'){\r\n        pageWidth = {flex: 1}\r\n    }\r\n\r\n    return (\r\n        <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton onClick={onPressBack} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <BackIcon />\r\n                    </IconButton>\r\n                    \r\n                </Toolbar>\r\n            </AppBar>    \r\n            \r\n            {/* <div style={{paddingHorizontal: 5, flex: 1, paddingTop: 5}}>\r\n                {children}\r\n            </div> */}\r\n\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n                {/* <AdsDiv isRight={false} /> */}\r\n                {/* {sideNav} */}\r\n                <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column pt-1'>\r\n                    {children} \r\n                </div>\r\n                \r\n                {/* <AdsDiv isRight={true} />      */}\r\n                \r\n                \r\n                \r\n            </div>\r\n            \r\n            {/* {toast} */}\r\n            \r\n        </div>   \r\n\r\n    // <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column'>\r\n        // <AppBar position=\"static\">\r\n        //     <Toolbar>\r\n        //         <IconButton onClick={toggleDrawer} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n        //             <MenuIcon />\r\n        //         </IconButton>\r\n                \r\n        //     </Toolbar>\r\n        // </AppBar>\r\n    //     <Drawer anchor='left' open={toggleMenu} onClose={()=>toggleDrawer()}>\r\n        \r\n    //         <SideNav closeDrawer={closeDrawer} />\r\n    //     </Drawer>\r\n        // <div style={{flex: 1, overflow: 'auto'}} className='d-flex'>\r\n        //     <AdsDiv isRight={false} />\r\n        //     {sideNav}\r\n        //     <div style={{...pageWidth, overflow: 'auto'}} className='d-flex flex-column pt-1'>\r\n        //         {page} \r\n        //     </div>\r\n            \r\n        //     <AdsDiv isRight={true} />     \r\n            \r\n            \r\n            \r\n        // </div>\r\n\r\n    \r\n    // </div>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport ProfileDiv from '../Components/ProfileDiv';\r\nimport Reviews from '../Components/Reviews';\r\nimport PostsDiv from '../Components/PostsDiv';\r\nimport OtherUserItems from '../../Components/OtherUserItems';\r\n\r\n\r\nimport InsidePageWrapper from '../HtmlComponents/InsidePageWrapper';\r\n\r\nimport OtherPage from '../HtmlComponents/OtherPage';\r\nimport Members from '../Components/Members';\r\n\r\nexport default function OtherProfilePage({closeOtherPage}) {\r\n    console.log('other profile page');\r\n    const {userData, globals, apiCall, otherUserData, otherPageData, countries, getApiPath} = useContext(GlobalContext);\r\n    const [profileData, setProfileData] = useState({\r\n        reviews: [],\r\n        gotUserData: false,\r\n        userData: null\r\n    })\r\n    console.log('followed users: ', userData.followedUsers);\r\n    const [toastData, setToastData] = useState({\r\n        isOpen: false,\r\n        message: '',\r\n        duration: 0\r\n    });\r\n    \r\n    const [tab, setTab] = useState('Profile');\r\n    \r\n    \r\n\r\n    async function getUserProfile(){\r\n        let response = await apiCall(getApiPath() + 'user/getProfile', {username: otherPageData.data});\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            // getReviews();\r\n            let userID = 0;\r\n            let joinReqs = [];\r\n            let companyID = 0;\r\n            let userInfo = response.payload;\r\n            if(userInfo.userid == null){\r\n                userID = userInfo.id;\r\n                joinReqs = userData.sosyalData.joinReqs;\r\n                \r\n            }else{\r\n\r\n                userID = userInfo.userid;\r\n                joinReqs = userData.joinReqs;\r\n            }\r\n            \r\n            let userDataInit = {\r\n                userID: userID,\r\n                username: userInfo.username,\r\n                profileImgUrl: globals.varNames.imgPath + userInfo.imgurl,\r\n                name: userInfo.name,\r\n                companyID: userData.companyID,\r\n                country: countries[userInfo.country],\r\n                rate: userInfo.rating,\r\n                followedUsers: userData.followedUsers,\r\n                joinReqs: joinReqs,\r\n                rateVerified: userInfo.ratingverified,\r\n                numOfRatersVerified: userInfo.numofratersverified,\r\n                rate: userInfo.rating,\r\n                numOfRaters: userInfo.numofraters,\r\n                verifiedUser: userInfo.verifieduser,\r\n                company: {\r\n                    username: userInfo.companyusername,\r\n                    rating: userInfo.companyrating,\r\n                    numOfRaters: userInfo.companynumofraters,\r\n                    ratingVerified: userInfo.companyratingverified,\r\n                    numOfRatersVerified: userInfo.companynumofratersverified,\r\n                    name: userInfo.companyname,\r\n                    imgURL: userInfo.companyimgurl,\r\n                }\r\n            }\r\n            \r\n            setProfileData({...profileData, userData: userDataInit, gotUserData: true});\r\n        } \r\n    }\r\n\r\n    // function onPressBack(){\r\n    //     userData.showingOtherUser = false;\r\n    //     forceUpdate();\r\n    // }\r\n    \r\n    function onChangeTab(page){\r\n        setTab(page);\r\n        \r\n    }\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        getUserProfile();\r\n    }, []);\r\n    \r\n    let page = <ProfileDiv profileData={profileData.userData} />;\r\n    if(tab == 'Reviews'){\r\n        // reviews, startPt, setStartPt, getReviews\r\n        page = <Reviews isUser={false} userData={profileData.userData} />;\r\n    }else if(tab == 'Members'){\r\n        page = <Members fromUser={false} coID={profileData.userData.userID}/>\r\n    }else if(tab == 'Items'){\r\n        page = <OtherUserItems userID={profileData.userData.userID}/>;\r\n    }else if(tab == 'Posts'){\r\n        page = page = <PostsDiv isPostResult={false} postResult={null} isProfilePage={true} userViewedID={profileData.userData.userID} />;\r\n    }\r\n\r\n    let finalPage = null;\r\n    if(profileData.gotUserData){\r\n        finalPage = page;\r\n        \r\n    }\r\n    \r\n    let moreTabs = ['Posts', 'Items', 'Members'];\r\n    if(userData.isSosyal){\r\n        moreTabs.splice(1, 1);\r\n    }\r\n    return (\r\n        <OtherPage onPressBack={closeOtherPage} >\r\n            <InsidePageWrapper onChangeTab={onChangeTab} tabs={['Profile', 'Reviews', 'More']} moreTabs={moreTabs}>\r\n                <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column py-2 px-1'>\r\n                    {finalPage}\r\n                </div>\r\n                \r\n            </InsidePageWrapper>\r\n            {/* <div style={{flex: 1}}>\r\n                \r\n                <Tab headers={['Profile', 'Reviews', 'More']} moreTabs={['Items', 'Posts', 'Members']} onChangeTab={onChangeTab}></Tab>\r\n                \r\n            </div> */}\r\n            \r\n        </OtherPage>    \r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\nimport OtherPage from '../common/HtmlComponents/OtherPage';\r\n\r\nimport OtherUserItems from '../Components/OtherUserItems';\r\n\r\nexport default function OtherUserList({closeOtherPage}) {\r\n    console.log(' OTHER LIST')\r\n\tconst { userData, globals, forceUpdate, apiCall, funcDelayer, otherUserListData, otherPageData } = useContext(GlobalContext);\r\n    // const [startPoint, setStartPoint] = useState(0)\r\n    let timeOutID = 0;\r\n    \r\n    // let timeOutID = 0;\r\n    const [itemsData, setItemsData] = useState({\r\n        items: [],\r\n        startPt: 0\r\n    });\r\n\r\n    const [toastData, setToastData] = useState({\r\n        isOpen: false,\r\n        message: '',\r\n        duration: 0\r\n    });\r\n\r\n    function onPressBack(){\r\n        userData.showingOtherUserList = false;\r\n        forceUpdate();\r\n    }\r\n    \r\n    const [startPt, setStartPt] = useState(0);\r\n    // useEffect(() => { \r\n    //     // timeOutID = funcDelayer(timeOutID, getItems, 1000);\r\n    //     getItems(); \r\n    // }, [])\r\n\r\n\r\n    // async function getItems() {\r\n    //     console.log('GET DATA')\r\n    //     // getTimeOut(timeOutID, )\r\n    //     // timeOutID = getTimeOut(timeOutID, async ()=>{\r\n            \r\n    //     // })\r\n    //     // hirerID: req.body.hirerID,\r\n    //     // startPoint: req.body.startPoint\r\n    //     let route = 'item/getShapItems';\r\n    //     let data = {\r\n    //         startPoint: startPt,\r\n    //         shapID: otherUserListData.userID\r\n    //     }\r\n\r\n    //     if(userData.isShappers){\r\n    //         route = 'item/getHirerItems';\r\n    //         data = {\r\n    //             startPoint: startPt,\r\n    //             hirerID: otherUserListData.userID\r\n    //         }\r\n    //     }\r\n\r\n    //     let response = await apiCall(globals.varNames.apiPath + route, data);\r\n    //     if(response.status == 1){\r\n    //         // items = response.payload;\r\n    //         setItemsData({...itemsData, items: response.payload});\r\n    //     }\r\n        \r\n    // }\r\n    \r\n\r\n    return (\r\n        <OtherPage onPressBack={closeOtherPage}>\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column px-1 mt-2'>\r\n                <OtherUserItems userID={otherPageData.data} />\r\n            </div>\r\n            \r\n            {/* <View style={{flex: 1}}>\r\n                {itemsData.items.map((item, idx) => \r\n                    <ItemList isUser={false} key={item.id} item = {item} />\r\n                )}  \r\n            </View>\r\n            \r\n\r\n\r\n            <PageNav isForward={true} getItems={()=>timeOutID = funcDelayer(timeOutID, getItems, 1000)} startPt={startPt} setStartPt={setStartPt} /> */}\r\n        </OtherPage>    \r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\nimport OtherPage from '../HtmlComponents/OtherPage';\r\n\r\nimport PostsDiv from '../Components/PostsDiv';\r\n\r\nexport default function OtherPostPage({closeOtherPage}) {\r\n    console.log('LIST')\r\n\t\r\n    const { userData, globals, forceUpdate, apiCall, funcDelayer, otherPostData, otherPageData } = useContext(GlobalContext);\r\n    console.log('other post data: ', otherPostData);\r\n    const [toastData, setToastData] = useState({\r\n        isOpen: false,\r\n        message: '',\r\n        duration: 0\r\n    });\r\n\r\n    function onPressBack(){\r\n        userData.showingOtherPost = false;\r\n        forceUpdate();\r\n    }\r\n    \r\n    return (\r\n        <OtherPage onPressBack={closeOtherPage}>\r\n            \r\n            <PostsDiv userViewedID={0} isProfilePage={false} isPostResult={true} postResult={otherPageData.data} />\r\n        </OtherPage>    \r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n// import { View } from 'react-native';\r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n// import { Input, Item } from 'native-base';\r\nimport AppModal from '../common/HtmlComponents/AppModal';\r\nimport Note from '../common/HtmlComponents/Note';\r\nimport {TextField} from '@material-ui/core';\r\n\r\n// [tags, description, name, price, id, quantity, bidAmt]\r\nexport default function NewItemModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, apiCall, showToast, singleModalData, minBidNote, tagsNote, convertTagsToStr, convertTagsStrToArrayStr, convertNumToStr, convertStrToNum, convertEmptyStr} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    console.log('single modal data: ', singleModalData);\r\n    // let tagsInit = JSON.stringify([]);\r\n    // if(!userData.isShappers){\r\n    //     tagsInit = singleModalData.data.tags;   \r\n    // }\r\n    let tagsStr = '';\r\n    if(!userData.isShappers){\r\n        tagsStr = convertTagsToStr(singleModalData.data.tags);\r\n    }\r\n    \r\n    // let price = '';\r\n    // let quantity = '';\r\n    \r\n    // if(singleModalData.data.price > 0){\r\n    //     price = (singleModalData.data.price / 100) + '';\r\n    // }\r\n\r\n    // if(singleModalData.data.quantity > 0){\r\n    //     quantity = singleModalData.data.quantity + '';\r\n    // }\r\n\r\n    const [item, setItem] = useState({\r\n        name: singleModalData.data.name,\r\n        price: convertNumToStr(singleModalData.data.price),\r\n        description: singleModalData.data.description,\r\n        tags: tagsStr,\r\n        quantity: convertNumToStr(singleModalData.data.quantity),\r\n        bidAmt: convertNumToStr(singleModalData.data.bidAmt / 1000)\r\n    });\r\n\r\n    const [error, setError] = useState('');\r\n    \r\n    \r\n    // var startPoint = 0\r\n\r\n    async function addNewItem(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        let itemName = convertEmptyStr(item.name);\r\n        let itemDescription = convertEmptyStr(item.description);\r\n        \r\n        if(itemName == '' || itemDescription == ''){\r\n            let msg = '';\r\n            if(itemName == ''){\r\n                msg = 'Name cannot be empty.';\r\n            }else{\r\n                msg = 'Description cannot be empty.';    \r\n            }\r\n            \r\n           \r\n            showToast(msg, 3, true);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n\r\n        let arrayStr = '';\r\n        if(!userData.isShappers){\r\n            arrayStr = convertTagsStrToArrayStr(item.tags);\r\n        }\r\n        \r\n\r\n        let data = {\r\n            name: item.name,\r\n            price: convertStrToNum(item.price),\r\n            description: item.description,\r\n            tags: arrayStr,\r\n            quantity: convertStrToNum(item.quantity)    \r\n        }\r\n        // convertStrToNum(item.bidAmt)\r\n        let path = 'item/newItem';\r\n\r\n        if(singleModalData.data.id != 0){\r\n            // data = {\r\n            //     name: item.name,\r\n            //     price: item.price,\r\n            //     description: item.description,\r\n            //     tags: arrayStr,\r\n            //     itemID: singleModalData.data.id,\r\n            //     quantity: item.quantity,\r\n            // }\r\n\r\n            data.itemID = singleModalData.data.id;\r\n            data.bidAmt = convertStrToNum(item.bidAmt)\r\n            path = 'item/editItem';\r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.apiPath + path, data); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Item submitted successfully.', 3, false);\r\n            // if(path == 'item/editItem'){\r\n            //     showToast('Item edited successfully.', 5);\r\n            // }else{\r\n            //     showToast('Item created successfully.', 5);   \r\n            // }\r\n            closeModal();\r\n        }\r\n        // apiCall(globals.varNames.apiPath + path, data).then((response)=>{\r\n            \r\n        // })\r\n        \r\n        \r\n    } \r\n    let bidAmtInput = null;\r\n    let tagsInput = null;\r\n    let note = null;\r\n    let minNote = null;\r\n    if(!userData.isShappers){\r\n        tagsInput = <TextField value={item.tags} onChange={(e)=>setItem({...item, tags: e.target.value})} id=\"standard-basic\" label=\"Tags\" />\r\n        note = <Note note={tagsNote()} />;\r\n        // tagsInput = <Item>\r\n        //     <Input value={item.tags} onChangeText={(text)=>setItem({...item, tags: text})} placeholder=\"Tags\" />\r\n        // </Item>;\r\n        if(singleModalData.data.id != 0){\r\n            bidAmtInput = <TextField value={item.bidAmt} onChange={(e)=>setItem({...item, bidAmt: e.target.value})} id=\"standard-basic\" label=\"Bid Amount\" />\r\n            minNote = <Note note={minBidNote()} />;\r\n            // bidAmtInput = <Item>\r\n            //     <Input value={item.bidAmt} onChangeText={(text)=>setItem({...item, bidAmt: text})} placeholder=\"Bid Amount\" />\r\n            // </Item>;\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    return (\r\n        <AppModal consumptionShow={true} buttons={['Submit']} onButtonsPressed={addNewItem} closeModal={closeModal}>\r\n            \r\n            <TextField value={item.name} onChange={(e)=>setItem({...item, name: e.target.value})} id=\"standard-basic\" label=\"Name\" />\r\n            <TextField value={item.price} onChange={(e)=>setItem({...item, price: e.target.value})} id=\"standard-basic\" label=\"Price\" />\r\n            <TextField value={item.description} onChange={(e)=>setItem({...item, description: e.target.value})} id=\"standard-basic\" label=\"Description\" />\r\n            <TextField value={item.quantity} onChange={(e)=>setItem({...item, quantity: e.target.value})} id=\"standard-basic\" label=\"Quantity\" />\r\n            {tagsInput}\r\n            {note}\r\n            {bidAmtInput}\r\n            {minNote}\r\n            \r\n            \r\n        </AppModal>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n ","\r\nimport React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {TextField} from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function ReviewModal({closeModal}) {\r\n    console.log('NewMsgModal');\r\n    \r\n    const {userData, globals, showToast, singleModalData, apiCall, getApiPath, convertEmptyStr} = useContext(GlobalContext);\r\n    \r\n    const [reviewInputs, setReviewInputs] = useState({\r\n        comment: '',\r\n        postedOn: 0,\r\n        rate: 1\r\n    });\r\n\r\n    const [rate, setRate] = useState(1);\r\n\r\n    // const [error, setError] = useState('');\r\n\r\n    async function submitReview(){\r\n        console.log('submit review');\r\n        console.log('review inpputs: ', reviewInputs);\r\n        let commentCheck = convertEmptyStr(reviewInputs.comment);\r\n        if(commentCheck == ''){\r\n            let text = '';\r\n            \r\n            text = 'Review cannot be empty.';\r\n            \r\n            showToast(text, 3, true);\r\n            return;\r\n            \r\n        }\r\n        \r\n        let data = {\r\n            comment: reviewInputs.comment,\r\n            postedOn: singleModalData.data,\r\n            rate: rate    \r\n        }\r\n\r\n        let response = await apiCall(getApiPath() + 'user/submitReview', data);\r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Review submitted successfully.', 3, false); \r\n            closeModal();   \r\n        }\r\n    }\r\n\r\n    function onButtonsPressed(button){\r\n        \r\n        if(button == 'Submit'){\r\n            submitReview();\r\n        }\r\n    }\r\n\r\n    function onRate(e, newValue){\r\n        setRate(newValue);\r\n    }\r\n\r\n    // function ratingCompleted(rating){\r\n    //     console.log('rating: ', rating);\r\n    //     console.log('ratings: ', rating);\r\n    //     console.log('reveew inputs: ', reviewInputs);\r\n    //     setReviewInputs({...reviewInputs, rate: rating});\r\n    //     console.log('revew inputs: ', reviewInputs);\r\n    // }\r\n    \r\n    return (\r\n        \r\n        <AppModal buttons={['Submit']} onButtonsPressed={onButtonsPressed} closeModal={closeModal}>\r\n            {/* <Item>\r\n                <Input onChangeText={(text)=>{setReviewInputs({...reviewInputs, comment: text})}} placeholder=\"Review\" />\r\n            </Item>\r\n            \r\n            <Rating\r\n                // showRating\r\n                imageSize={30}\r\n                onFinishRating={(rating)=>{setRate(rating)}}\r\n                style={{ paddingVertical: 10 }}\r\n                ratingCount={5}\r\n                startingValue={1}\r\n            /> */}\r\n            <TextField onChange={(e)=>setReviewInputs({...reviewInputs, comment: e.target.value})} id=\"standard-basic\" label=\"Comment\" />\r\n            <Rating\r\n                className='mt-2'\r\n                name=\"simple-controlled\"\r\n                value={rate}\r\n                onChange={onRate}\r\n            />\r\n            \r\n           \r\n            \r\n        </AppModal>   \r\n    );\r\n}\r\n","import React, {useState, useContext, useEffect} from 'react'; \r\n\r\n\r\n// import { View } from 'react-native';\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n// import { Input, Item, Picker } from 'native-base';\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport UserImg from '../Components/UserImg';\r\n// import { Button } from 'react-native-material-ui';\r\n// import {Button, TextField, IconButton, FormControl, InputLabel, Select, MenuItem} from '@material-ui/core';\r\n// [post, tags, blogID, replyID, bidAmt]\r\nexport default function VerifiedInfoModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, convertEmptyStr, singleModalData, apiCall, showToast, getSiteID, convertTagsToStr, convertTagsStrToArrayStr, convertNumToStr, countries} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    \r\n    const [verifiedData, setVerifiedData] = useState({\r\n        name: '',\r\n        address: '',\r\n        country: '',\r\n        isMale: 1,\r\n        imgURL: ''\r\n    });\r\n    \r\n   \r\n    \r\n    \r\n\r\n    // var startPoint = 0\r\n    console.log('single modal data: ', singleModalData);\r\n    async function getData(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        \r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + \"user/getVerifiedData\", {userID: singleModalData.data}); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            setVerifiedData({\r\n                name: response.payload.name,\r\n                country: countries[response.payload.country],\r\n                address: response.payload.address,\r\n                isMale: response.payload.ismale,\r\n                imgURL: response.payload.imgurl,\r\n            })\r\n            // showToast('Post submitted successfully', 3, false);\r\n            // closeModal();\r\n            \r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    } \r\n    \r\n    let imgPathBegin = globals.varNames.verifiedPhotoPath;\r\n    let photoPassword = userData.sosyalData.photoPassword;\r\n    let gender = 'Male';\r\n    if(!verifiedData.isMale){\r\n        gender = 'Female';\r\n    }\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        getData();\r\n        \r\n    }, []);\r\n    \r\n    return (\r\n        \r\n        \r\n        <AppModal buttons={['Done']} onButtonsPressed={closeModal} closeModal={closeModal}>\r\n            <div className='d-flex flex-column'>\r\n                <div className='' style={{alignSelf: 'center'}}>\r\n                    <UserImg size={120} userID={userData.userID} imgURL={verifiedData.imgURL} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />\r\n                </div>\r\n                \r\n                <span>{verifiedData.name}</span>\r\n                <span>{verifiedData.country}</span>\r\n                <span>{gender}</span>\r\n                {/* <span>{verifiedData.address}</span> */}\r\n            </div>\r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\nimport {TextField} from '@material-ui/core';\r\nimport AppModal from '../HtmlComponents/AppModal';\r\n\r\nexport default function BuyDataModal({closeModal}) {\r\n    console.log('EDIT item modal');\r\n    // console.log('item data: ', itemData);\r\n    const {globals, apiCall, singleModalData, getApiPath, showToast} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n\r\n    const [dataInputs, setDataInputs] = useState({\r\n        amount: 0,\r\n        \r\n    });\r\n    const [error, setError] = useState('');\r\n    // var startPoint = 0\r\n\r\n    async function buyData(){\r\n        console.log('SUBMIT NEW ITEM');\r\n    \r\n        let data = {\r\n            amount: dataInputs.amount,\r\n                \r\n        }\r\n\r\n        \r\n\r\n        // let response = await apiCall(getApiPath() + 'pay/buyData', data); \r\n        apiCall(getApiPath() + 'pay/buyData', data).then((response) => {\r\n            console.log('response: ', response);\r\n            if(response.status == 1){\r\n                showToast('Buy data successful.', 5);\r\n            }\r\n        });\r\n        closeModal();\r\n    }\r\n\r\n   \r\n    \r\n    return (\r\n        <AppModal error={error} onButtonsPressed={buyData} buttons={['Submit']} closeModal={closeModal}>\r\n            <TextField onChange={(e)=>setDataInputs({...dataInputs, amount: e.target.value})} id=\"standard-basic\" label=\"Amount\" />\r\n            {/* <View>\r\n                <Item>\r\n                    <Input onChangeText={(text)=>setDataInputs({...dataInputs, amount: text})} placeholder=\"Amount\" />\r\n                </Item>\r\n                \r\n                 \r\n            </View> */}\r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\n\r\nimport {Button, Avatar} from '@material-ui/core';\r\n// [post, tags, blogID, replyID]\r\nexport default function ImageModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, getUserData, singleModalData, apiCall, showToast, getSiteID} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    const [error, setError] = useState('');\r\n    \r\n    \r\n    console.log('single modal data: ', singleModalData);\r\n    \r\n\r\n   \r\n    \r\n    return (\r\n        <AppModal buttons={['Done']} onButtonsPressed={closeModal} closeModal={closeModal}>\r\n            {/* <View>\r\n                <Image style={{width: 100, height: 100, backgroundColor: 'blue', alignSelf: 'center'}} source={{uri: singleModalData.data}}/>\r\n                \r\n                \r\n                \r\n            </View> */}\r\n            <Avatar variant='square' style={{height: 200, width: 200, alignSelf: 'center'}} className='mx-2' alt=\"Remy Sharp\" src={singleModalData.data} />\r\n            \r\n        </AppModal>\r\n    );\r\n}","import Axios from 'axios';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react'; \r\n\r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport UploadPhoto from '../common/HtmlComponents/UploadPhoto';\r\nimport AppModal from '../common/HtmlComponents/AppModal';\r\n\r\n\r\nexport default function UploadItemPhotoModal({closeModal}) {\r\n    const {userData, globals, appData, randomStr, singleModalData, showToast} = useContext(GlobalContext);\r\n    const [image, setImage] = useState(null);\r\n    \r\n    let url = 'http';\r\n    if(singleModalData.data.imgurl != ''){\r\n        url = globals.varNames.itemsImgPath + singleModalData.data.imgurl + '/' + userData.userID + '/' + userData.photoPassword;\r\n    }\r\n    // const uploadPhoto = async () => {\r\n    //     const formData = new FormData();\r\n        \r\n    //     const uri = image.uri;\r\n    //     const uriParts = uri.split('.');\r\n      \r\n    //     const fileType = uriParts[uriParts.length - 1];\r\n    //     console.log('uri parts: ', uriParts);\r\n\r\n    //     const uriParts2 = uri.split('/');\r\n    //     console.log('uri parts2', uriParts2);\r\n\r\n    //     formData.append('file', {\r\n    //         uri,\r\n    //         name: uriParts2[uriParts2.length - 1],\r\n    //         type: `image/${fileType}`,\r\n    //     });\r\n\r\n    //     // console.log('modal data: ', modalData);\r\n    //     formData.append('itemID', singleModalData.data.id);\r\n    //     console.log('form data: ', formData);\r\n    //     // data.append('file', photo);\r\n    //     let options = {\r\n    //         method: 'post',\r\n    //         url: globals.varNames.apiPath + 'item/uploadItemPhoto',\r\n    //         data: formData,\r\n    //         headers: {\r\n    //             'x-access-token': userData.token,\r\n    //             'version': appData.version,\r\n    //             'sosyal-version': appData.versionSosyal,\r\n    //             'photo-token': randomStr(5),\r\n    //             'photo-id': singleModalData.data.id\r\n    //         }\r\n    //     }\r\n\r\n    //     let response = await Axios(options);\r\n    //     console.log('response: ', response.data);\r\n    //     if(response.status == 1){\r\n    //         showToast(response.message, 5);\r\n    //         closeModal();\r\n    //     }\r\n    //     // console.log(result);\r\n    \r\n        \r\n    // };\r\n\r\n    async function uploadPhoto(){\r\n        let formData = new FormData();\r\n        formData.append('file', image);\r\n        // formData.append('userID', userData.userID);\r\n        formData.append('itemID', singleModalData.data.id);\r\n        let options = {\r\n            method: 'post',\r\n            url: globals.varNames.apiPath + 'item/uploadItemPhoto',\r\n            data: formData,\r\n            headers: {\r\n                'x-access-token': userData.token,\r\n                'version': appData.version,\r\n                'sosyal-version': appData.versionSosyal,\r\n                'photo-token': randomStr(5),\r\n                'photo-id': singleModalData.data.id\r\n            }\r\n        }\r\n\r\n        let response = await Axios(options);\r\n        console.log('response: ', response.data);\r\n        // if(response.data.status == 1){\r\n        //     showToast(response.data.message, 5, false);\r\n        //     closeModal();   \r\n        // }\r\n\r\n        let isError = false;\r\n        if(response.data.status == 1){\r\n            \r\n            closeModal();   \r\n        }else{\r\n            isError = true;\r\n            // showToast(response.data.message, 5, false);   \r\n        }\r\n        showToast(response.data.message, 3, isError);\r\n    }\r\n    \r\n    return (\r\n        \r\n        <AppModal buttons={[]} closeModal={closeModal}>\r\n            <UploadPhoto imgURL={url} setImage={setImage} image={image} uploadPhoto={uploadPhoto} />\r\n            \r\n        </AppModal>\r\n        \r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\n\r\n\r\nimport {TextField, Button, Checkbox, FormControlLabel, Link} from '@material-ui/core';\r\n\r\nexport default function SearchOptionsModal({closeModal}) {\r\n    console.log('Search options modal');\r\n    const {userData, appData, getUserData, forceUpdate, singleModalData, convertNumToStr} = useContext(GlobalContext);\r\n    console.log('single modal:', singleModalData);\r\n    const {searchOptions, setSearchOptions} = singleModalData.data;\r\n    const [options, setOptions] = useState({\r\n        searchType: searchOptions.searchType,\r\n        userSearch: searchOptions.userSearch,\r\n        companyEnabled: searchOptions.companySearchEnabled,\r\n        numOfRaters: convertNumToStr(searchOptions.numOfRaters),\r\n        isVerifiedRatings: searchOptions.isVerifiedRatings,\r\n        company: {\r\n            searchValue: searchOptions.companySearch.searchValue,\r\n            searchType: searchOptions.companySearch.searchType,\r\n            numOfRaters: convertNumToStr(searchOptions.companySearch.numOfRaters),\r\n            isVerifiedRatings: searchOptions.companySearch.isVerifiedRatings,\r\n        },\r\n        // allSite: searchOptions.allSite,\r\n        siteUsername: searchOptions.siteUsername \r\n    })\r\n    \r\n    // let pickerOptions = ['description', 'username', 'tags', 'name'];\r\n    \r\n    // const [error, setError] = useState('');\r\n    let label = 'User Search';\r\n    // let pickerItem = <Picker.Item label=\"Username\" value=\"username\" />;\r\n    // let pickerOptionsFinal = [...pickerOptions];\r\n    // let allSiteBtn = null;\r\n    if(!options.userSearch){\r\n        label = searchOptions.otherLabel + ' Search';\r\n        \r\n\r\n        // if(searchOptions.otherLabel == 'Posts'){\r\n                \r\n        // }\r\n        \r\n    }\r\n\r\n    function onClickDone(){\r\n        setSearchOptions(options);\r\n        closeModal();\r\n    }\r\n\r\n    function onCheckCheckBox(e){\r\n        console.log('e.target: ', e.target.checked);\r\n        setOptions({...options, companyEnabled: e.target.checked})\r\n    }\r\n    \r\n    let ratingsTypeLabel = 'All';\r\n    let ratingsTypeLabelCo = 'All';\r\n    if(options.isVerifiedRatings){\r\n        ratingsTypeLabel = 'Verified Only';    \r\n    }\r\n\r\n    if(options.company.isVerifiedRatings){\r\n        ratingsTypeLabelCo = 'Verified Only';\r\n    }\r\n\r\n    let companyEnabled = true;\r\n    let pickerCo = <div className='d-flex flex-column'>\r\n        <h5>Company</h5>\r\n        \r\n        \r\n        {/* <Item>\r\n            <Input value={options.company.searchValue} onChangeText={(value)=>setOptions({...options, company: {...options.company, searchValue: value}})} placeholder=\"Search Companies...\" />\r\n        </Item>\r\n        <Item>\r\n            <Input value={options.company.numOfRaters} onChangeText={(value)=>setOptions({...options, company: {...options.company, numOfRaters: value}})} placeholder=\"Num of Raters\" />\r\n        </Item> */}\r\n        <TextField value={options.company.searchValue} onChange={(e)=>setOptions({...options, company: {...options.company, searchValue: e.target.value}})} id=\"standard-basic\" placeholder=\"Search Companies\" />\r\n        <TextField value={options.company.numOfRaters} onChange={(e)=>setOptions({...options, company: {...options.company, numOfRaters: e.target.value}})} id=\"standard-basic\" label=\"Num of Raters\" />\r\n        <div className='d-flex my-2'>\r\n            <span className='mr-3'>Ratings Type: </span>\r\n            {/* <Button primary text={ratingsTypeLabelCo} onPress={()=>{setOptions({...options, company: {...options.company, isVerifiedRatings: !options.company.isVerifiedRatings}})}} /> */}\r\n            {/* <Button variant=\"contained\" onClick={()=>{setOptions({...options, company: {...options.company, isVerifiedRatings: !options.company.isVerifiedRatings}})}}>{ratingsTypeLabelCo}</Button> */}\r\n            <Link href=\"#\" onClick={(e)=>{e.preventDefault(); setOptions({...options, company: {...options.company, isVerifiedRatings: !options.company.isVerifiedRatings}})}}>{ratingsTypeLabelCo}</Link>\r\n        </div>\r\n        \r\n        \r\n    </div>;\r\n\r\n    if(!options.companyEnabled){\r\n        companyEnabled = false;\r\n        pickerCo = null;\r\n    }\r\n\r\n    let userSearchBtn = null;\r\n    if(!searchOptions.userSearchOnly){\r\n        \r\n        // userSearchBtn = <Button raised primary text={label} onPress={()=>{setOptions({...options, userSearch: !options.userSearch})}} />\r\n        // userSearchBtn = <Button variant=\"contained\" onClick={()=>{setOptions({...options, userSearch: !options.userSearch})}}>{label}</Button>;\r\n        userSearchBtn = <Link href=\"#\" onClick={(e)=>{e.preventDefault(); setOptions({...options, userSearch: !options.userSearch})}}>{label}</Link>\r\n    }\r\n\r\n    let siteUsernameInput = null;\r\n    if(!searchOptions.isSearch){\r\n        siteUsernameInput = <TextField value={options.siteUsername} onChange={(e)=>setOptions({...options, siteUsername: e.target.value})} id=\"standard-basic\" label=\"Site Username\" />\r\n        // siteUsernameInput = <Item>\r\n        //     <Input value={options.siteUsername} onChangeText={(value)=>setOptions({...options, siteUsername: value})} placeholder=\"Site Username\" />\r\n        // </Item>;\r\n    }\r\n\r\n    return (\r\n        \r\n        // <AppModal buttons={['Done']} onButtonsPressed={onClickDone} closeModal={closeModal}>\r\n            \r\n        //     <View style={{flex: 1}}>\r\n        //         <ScrollView>\r\n                    \r\n        //             <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n        //                 {userSearchBtn}\r\n        //             </View>\r\n                    \r\n        //             {siteUsernameInput}\r\n                    \r\n                    \r\n                    \r\n        //             <Item>\r\n        //                 <Input value={options.numOfRaters} onChangeText={(value)=>setOptions({...options, numOfRaters: value})} placeholder=\"Num of Raters\" />\r\n        //             </Item> \r\n                     \r\n                   \r\n        //             <View style={{flexDirection: 'row', marginVertical: 5}}>\r\n        //                 <Text style={{paddingTop: 5}}>Ratings Type: </Text>\r\n        //                 <Button primary text={ratingsTypeLabel} onPress={()=>{setOptions({...options, isVerifiedRatings: !options.isVerifiedRatings})}} />\r\n        //             </View>\r\n                    \r\n        //             <Checkbox onCheck={()=>setOptions({...options, companyEnabled: !options.companyEnabled})} label=\"Include Company\" value=\"agree\" checked={companyEnabled} />\r\n                    \r\n        //             {pickerCo}\r\n                    \r\n        //         </ScrollView>    \r\n                \r\n        //     </View>\r\n        // </AppModal>\r\n        <AppModal buttons={['Done']} onButtonsPressed={onClickDone} closeModal={closeModal}>\r\n            \r\n           \r\n            <div className='d-flex' style={{justifyContent: 'flex-end'}}>\r\n                {userSearchBtn}\r\n                \r\n            </div>\r\n            {siteUsernameInput}\r\n            <TextField value={options.numOfRaters} onChange={(e)=>setOptions({...options, numOfRaters: e.target.value})} id=\"standard-basic\" label=\"Num of Raters\" />\r\n            <div className='d-flex my-2' style={{}}>\r\n                <span className='mr-3'>Ratings Type:</span>\r\n                {/* <Button variant=\"contained\" onClick={()=>{setOptions({...options, isVerifiedRatings: !options.isVerifiedRatings})}}>{ratingsTypeLabel}</Button> */}\r\n                <Link href=\"#\" onClick={(e)=>{e.preventDefault(); setOptions({...options, isVerifiedRatings: !options.isVerifiedRatings})}}>{ratingsTypeLabel}</Link>\r\n            </div>\r\n            \r\n            <FormControlLabel \r\n                control={<Checkbox\r\n                    checked={companyEnabled}\r\n                    onChange={onCheckCheckBox}\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />} \r\n                label=\"Include company\" />\r\n            {pickerCo}\r\n            \r\n        </AppModal>   \r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n// import { View } from 'react-native';\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n// import { Input, Item, Picker } from 'native-base';\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport Note from '../HtmlComponents/Note';\r\n// import { Button } from 'react-native-material-ui';\r\nimport {Button, TextField, IconButton, FormControl, InputLabel, Select, MenuItem} from '@material-ui/core';\r\n// [post, tags, blogID, replyID, bidAmt]\r\nexport default function NewPostModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, convertEmptyStr, minBidNote, consumptionNote, singleModalData, apiCall, tagsNote, showToast, getSiteID, convertTagsToStr, convertTagsStrToArrayStr, convertNumToStr, convertStrToNum} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    const [error, setError] = useState('');\r\n    const [insertType, setInsertType] = useState('none');\r\n    const [insertValue, setInsertValue] = useState('');\r\n\r\n    // let tagsArr = JSON.parse(singleModalData.data.tags);\r\n    // let tagsStr = '';\r\n    // tagsArr.forEach((tag, ndx) => {\r\n    //     tagsStr = tagsStr + tag + ' ';\r\n    // })\r\n\r\n    let tagsStr = convertTagsToStr(singleModalData.data.tags);\r\n    console.log('tags str: ', tagsStr);\r\n    \r\n    const [postInputs, setPostInputs] = useState({\r\n        post: singleModalData.data.post,\r\n        tags: tagsStr,\r\n        bidAmt: convertNumToStr(singleModalData.data.bidAmt / 1000)\r\n    });\r\n    \r\n    \r\n\r\n    // var startPoint = 0\r\n    console.log('single modal data: ', singleModalData);\r\n    async function newPost(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        let postCheck = convertEmptyStr(postInputs.post);\r\n        if(postCheck == ''){\r\n            \r\n            let msg = 'Post cannot be empty.';\r\n            \r\n            showToast(msg, 3, true);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n\r\n        // let tagsArray = postInputs.tags.split(\" \");\r\n        // let tagsStr = JSON.stringify(tagsArray);\r\n        let arrayStr = convertTagsStrToArrayStr(postInputs.tags);\r\n\r\n        let data = {\r\n            post: postInputs.post,\r\n            tags: arrayStr,\r\n            replyID: singleModalData.data.replyID,\r\n            siteID: getSiteID() \r\n        }\r\n\r\n        let path = \"blog/createBlog\";\r\n        if(singleModalData.data.blogID != 0){\r\n            // data = {\r\n            //     post: postInputs.post,\r\n            //     tags: arrayStr,\r\n            //     blogID: singleModalData.data.blogID,\r\n            //     // siteID: getSiteID()    \r\n            // }\r\n            data.blogID = singleModalData.data.blogID;\r\n            data.bidAmt = convertStrToNum(postInputs.bidAmt);\r\n            data.siteID = singleModalData.data.siteID;\r\n            path = \"blog/editBlog\";\r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + path, data); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast('Post submitted successfully', 3, false);\r\n            closeModal();\r\n            \r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    } \r\n\r\n    function onChangeInsertPicker(e){\r\n        console.log('SUBMIT NEW ITEM');\r\n        // if(value == 'link'){\r\n\r\n        // }\r\n        setInsertType(e.target.value);\r\n    } \r\n\r\n    function onClickInsert(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        \r\n        if(insertType == 'link'){\r\n            let newPost = postInputs.post + '[link]' + insertValue + '[/link]';\r\n            setPostInputs({...postInputs, post: newPost});\r\n        }\r\n        \r\n    } \r\n\r\n    let insertInput = null;\r\n    let insertBtn = null;\r\n    if(insertType != 'none'){\r\n        if(insertType == 'link'){\r\n            // insertInput = <Item>\r\n            //     <Input onChangeText={(text)=>setInsertValue(text)} placeholder={insertType.charAt(0).toUpperCase() + insertType.substring(1)} />\r\n            // </Item>;    \r\n            \r\n            insertInput = <TextField onChange={(e)=>setInsertValue(e.target.value)} id=\"standard-basic\" placeholder={insertType.charAt(0).toUpperCase() + insertType.substring(1)} />\r\n        }\r\n\r\n        // insertBtn = <Button primary text='Insert' onPress={onClickInsert} raised />\r\n        insertBtn = <Button variant=\"contained\" onClick={onClickInsert}>Insert</Button>;\r\n    }\r\n    \r\n    let btnLabel = 'Submit';\r\n    let pickerOptionsFinal = ['none', 'link'];\r\n    \r\n    let bidAmtInput = null;\r\n    let minNote = null;\r\n    if(singleModalData.data.blogID != 0){\r\n        // bidAmtInput = <Item>\r\n        //     <Input value={postInputs.bidAmt} onChangeText={(text)=>setPostInputs({...postInputs, bidAmt: text})} placeholder=\"Bid Amount\" />\r\n        // </Item>;\r\n        btnLabel = 'Edit';\r\n        bidAmtInput = <TextField value={postInputs.bidAmt} onChange={(e)=>setPostInputs({...postInputs, bidAmt: e.target.value})} id=\"standard-basic\" label=\"Bid Amount\" />\r\n        minNote = <Note note={minBidNote()} />;\r\n    }\r\n\r\n    return (\r\n        // <AppModal error={error} buttons={['Submit']} onButtonsPressed={newPost} closeModal={closeModal}>\r\n        //     <View>\r\n        //         <Item>\r\n        //             <Input value={postInputs.post} onChangeText={(text)=>setPostInputs({...postInputs, post: text})} placeholder=\"Post\" />\r\n        //         </Item>\r\n        //         <Item>\r\n        //             <Input value={postInputs.tags} onChangeText={(text)=>setPostInputs({...postInputs, tags: text})} placeholder=\"Tags\" />\r\n        //         </Item>\r\n        //         {bidAmtInput}\r\n        //         <Picker\r\n        //             note\r\n        //             mode=\"dropdown\"\r\n        //             // style={{ width: 120 }}\r\n        //             selectedValue={insertType}\r\n        //             onValueChange={onChangeInsertPicker}\r\n        //         >\r\n                    \r\n        //             {pickerOptionsFinal.map((option, id) => {\r\n        //                 return (\r\n        //                     <Picker.Item key={id} label={option.charAt(0).toUpperCase() + option.substring(1)} value={option} />\r\n        //                 )\r\n                        \r\n        //             })}\r\n                    \r\n        //         </Picker>\r\n        //         {insertInput}\r\n        //         {insertBtn}\r\n        //     </View>\r\n            \r\n            \r\n        // </AppModal>\r\n        \r\n        <AppModal consumptionShow={true} error={error} buttons={[btnLabel]} onButtonsPressed={newPost} closeModal={closeModal}>\r\n            \r\n            <TextField value={postInputs.post} onChange={(e)=>setPostInputs({...postInputs, post: e.target.value})} id=\"standard-basic\" label='Post' />\r\n            <TextField value={postInputs.tags} onChange={(e)=>setPostInputs({...postInputs, tags: e.target.value})} id=\"standard-basic\" label='Tags' />\r\n            <Note note={tagsNote()} />\r\n            {bidAmtInput}\r\n            {minNote}\r\n            <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">Insert</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={insertType}\r\n                    onChange={onChangeInsertPicker}\r\n                >\r\n                    {pickerOptionsFinal.map((option, id) => {\r\n                        return (\r\n                            // <Picker.Item key={id} label={option.charAt(0).toUpperCase() + option.substring(1)} value={option} />\r\n                            <MenuItem key={id} value={option}>{option.charAt(0).toUpperCase() + option.substring(1)}</MenuItem>\r\n                        )\r\n                        \r\n                    })}\r\n                \r\n                {/* <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n            </FormControl>\r\n            {insertInput}\r\n            {insertBtn}\r\n            {/* <Note note={consumptionNote()} /> */}\r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport {Button, Link} from '@material-ui/core';\r\n\r\n\r\nexport default function SearchOptionsModal({closeModal}) {\r\n\r\n    const mystyle = {\r\n        divStyle: {\r\n            \r\n            color: \"white\",\r\n            backgroundColor: \"DodgerBlue\",\r\n            padding: \"10px\",\r\n            fontFamily: \"Arial\"\r\n        },\r\n        \r\n    };\r\n\r\n    console.log('Search options modal');\r\n    const {userData, globals, getUserData, appData, singleModalData} = useContext(GlobalContext);\r\n    console.log('single modal:', singleModalData);\r\n    const {searchOptions, setSearchOptions, isRepliesOption} = singleModalData.data;\r\n\r\n    let isTagsTab = 0;\r\n    let isReplies = 0;\r\n    let allSite = false;\r\n    \r\n    if(!isRepliesOption){\r\n        isTagsTab = searchOptions.isTagsTab;\r\n        isReplies = searchOptions.isReplies;\r\n        allSite = searchOptions.allSite;\r\n    }\r\n\r\n    \r\n    const [options, setOptions] = useState({\r\n        isAsc: searchOptions.isAsc,\r\n        isReplies: isReplies,\r\n        sortType: searchOptions.sortType,\r\n        isTagsTab: isTagsTab,\r\n        allSite: allSite  \r\n    })\r\n    \r\n    \r\n    \r\n\r\n    function onClickDone(){\r\n        console.log('on click done options', options);\r\n        setSearchOptions(options);\r\n        // getPosts();\r\n        closeModal();\r\n    }\r\n\r\n    function changeSortType(e){\r\n        e.preventDefault();\r\n        let type = 'Last Replied';\r\n        if(options.sortType == 'Last Replied'){\r\n            type = 'Last Update';\r\n        }\r\n\r\n        setOptions({...options, sortType: type})\r\n    }\r\n    \r\n    let orderLabel = 'Descending';\r\n    if(options.isAsc){\r\n        orderLabel = 'Ascending';\r\n    }\r\n\r\n    let isRepliesLabel = 'Post';\r\n    if(options.isReplies){\r\n        isRepliesLabel = 'Replies';   \r\n    }\r\n\r\n    let tagLabel = 'User';\r\n    if(options.isTagsTab){\r\n        tagLabel = 'Tags';   \r\n    }\r\n\r\n    let allSiteLabel = appData.name;\r\n    if(userData.isSosyal){\r\n        allSiteLabel = appData.sosyalName;\r\n    }\r\n    \r\n    if(options.allSite){\r\n        allSiteLabel = 'All';\r\n    }\r\n\r\n    let siteBtn = null;\r\n    let otherBtns = null;\r\n    if(!isRepliesOption){\r\n        // btnIsReplies = <Button  raised primary text={isRepliesLabel} onPress={()=>{setOptions({...options, isReplies: !options.isReplies})}} />;\r\n        // btnIsTagsTab = <Button style={{container: {marginRight: 5}}} raised primary text={tagLabel} onPress={()=>{setOptions({...options, isTagsTab: !options.isTagsTab})}} />;\r\n        // siteBtn = <Button style={{container: {marginRight: 5}}} raised primary text={allSiteLabel} onPress={()=>{setOptions({...options, allSite: !options.allSite})}} />;\r\n        // siteBtn = <Button variant=\"contained\" onClick={()=>setOptions({...options, allSite: !options.allSite})}>{allSiteLabel}</Button>;\r\n        siteBtn = <Link style={{alignSelf: 'flex-end', fontWeight: 500, fontSize: 18}} href=\"#\" onClick={(e)=>{e.preventDefault(); setOptions({...options, allSite: !options.allSite})}}>\r\n                    {allSiteLabel}\r\n                </Link>\r\n        // otherBtns = <View style={{flexDirection: 'row', marginBottom: 5}}>\r\n        //     <Text style={{fontWeight: 'bold', marginRight: 5}}>Post Type    :</Text>\r\n        //     <Button style={{container: {marginRight: 5}}} raised primary text={tagLabel} onPress={()=>{setOptions({...options, isTagsTab: !options.isTagsTab})}} />\r\n        //     <Button  raised primary text={isRepliesLabel} onPress={()=>{setOptions({...options, isReplies: !options.isReplies})}} />\r\n        // </View> \r\n        otherBtns = <div style={{justifyContent: 'space-between'}} className='d-flex flex-row mt-2'>\r\n\r\n            <span style={styles.span}>Post Type: </span>\r\n            {/* <Button variant=\"contained\" onClick={()=>setOptions({...options, isTagsTab: !options.isTagsTab})}>{tagLabel}</Button> */}\r\n            <div className='d-flex flex-row'>\r\n                <Link style={styles.link} className='border-right px-3' href=\"#\" onClick={(e)=>{e.preventDefault(); setOptions({...options, isTagsTab: !options.isTagsTab})}}>\r\n                    {tagLabel}\r\n                </Link>\r\n                {/* <Button variant=\"contained\" onClick={()=>setOptions({...options, isReplies: !options.isReplies})}>{isRepliesLabel}</Button> */}\r\n                <Link style={styles.link} href=\"#\" className='pl-3' onClick={(e)=>{e.preventDefault(); setOptions({...options, isReplies: !options.isReplies})}}>\r\n                    {isRepliesLabel}\r\n                </Link>\r\n            </div>\r\n            \r\n        </div>;\r\n    }\r\n\r\n    return (\r\n        \r\n        <AppModal buttons={['Done']} onButtonsPressed={onClickDone} closeModal={closeModal}>\r\n            \r\n            {/* <View style={{flex: 1, paddingVertical: 30}}>\r\n                <ScrollView>\r\n                    \r\n                    \r\n                    {siteBtn}\r\n                    \r\n                    <View style={{flexDirection: 'row', marginBottom: 5}}>\r\n                        <Text style={{fontWeight: 'bold', marginRight: 5}}>Sort Order   :</Text>\r\n                        <Button raised primary text={orderLabel} onPress={()=>{setOptions({...options, isAsc: !options.isAsc})}} />\r\n                    </View>\r\n                   \r\n                    {otherBtns}\r\n                    <View style={{flexDirection: 'row'}}>\r\n                        <Text style={{fontWeight: 'bold', marginRight: 5}}>Order By      :</Text>\r\n                        <Button raised primary text={options.sortType} onPress={changeSortType} />\r\n                    </View>\r\n                   \r\n                    \r\n                    \r\n                </ScrollView>    \r\n                \r\n            </View> */}\r\n            <div className='d-flex flex-column'>\r\n                {siteBtn}\r\n                <div style={{justifyContent: 'space-between'}} className='d-flex mt-3'>\r\n                    <span style={styles.span}>Sort Order: </span>\r\n                    {/* <Button variant=\"contained\" onClick={()=>setOptions({...options, isAsc: !options.isAsc})}>{orderLabel}</Button> */}\r\n                    <Link style={styles.link} href=\"#\" onClick={(e)=>{e.preventDefault(); setOptions({...options, isAsc: !options.isAsc})}}>\r\n                        {orderLabel}\r\n                    </Link>\r\n                </div>  \r\n                {/* <View style={{flexDirection: 'row', marginBottom: 5}}>\r\n                    <Text style={{fontWeight: 'bold', marginRight: 5}}>Sort Order   :</Text>\r\n                    <Button raised primary text={orderLabel} onPress={()=>{setOptions({...options, isAsc: !options.isAsc})}} />\r\n                </View> */}\r\n                \r\n                {otherBtns}\r\n                <div style={{justifyContent: 'space-between'}} className='d-flex flex-row mt-2'>\r\n                    <span style={styles.span}>Order By: </span>\r\n                    {/* <Button variant=\"contained\" onClick={changeSortType}>{options.sortType}</Button> */}\r\n                    <Link style={styles.link} href=\"#\" onClick={changeSortType}>\r\n                        {options.sortType}\r\n                    </Link>\r\n                </div>\r\n                {/* <View style={{flexDirection: 'row'}}>\r\n                    <Text style={{fontWeight: 'bold', marginRight: 5}}>Order By      :</Text>\r\n                    <Button raised primary text={options.sortType} onPress={changeSortType} />\r\n                </View>   */}\r\n                \r\n            </div>\r\n        </AppModal>   \r\n    );\r\n}\r\n\r\nconst styles = {\r\n    link: {\r\n        fontWeight: 500\r\n    },\r\n    span: {\r\n        fontWeight: 500  \r\n    }\r\n}","import Axios from 'axios';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react'; \r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport UploadPhoto from '../HtmlComponents/UploadPhoto';\r\nimport AppModal from '../HtmlComponents/AppModal';\r\n\r\n\r\nexport default function UploadVerifiedPhotoModal({closeModal}) {\r\n    const {userData, globals, appData, randomStr, singleModalData, showToast} = useContext(GlobalContext);\r\n    const [image, setImage] = useState(null);\r\n\r\n    let url = 'http';\r\n    if(userData.verifiedData.imgURL != ''){\r\n        url = globals.varNames.verifiedPhotoPath + userData.verifiedData.imgURL + '/' + userData.userID + '/' + userData.sosyalData.photoPassword;\r\n        // url = profileData.profileImgUrl;\r\n    }\r\n    // const uploadPhoto = async () => {\r\n    //     const formData = new FormData();\r\n        \r\n    //     const uri = image.uri;\r\n    //     const uriParts = uri.split('.');\r\n      \r\n    //     const fileType = uriParts[uriParts.length - 1];\r\n    //     console.log('uri parts: ', uriParts);\r\n    //     const uriParts2 = uri.split('/');\r\n    //     console.log('uri parts2', uriParts2);\r\n    //     formData.append('file', {\r\n    //         uri,\r\n    //         name: uriParts2[uriParts2.length - 1],\r\n    //         type: `image/${fileType}`,\r\n    //     });\r\n    //     // console.log('modal data: ', modalData);\r\n    //     formData.append('userID', userData.userID);\r\n    //     console.log('form data: ', formData);\r\n    //     // data.append('file', photo);\r\n    //     let options = {\r\n    //         method: 'post',\r\n    //         url: globals.varNames.blagsApiPath + 'user/uploadVerifiedPhoto',\r\n    //         data: formData,\r\n    //         headers: {\r\n    //             'x-access-token': userData.token,\r\n    //             'version': appData.version,\r\n    //             'sosyal-version': appData.versionSosyal,\r\n    //             'photo-token': randomStr(5),\r\n                \r\n    //         }\r\n    //     }\r\n\r\n    //     let response = await Axios(options);\r\n    //     console.log('response: ', response.data);\r\n    //     if(response.status == 1){\r\n    //         showToast(response.message, 5);\r\n    //         closeModal();\r\n    //     }\r\n    //     // console.log(result);\r\n    \r\n        \r\n    // };\r\n\r\n    async function uploadPhoto(){\r\n        let formData = new FormData();\r\n        formData.append('file', image);\r\n        // formData.append('userID', userData.userID);\r\n        formData.append('userID', userData.userID);\r\n        let options = {\r\n            method: 'post',\r\n            url: globals.varNames.blagsApiPath + 'user/uploadVerifiedPhoto',\r\n            data: formData,\r\n            headers: {\r\n                'x-access-token': userData.token,\r\n                'version': appData.version,\r\n                'sosyal-version': appData.versionSosyal,\r\n                'photo-token': randomStr(5),\r\n                \r\n            }\r\n        }\r\n\r\n        let response = await Axios(options);\r\n        console.log('response: ', response.data);\r\n        let isError = false;\r\n        if(response.data.status == 1){\r\n            \r\n            closeModal();   \r\n        }else{\r\n            isError = true;\r\n            // showToast(response.data.message, 5, false);   \r\n        }\r\n        showToast(response.data.message, 3, isError);\r\n        // showToast('hey', 3, isError);\r\n    }\r\n    \r\n    return (\r\n        \r\n        <AppModal buttons={[]} closeModal={closeModal}>\r\n            <UploadPhoto imgURL={url} setImage={setImage} image={image} uploadPhoto={uploadPhoto} />\r\n            \r\n        </AppModal>\r\n        \r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\n// [tags, description, name, price, id]\r\nexport default function NewTagModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n\r\n    const {userData, globals, apiCall, getApiPath, singleModalData, showToast} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    console.log('single modal data: ', singleModalData);\r\n\r\n    const [tag, setTag] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    \r\n    // var startPoint = 0\r\n\r\n    async function addNewTag(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        // if(item.name == ''){\r\n            \r\n        //     let msg = 'Name cannot be blank.';\r\n           \r\n        //     showToast(msg, 3000);\r\n        //     // Toast.show(toastObj);\r\n        //     return;\r\n        // }\r\n\r\n        let data = {\r\n            tag: tag,\r\n              \r\n        }\r\n        // apiCall(getApiPath() + 'user/createSearchTag', data); \r\n        // apiCall(getApiPath() + 'user/createSearchTag', data); \r\n        let response = await apiCall(getApiPath() + 'user/createSearchTag', data); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 5);\r\n            closeModal();\r\n        }\r\n\r\n        \r\n    } \r\n\r\n    return (\r\n        <AppModal consumptionShow={true} buttons={['Submit']} onButtonsPressed={addNewTag} closeModal={closeModal}>\r\n            <TextField onChange={(e)=>setTag(e.target.value)} id=\"standard-basic\" label=\"Tag\" />\r\n            {/* <View>\r\n                <Item>\r\n                    <Input onChangeText={(text)=>setTag(text)} placeholder=\"Tag\" />\r\n                </Item>\r\n                \r\n                \r\n            </View> */}\r\n            \r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport Note from '../HtmlComponents/Note';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\n// [tags, description, name, id, siteUsername, bidAmt]\r\nexport default function NewSerchItemModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n\r\n    const {userData, globals, apiCall, minBidNote, consumptionNote, convertTagsStrToArrayStr, tagsNote, convertTagsToStr, singleModalData, showToast, convertNumToStr, convertStrToNum, convertEmptyStr} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    console.log('single modal data: ', singleModalData);\r\n\r\n    let tagsStr = convertTagsToStr(singleModalData.data.tags);\r\n\r\n    let siteUsername = '';\r\n    if(singleModalData.data.siteUsername != null){\r\n        siteUsername = singleModalData.data.siteUsername;\r\n    }\r\n\r\n    const [item, setItem] = useState({\r\n        name: singleModalData.data.name,\r\n        description: singleModalData.data.description,\r\n        link: singleModalData.data.link,\r\n        tags: tagsStr,\r\n        itemID: singleModalData.data.id,\r\n        siteUsername: siteUsername,\r\n        bidAmt: convertNumToStr(singleModalData.data.bidAmt / 1000)\r\n    });\r\n\r\n    async function addNewItem(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        let itemName = convertEmptyStr(item.name);\r\n        let itemDescription = convertEmptyStr(item.description);\r\n        let itemLink = convertEmptyStr(item.link);\r\n        \r\n        if(itemName == '' || itemDescription == '' || itemLink == ''){\r\n            \r\n            let msg = 'Name cannot be empty.';\r\n            if(itemDescription == ''){\r\n                msg = 'Description cannot be empty.';\r\n            }else if(itemLink == ''){\r\n                msg = 'Link cannot be empty.';\r\n            }\r\n            \r\n            showToast(msg, 3, true);\r\n            // Toast.show(toastObj);\r\n            return;\r\n        }\r\n\r\n        let arrayStr = convertTagsStrToArrayStr(item.tags);\r\n\r\n        let data = {\r\n            tags: arrayStr,\r\n            description: item.description, \r\n            link: item.link,\r\n            name: item.name,\r\n            siteUsername: item.siteUsername\r\n        }\r\n\r\n        let path = 'serch/newItem';\r\n        if(singleModalData.data.id != 0){\r\n            path = 'serch/editItem';\r\n            data.itemID = item.itemID;\r\n            data.bidAmt = convertStrToNum(item.bidAmt);\r\n        }\r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + path, data); \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            showToast(response.message, 3, false);\r\n            closeModal();\r\n        }\r\n        \r\n        \r\n    } \r\n\r\n    let bidAmtInput = null;\r\n    let minNote = null;\r\n    if(singleModalData.data.id != 0){\r\n        // bidAmtInput = <Item>\r\n        //     <Input value={item.bidAmt} onChangeText={(text)=>setItem({...item, bidAmt: text})} placeholder=\"Bid Amount\" />\r\n        // </Item>;\r\n        bidAmtInput = <TextField value={item.bidAmt} onChange={(e)=>setItem({...item, bidAmt: e.target.value})} id=\"standard-basic\" label=\"Bid Amount\" />\r\n        minNote = <Note note={minBidNote()} />;\r\n    }\r\n\r\n    return (\r\n        <AppModal consumptionShow={true} buttons={['Submit']} onButtonsPressed={addNewItem} closeModal={closeModal}>\r\n            <TextField value={item.name} onChange={(e)=>setItem({...item, name: e.target.value})} id=\"standard-basic\" label=\"Name\" />\r\n            <TextField value={item.description} onChange={(e)=>setItem({...item, description: e.target.value})} id=\"standard-basic\" label=\"Description\" />\r\n            <TextField value={item.link} onChange={(e)=>setItem({...item, link: e.target.value})} id=\"standard-basic\" label=\"Link\" />\r\n            <TextField value={item.tags} onChange={(e)=>setItem({...item, tags: e.target.value})} id=\"standard-basic\" label=\"Tags\" />\r\n            <Note note={tagsNote()} />\r\n            <TextField value={item.siteUsername} onChange={(e)=>setItem({...item, siteUsername: e.target.value})} id=\"standard-basic\" label=\"Site Username\" />\r\n            {bidAmtInput}\r\n            {minNote}\r\n            {/* <Note note={consumptionNote()} /> */}\r\n            {/* <View>\r\n                <Item>\r\n                    <Input value={item.name} onChangeText={(text)=>setItem({...item, name: text})} placeholder=\"Name\" />\r\n                </Item>\r\n                \r\n                <Item>\r\n                    <Input value={item.description} onChangeText={(text)=>setItem({...item, description: text})} placeholder=\"Description\" />\r\n                </Item>\r\n                <Item>\r\n                    <Input value={item.link} onChangeText={(text)=>setItem({...item, link: text})} placeholder=\"Link\" />\r\n                </Item>\r\n                <Item>\r\n                    <Input value={item.tags} onChangeText={(text)=>setItem({...item, tags: text})} placeholder=\"Tags\" />\r\n                </Item>\r\n                <Item>\r\n                    <Input value={item.siteUsername} onChangeText={(text)=>setItem({...item, siteUsername: text})} placeholder=\"Site Username\" />\r\n                </Item>\r\n                {bidAmtInput}\r\n            </View> */}\r\n            \r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\n\r\n\r\n\r\nexport default function InfoModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, getUserData, singleModalData, apiCall, showToast, changePage} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    \r\n\r\n    console.log('single modal data: ', singleModalData);\r\n    let div = null;\r\n    if(singleModalData.data.div == 'Data'){\r\n\r\n        div = <div>\r\n            {/* <Text>Not enough data. </Text><Text>Click here</Text><Text>to buy data.</Text>  */}\r\n            <p style={{fontSize: 14}}>Not enough data. <Link noIndent onClick={(e) => {e.preventDefault(); changePage('Data'); closeModal()}}>Click here</Link>    to buy data.</p>\r\n        </div>;\r\n        \r\n    }else if(singleModalData.data.div == 'Balance'){\r\n\r\n        div = <div>\r\n            <p style={{fontSize: 14}}>Not enough balance. <Link noIndent onClick={(e) => {e.preventDefault(); changePage('Wallet'); closeModal()}}>Click here</Link>    to load account.</p>\r\n            {/* <Text>Not enough balance. <Text onPress={()=>{changePage('Wallet'); closeModal()}} style={{color: 'blue'}}>Click here</Text> to load account.</Text> */}\r\n        </div>;\r\n\r\n    }\r\n\r\n    function onButtonsPressed(){\r\n\r\n    }\r\n    \r\n    return (\r\n        <AppModal buttons={['Submit']} onButtonsPressed={onButtonsPressed} closeModal={closeModal}>\r\n            {div} \r\n            \r\n               \r\n            \r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../../Context/GlobalProvider';\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\nimport Note from '../HtmlComponents/Note';\r\nimport {TextField} from '@material-ui/core';\r\n\r\n// [bidAmt, id, itemName, bidBal]\r\nexport default function BidModal({closeModal}) {\r\n    console.log('EDIT item modal');\r\n    // console.log('item data: ', itemData);\r\n    const {globals, apiCall, singleModalData, consumptionNote, getApiPath, showToast, convertNumToStr, convertStrToNum} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n\r\n    // let bidAmt = '';\r\n    // if(singleModalData.data.bidAmt != 0){\r\n    //     bidAmt = (singleModalData.data.bidAmt / 1000) + '';\r\n    // }\r\n\r\n    const [bidInputs, setBidInputs] = useState({\r\n        amtPaid: 0,\r\n        // bidAmt: convertNumToStr(singleModalData.data.bidAmt / 1000),\r\n    });\r\n    // const [error, setError] = useState('');\r\n    // var startPoint = 0\r\n\r\n    async function buyData(){\r\n        console.log('SUBMIT NEW ITEM');\r\n        \r\n        let data = {\r\n            amtPaid: bidInputs.amtPaid,\r\n            // bidAmt: convertStrToNum(bidInputs.bidAmt),\r\n        }\r\n         \r\n        let path = '';\r\n        if(singleModalData.data.itemName == 'Serch Item'){\r\n            path = globals.varNames.blagsApiPath + 'serch/bidItem';\r\n            data.itemID = singleModalData.data.id;\r\n        }else if(singleModalData.data.itemName == 'Post'){\r\n            path = globals.varNames.blagsApiPath + 'blog/bidPost';\r\n            data.blogID = singleModalData.data.id;\r\n        }else if(singleModalData.data.itemName == 'User'){\r\n            path = globals.varNames.apiPath + 'user/bidUser';\r\n            // data.blogID = singleModalData.data.id;       \r\n        }else if(singleModalData.data.itemName == 'User Sosyal'){\r\n            path = globals.varNames.blagsApiPath + 'user/bidUser';\r\n        }else if(singleModalData.data.itemName == 'Item'){\r\n            path = globals.varNames.apiPath + 'item/bidItem';\r\n            data.itemID = singleModalData.data.id;      \r\n        }   \r\n\r\n        // let response = await apiCall(getApiPath() + 'pay/buyData', data); \r\n        apiCall(path, data).then((response) => {\r\n            console.log('response: ', response);\r\n            if(response.status == 1){\r\n                showToast(response.message, 3, false);\r\n            }\r\n        });\r\n        closeModal();\r\n    }\r\n\r\n   \r\n    \r\n    return (\r\n        <AppModal consumptionShow={true} onButtonsPressed={buyData} buttons={['Submit']} closeModal={closeModal}>\r\n            <span>Bid Bal: {singleModalData.data.bidBal / 1000}</span>\r\n            <TextField onChange={(e)=>setBidInputs({...bidInputs, amtPaid: e.target.value})} id=\"standard-basic\" label=\"Amount to pay\" />\r\n            {/* <Note note={consumptionNote()} /> */}\r\n            {/* <View>\r\n                \r\n                <Item>\r\n                    <Input onChangeText={(text)=>setBidInputs({...bidInputs, amtPaid: text})} placeholder=\"Amount to pay\" />\r\n                </Item>\r\n                \r\n                 \r\n            </View> */}\r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef} from 'react'; \r\n\r\n\r\n\r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\n\r\nimport AppModal from '../HtmlComponents/AppModal';\r\n\r\nimport DetailsDiv from '../Components/DetailsDiv';\r\n\r\nexport default function DetailsModal({closeModal}) {\r\n    console.log('NewItemModal');\r\n    const {userData, globals, getUserData, singleModalData, apiCall, showToast, getSiteID} = useContext(GlobalContext);\r\n    console.log(globals.numOfItems)\r\n    const [error, setError] = useState('');\r\n    const [isUser, setIsUser] = useState(true);\r\n    const [tab, setTab] = useState(true);\r\n    \r\n    const {div} = singleModalData.data;\r\n    // console.log('info: ', info);\r\n    \r\n    console.log('single modal data: ', singleModalData);\r\n    \r\n\r\n    function onButtonsPressed(){\r\n\r\n    }\r\n\r\n    // function onChangeTab(tab){\r\n    //     let isUser = true;\r\n    //     if(tab == 'Company')\r\n    // }\r\n    \r\n    return (\r\n        <AppModal buttons={[]} onButtonsPressed={onButtonsPressed} closeModal={closeModal}>\r\n            {/* <DetailsDiv info={info} imgPathBegin={imgPathBegin} photoPassword={photoPassword} /> */}\r\n            {div}\r\n            \r\n            \r\n        </AppModal>\r\n    );\r\n}","import React, {useState, useContext, useRef, useEffect} from 'react'; \r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport {Button, TextField, Link} from '@material-ui/core';\r\nimport Tab from '../common/HtmlComponents/Tab';\r\nimport InsidePageWrapper from '../common/HtmlComponents/InsidePageWrapper';\r\n\r\n// import DetailsDiv from '../Components/DetailsDiv';\r\nimport ItemList from '../List/ItemList';\r\nimport UserImg from '../common/Components/UserImg';\r\nimport UserInfoDiv from '../common/HtmlComponents/UserInfoDiv';\r\nimport DetailsDiv from '../common/Components/DetailsDiv';\r\n// import UserLink from '../co/HtmlComponents/UserLink';\r\n\r\nexport default function GroserModal() {\r\n    console.log('AppModal');\r\n    const {userData, globals, apiCall, openMsgModal, openYesNoModal, createUserInfo, showToast, showOtherUserList, groserModalData, forceUpdate} = useContext(GlobalContext); \r\n    \r\n    const [isMinimized, setIsMinimized] = useState(false);\r\n    const [tab, setTab] = useState(false);\r\n    \r\n    const {groser, items} = groserModalData.data;\r\n    let btns = ['Message', 'Items'];\r\n    if(userData.isShappers){\r\n        if(!userData.groserMode){\r\n            btns = ['Message', 'Hire']\r\n        }\r\n    }\r\n\r\n    console.log('groser: ', groser);\r\n    async function hireUser() {\r\n        console.log('hire user');\r\n        let response = await apiCall(globals.varNames.apiPath + 'map/hire', {hireeID: groser.userid});\r\n        console.log('response: ', response); \r\n        if(response.status == 1){\r\n            showToast('User hired successfully.', 3, false);\r\n        }\r\n    }\r\n    \r\n\r\n    function onButtonsPressed(button){\r\n        if(button == 'Message'){\r\n            // username, msg, msgID, headerID\r\n            openMsgModal(groser.username, '', 0, 0); \r\n        }else if(button == 'Items'){\r\n            showOtherUserList(groser.userid);  \r\n        }else if(button == 'Hire'){\r\n            openYesNoModal('Hire user?', hireUser);  \r\n        }\r\n    }\r\n\r\n    function onChangeTab(tab){\r\n        setTab(tab);\r\n    }\r\n\r\n    function closeModal(){\r\n        userData.openingGroserModal = false;\r\n        forceUpdate();\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        if(userData.showingOtherPage){\r\n            setIsMinimized(true);\r\n        }else{\r\n            setIsMinimized(false);   \r\n        }\r\n        \r\n    }, [userData.showingOtherPage]);\r\n\r\n    // let width = '100%';\r\n    // if(isMinimized){\r\n    //     width = '0%';\r\n    // }\r\n\r\n    let display = ' d-flex';\r\n    if(isMinimized){\r\n        display = ' d-none';\r\n    }\r\n\r\n    let itemsDiv = null;\r\n    let item = null;\r\n    if(groser.itemsNdx != null){\r\n        itemsDiv = <div className='px-1' style={{flex: 1, overflow: 'auto'}}>\r\n            {groser.itemsNdx.map((itemNum) => {\r\n                item = items[itemNum];\r\n                return <ItemList isSearch={true} key={item.id} item={item} fromModal={true} isUser={false}/>\r\n                \r\n                \r\n            })}\r\n        </div>  \r\n    }\r\n\r\n    // let page = <div className='d-flex'>\r\n    //     <UserImg imgPathBegin={globals.varNames.imgPath} imgURL={groser.imgurl} userID={userData.userID} photoPassword={userData.photoPassword} />    \r\n    //     <div className='d-flex flex-column'>\r\n    //         <span>{groser.username}</span>\r\n    //         <span>{groser.name}</span>\r\n    //         <span>{groser.description}</span>\r\n    //     </div>\r\n    // </div>\r\n    let imgPathBegin = globals.varNames.imgPath;\r\n    let photoPassword = userData.photoPassword;\r\n    // let userInfo = createUserInfo(groser, false);\r\n    // let companyInfo = createUserInfo(groser, true);\r\n\r\n    let page = <DetailsDiv info={groser} imgPathBegin={imgPathBegin} photoPassword={photoPassword} />\r\n    // let page = <UserInfoDiv userInfo={groser} imgPathBegin={globals.varNames.imgPath} photoPassword={userData.photoPassword} includeCompany={true} />\r\n\r\n    if(tab == 'Items'){\r\n        page = <div className='d-flex'>\r\n            {itemsDiv}\r\n        </div>\r\n    }\r\n\r\n    let mainDiv = <InsidePageWrapper onChangeTab={onChangeTab} tabs={['Profile', 'Items']}>\r\n        <div className='d-flex flex-column p-1'>\r\n            {page}\r\n        </div>\r\n        \r\n    </InsidePageWrapper>\r\n\r\n    if(userData.isShappers || itemsDiv == null){\r\n        mainDiv = <div style={{flex: 1}} className='d-flex flex-column'>\r\n            {page}   \r\n        </div>\r\n    }\r\n\r\n    return (\r\n       \r\n        // <ModalBase styleView={{paddingVertical: 15, paddingHorizontal: 5}} style={{position: 'absolute', top: 110, width: width, backgroundColor: 'white'}}>\r\n        //     <View>\r\n        //         <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n        //             <Button primary text='Close' onPress={closeModal} transparent />\r\n                        \r\n        //         </View>\r\n        //         <View>\r\n        //             <DetailsDiv info={groser} imgPathBegin={globals.varNames.imgPath} photoPassword={userData.photoPassword} />\r\n        //             {itemsDiv}\r\n        //         </View>\r\n                \r\n            \r\n        //         <View style={{flexDirection: 'row'}}>\r\n        //             {btns.map((button, id) => {\r\n        //                 return (\r\n        //                     <Button style={{container: {marginRight: 3}}} raised key={id} primary text={button} onPress={()=>onButtonsPressed(button)} />\r\n                            \r\n        //                 )\r\n                        \r\n        //             })}   \r\n\r\n        //         </View>\r\n        //     </View>\r\n            \r\n        // </ModalBase>\r\n        <div className={'shadow-lg flex-column p-3' + display} style={{position: 'absolute', backgroundColor: 'white', top: 70, right: 15, left: 15, bottom: 50, zIndex: 2}}>\r\n            <div className='d-flex flex-row mb-3' style={{justifyContent: 'flex-end'}}>\r\n                <Button onClick={closeModal}>Close</Button>\r\n            </div>\r\n            {/* <InsidePageWrapper onChangeTab={onChangeTab} tabs={['Profile', 'Items']}>\r\n                {page}\r\n            </InsidePageWrapper> */}\r\n            {mainDiv}\r\n            {/* <DetailsDiv info={groser} imgPathBegin={globals.varNames.imgPath} photoPassword={userData.photoPassword} />\r\n            <div style={{flex: 1, overflow: 'auto'}} className='d-flex flex-column mb-3 pb-4 px-3'>\r\n            \r\n                \r\n                {itemsDiv}\r\n            </div> */}\r\n            <Tab moreTabs={['haha']} headers={btns} isBtn={true} onChangeTab={onButtonsPressed} />\r\n            {/* <div style={{flex: 1, overflow: 'auto'}} className='p-3 d-flex flex-column'>\r\n                \r\n            </div> */}\r\n        </div>\r\n       \r\n       \r\n    );\r\n}","import React, {useState, useContext, useEffect, useImperativeHandle} from 'react'; \r\n// import {GlobalContext} from '../Context/GlobalProvider';\r\nimport {GlobalContext} from '../Context/GlobalProvider';\r\nimport PagesCom from '../common/MainViews/Pages';\r\n// import { View, Text } from 'react-native';\r\n// import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// import InsidePages from './InsidePages';\r\n// import OutsidePages from './OutsidePages';\r\n\r\n// import TestPage from './TestPage';\r\n// import * as Font from 'expo-font';\r\n// import { AppLoading } from 'expo';\r\n\r\nimport OtherProfilePage from '../common/Views/OtherProfilePage';\r\nimport OtherUserList from '../Views/OtherUserList';\r\nimport OtherPostPage from '../common/Views/OtherPostPage';\r\n// import CustomToast from '../common/HtmlComponents/CustomToast';\r\n// import NewMsgModal from '../Modals/NewMsgModal';\r\n// import StartPointModal from '../Modals/StartPointModal';\r\n// import YesNoModal from '../Modals/YesNoModal';\r\n// import MoreOptionsModal from '../Modals/MoreOptionsModal';\r\n\r\nimport NewItemModal from '../Modals/NewItemModal';\r\n// import EditMsgModal from '../Modals/EditMsgModal';\r\n// import HirerModal from '../Modals/HirerModal';\r\n// import HireeModal from '../Modals/HireeModal';\r\n// import ShapModal from '../Modals/ShapModal';\r\nimport ReviewModal from '../common/Modals/ReviewModal';\r\nimport VerifiedInfoModal from '../common/Modals/VerifiedInfoModal';\r\nimport BuyDataModal from '../common/Modals/BuyDataModal';\r\nimport ImageModal from '../common/Modals/ImageModal';\r\nimport UploadItemPhotoModal from '../Modals/UploadItemPhotoModal';\r\nimport SearchOptionsModal from '../common/Modals/SearchOptionsModal';\r\nimport NewPostModal from '../common/Modals/NewPostModal';\r\nimport PostOptionsModal from '../common/Modals/PostOptionsModal';\r\nimport UploadVerifiedPhotoModal from '../common/Modals/UploadVerifiedPhotoModal';\r\n// import EditVerifiedAccountModal from '../Modals/EditVerifiedAccountModal';\r\nimport NewTagModal from '../common/Modals/NewTagModal';\r\nimport NewSerchItemModal from '../common/Modals/NewSerchItemModal';\r\nimport InfoModal from '../common/Modals/InfoModal';\r\nimport BidModal from '../common/Modals/BidModal';\r\nimport DetailsModal from '../common/Modals/DetailsModal';\r\nimport GroserModal from '../Modals/GroserModal';\r\n\r\n\r\n\r\nexport default function Pages() {\r\n    console.log('PAGES');\r\n    const {userData, getUserData, globals, appData, forceUpdate, toastData, apiCall, initiateGlobals, singleModalData, otherPageData} = useContext(GlobalContext);\r\n    // const {getUserData} = useContext(GlobalContext);\r\n    \r\n\r\n    \r\n    // const [gotUserData, setGotUserData] = useState(false);\r\n    // console.disableYellowBox = true;\r\n\t// if(!userData.production){\r\n\t// \tglobals.varNames.apiPath = globals.varNames.devApi;\r\n    // }\r\n    \r\n    // function connectToSocket(){\r\n        \r\n    //     console.log('socket id: ', socket.sessionid);\r\n    // }\r\n    \r\n\r\n    \r\n    // const socket = io('http://localhost', {\r\n    //     path: '/myownpath'\r\n    // });\r\n    async function getUserToken(){\r\n        console.log('get user token');\r\n        // console.log('asyn storage: ', AsyncStorage);\r\n        let value = localStorage.getItem('userData');\r\n        console.log('value: ', value);\r\n        let userDataStorage = JSON.parse(value); \r\n        \r\n        if(userDataStorage != null){\r\n            console.log('userdata storage: ', userDataStorage);\r\n            // userData.token = userDataStorage.token;\r\n            getUserData(userDataStorage.token);\r\n            \r\n            \r\n            \r\n        }else{\r\n            userData.gotUserData = true;\r\n            userData.loggedIn = false;\r\n            forceUpdate();\r\n        }   \r\n        \r\n    }\r\n\r\n    function initiateVariables2(){\r\n        let beginPath = globals.varNames.beginPathProduction;\r\n        if(!userData.production){\r\n            beginPath = globals.varNames.beginPath;\r\n        }\r\n\r\n        let path = beginPath + ':' + globals.varNames.shappersPort;\r\n        let pathBlags = beginPath + ':' + globals.varNames.blagsPort;\r\n\r\n        appData.siteID = globals.varNames.shappersSiteID;\r\n        appData.name = globals.varNames.shappersName;\r\n\r\n        if(!userData.isShappers){\r\n\r\n            path = beginPath + ':' + globals.varNames.shapsPort;    \r\n            appData.siteID = globals.varNames.shapsSiteID;\r\n            appData.name = globals.varNames.shapsName;\r\n\r\n        }\r\n        \r\n        globals.varNames.apiPath = path + '/api/';\r\n        globals.varNames.blagsApiPath = pathBlags + '/api/';\r\n        globals.varNames.blagsServerPath = path;\r\n        globals.varNames.imgPath = path + '/upload/profile/';\r\n        globals.varNames.itemsImgPath = path + '/upload/item/';\r\n        globals.varNames.imgPathBlags = pathBlags + '/upload/profile/';\r\n        globals.varNames.verifiedPhotoPath = pathBlags + '/upload/verifiedPhoto/';\r\n\r\n        getWindowSize();\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n\r\n        console.log('app data: ', appData);\r\n        // appData.siteID = globals.varNames.shappersSiteID;\r\n        // if(!userData.production){\r\n        //     globals.varNames.apiPath = globals.varNames.devApi;\r\n        // }    \r\n    }\r\n\r\n    function initiateVariables(){\r\n        \r\n        \r\n        let siteName = userData.isShappers? globals.varNames.shappersName : globals.varNames.shapsName;\r\n        let port = userData.isShappers? globals.varNames.shappersPort : globals.varNames.shapsPort;\r\n        let portBlags = globals.varNames.blagsPort;\r\n        let siteNameBlags = userData.sosyalName;\r\n        // let beginPath = globals.varNames.beginPathProduction;\r\n        let beginPath = 'https://' + siteName + '/' + globals.varNames.beginPathProduction;\r\n        // let \r\n        let portFinal = '';\r\n        let portFinalBlags = '';\r\n        let beginPathBlags = 'https://' + siteNameBlags + '/' + globals.varNames.beginPathProduction;\r\n        if(!userData.production){\r\n            beginPath = globals.varNames.beginPath;\r\n            beginPathBlags = globals.varNames.beginPath;\r\n            portFinal = ':' + port;\r\n            portFinalBlags = ':' + portBlags;\r\n        }\r\n\r\n        let path = beginPath + portFinal;\r\n        let pathBlags = beginPathBlags + portFinalBlags;\r\n\r\n        appData.siteID = globals.varNames.shappersSiteID;\r\n        appData.name = globals.varNames.shappersName;\r\n\r\n        if(!userData.isShappers){\r\n\r\n            // path = beginPath + ':' + globals.varNames.shapsPort;    \r\n            appData.siteID = globals.varNames.shapsSiteID;\r\n            appData.name = globals.varNames.shapsName;\r\n\r\n        }\r\n        \r\n        globals.varNames.apiPath = path + '/api/';\r\n        globals.varNames.blagsApiPath = pathBlags + '/api/';\r\n        globals.varNames.blagsServerPath = path;\r\n        globals.varNames.imgPath = path + '/upload/profile/';\r\n        globals.varNames.itemsImgPath = path + '/upload/item/';\r\n        globals.varNames.imgPathBlags = pathBlags + '/upload/profile/';\r\n        globals.varNames.verifiedPhotoPath = pathBlags + '/upload/verifiedPhoto/';\r\n\r\n        getWindowSize();\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n\r\n        console.log('app data: ', appData);\r\n        // appData.siteID = globals.varNames.shappersSiteID;\r\n        // if(!userData.production){\r\n        //     globals.varNames.apiPath = globals.varNames.devApi;\r\n        // }    \r\n    }\r\n\r\n    async function getGlobals(){\r\n        console.log('get user token');\r\n        // console.log('asyn storage: ', AsyncStorage);\r\n        \r\n\r\n        let response = await apiCall(globals.varNames.blagsApiPath + 'user/getGlobals', {});\r\n        \r\n        console.log('response: ', response);\r\n        if(response.status == 1){\r\n            initiateGlobals(response.payload);\r\n            // userData.token = response.data.payload;\r\n            // AsyncStorage.setItem('userData', JSON.stringify({token: userData.token}));\r\n            \r\n              \r\n        }  \r\n        \r\n    }\r\n\r\n    // async function loadFont(){\r\n    //     await Font.loadAsync({\r\n    //         Roboto: require('native-base/Fonts/Roboto.ttf'),\r\n    //         Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\r\n    //         ...Ionicons.font,\r\n            \r\n    //     });\r\n    //     setFontLoaded(true);\r\n    // }\r\n\r\n    function getWindowSize(){\r\n        let width = window.innerWidth;\r\n        let size = 'lg';\r\n        if(width >= 769 && width < 980){\r\n            size = 'md';\r\n        }else if(width >= 480 && width < 769){\r\n            size = 'sm';\r\n        }else if(width < 480){\r\n            size = 'xm';   \r\n        }\r\n\r\n        return size;\r\n    }\r\n    \r\n    function closeToast(){\r\n        userData.showingToast = false;\r\n        forceUpdate();\r\n    }\r\n\r\n    function closeOtherPage(){\r\n        userData.showingOtherPage = false;\r\n        forceUpdate();\r\n    }\r\n\r\n    function closeSingleModal(){\r\n        userData.openingSingleModal = false;\r\n        forceUpdate();\r\n    }\r\n\r\n    function updateDimensions(){\r\n        console.log('UPDATE DIMENSIONS');\r\n        let SIZE = getWindowSize();\r\n        \r\n        if(userData.windowSize != SIZE){\r\n            userData.windowSize = SIZE\r\n            forceUpdate();\r\n        }\r\n    }\r\n\r\n    async function pageLoad(){\r\n        initiateVariables();\r\n        // loadFont();\r\n        await getGlobals();\r\n        getUserToken();\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        \r\n        pageLoad();\r\n        // await getUserToken(userData, getUserData);\r\n    }, []);\r\n    \r\n    // let page = <OutsidePages key={userData.pageNum}/>\r\n    // if(userData.loggedIn){\r\n    //     page = <InsidePages key={userData.pageNum}/>\r\n    // }\r\n\r\n    // let finalPage = page;\r\n    // if(userData.showingOtherPage){\r\n    //     finalPage = <OtherProfilePage key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n    //     if(otherPageData.name == 'Other List'){\r\n    //         finalPage = <OtherUserList key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n    //     }else if(otherPageData.name == 'Other Post'){\r\n    //         finalPage = <OtherPostPage key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n    //     }\r\n    // }\r\n\r\n    let otherPage = <OtherProfilePage key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n    if(otherPageData.name == 'Other List'){\r\n        otherPage = <OtherUserList key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n    }else if(otherPageData.name == 'Other Post'){\r\n        otherPage = <OtherPostPage key={userData.otherPageNum} closeOtherPage={closeOtherPage}/>;\r\n    }\r\n\r\n    // let toast = null;\r\n    // if(userData.showingToast){\r\n    //     toast = <CustomToast isError={toastData.isError} closeToast={closeToast} message={toastData.message} duration={toastData.duration} />\r\n    // }\r\n\r\n    // let msgModal = null;\r\n    // if(userData.openingMsgModal){\r\n    //     msgModal = <NewMsgModal/>\r\n    // }\r\n\r\n    // let startPtModal = null;\r\n    // if(userData.openingStartPtModal){\r\n    //     startPtModal = <StartPointModal />\r\n    // }\r\n\r\n    let groserModal = null;\r\n    if(userData.openingGroserModal){\r\n        groserModal = <GroserModal />\r\n    }\r\n\r\n    let singleModal = null;\r\n    if(userData.openingSingleModal){\r\n        // singleModal = <NewItemModal closeModal={closeSingleModal}/>;\r\n        if(singleModalData.name == 'Review'){\r\n            singleModal = <ReviewModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'New Item'){\r\n            singleModal = <NewItemModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Upload Item Photo'){\r\n            singleModal = <UploadItemPhotoModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Image'){\r\n            singleModal = <ImageModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Buy Data'){\r\n            singleModal = <BuyDataModal closeModal={closeSingleModal}/>;\r\n        // }else if(singleModalData.name == 'Edit Msg'){\r\n        //     singleModal = <EditMsgModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Post Options'){\r\n            singleModal = <PostOptionsModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Upload Verified Photo'){\r\n            singleModal = <UploadVerifiedPhotoModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Verified Info'){\r\n            singleModal = <VerifiedInfoModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'New Tag'){\r\n            singleModal = <NewTagModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'New Serch Item'){\r\n            singleModal = <NewSerchItemModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Info'){\r\n            singleModal = <InfoModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Bid'){\r\n            singleModal = <BidModal closeModal={closeSingleModal}/>;\r\n        }else if(singleModalData.name == 'Details'){\r\n            singleModal = <DetailsModal closeModal={closeSingleModal}/>;\r\n        \r\n        }else if(singleModalData.name == 'New Post'){\r\n            singleModal = <NewPostModal closeModal={closeSingleModal}/>;    \r\n        }else if(singleModalData.name == 'Search Options'){\r\n            singleModal = <SearchOptionsModal closeModal={closeSingleModal}/>;  \r\n        }      \r\n    }\r\n\r\n    // let yesNoModal = null;\r\n    // if(userData.openingYesNoModal){\r\n    //     yesNoModal = <YesNoModal/>\r\n    // }\r\n\r\n    // let moreOptionsModal = null;\r\n    // if(userData.openingMoreOptionsModal){\r\n    //     moreOptionsModal = <MoreOptionsModal />\r\n    // }\r\n\r\n    let app = null;\r\n    if(userData.gotUserData){\r\n        // app = <div style={{height: '100vh'}} className='d-flex flex-column'>\r\n\t\t// \t{/* {otherUserList}\r\n\t\t// \t{otherUser} */}\r\n        //     <PagesCom singleModal={singleModal} otherPage={otherPage} />\r\n            \r\n        //     {finalPage}\r\n        //     {groserModal}\r\n        //     {singleModal}\r\n        //     {startPtModal}\r\n        //     {msgModal}\r\n        //     {yesNoModal}\r\n        //     {moreOptionsModal}\r\n        //     {toast}\r\n        // </div>;\r\n        \r\n        app = <PagesCom singleModalInit={singleModal} otherPage={otherPage} groserModal={groserModal} />\r\n    }\r\n    return (\r\n        \r\n        app\r\n        \r\n        \r\n\r\n        \r\n    );\r\n}","\nimport './App.css';\nimport {GlobalProvider} from './Context/GlobalProvider';\n// import {GlobalProvider} from './common/Context/GlobalProvider';\n\nimport Pages from './MainViews/Pages';\n\n\nfunction App() {\n     return (\n          // <CommonProvider>\n               \n          // </CommonProvider>\n          <GlobalProvider>\n               <Pages/>   \n          \n          </GlobalProvider>\n          \n     );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}